MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=2.000
fGammaAdj=1.700
fDecay=1.000
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=2
bAdditiveWaves=1
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=1
bSolarize=1
bInvert=0
fWaveAlpha=4.100
fWaveScale=2.850
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=1.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=12.800
nMotionVectorsY=38.400
mv_dx=0.000
mv_dy=0.000
mv_l=0.800
mv_r=0.440
mv_g=0.650
mv_b=0.810
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=basstime=basstime+(bass*bass);
wave_0_per_frame2=t1=basstime*0.003;
wave_0_per_frame3=
wave_0_per_point1=//plot x,y,z to point on circle
wave_0_per_point2=smp=sample*6.283;
wave_0_per_point3=xp=sin(smp )*0.20;
wave_0_per_point4=yp=cos(smp )*0.20;
wave_0_per_point5=zp=0;
wave_0_per_point6=
wave_0_per_point7=
wave_0_per_point8=//alter shape;
wave_0_per_point9=angy=sin(sample*6.28*4 +t1 )*6.28;
wave_0_per_point10=xq=xp*cos(angy) - zp*sin(angy);
wave_0_per_point11=zq=xp*sin(angy) + zp*cos(angy);
wave_0_per_point12=xp=xq;
wave_0_per_point13=zp=zq;
wave_0_per_point14=
wave_0_per_point15=
wave_0_per_point16=//rotate on y axis;
wave_0_per_point17=angy=t1*0.1;
wave_0_per_point18=xq=xp*cos(angy) - zp*sin(angy);
wave_0_per_point19=zq=xp*sin(angy) + zp*cos(angy);
wave_0_per_point20=xp=xq;
wave_0_per_point21=zp=zq;
wave_0_per_point22=
wave_0_per_point23=//rotate on x axis
wave_0_per_point24=axs1 = sin(t1*0.15) + 1.6;
wave_0_per_point25=yq= yp*cos(axs1) - zp*sin(axs1);
wave_0_per_point26=zq= yp*sin(axs1) + zp*cos(axs1);
wave_0_per_point27=yp=yq;
wave_0_per_point28=zp=zq;
wave_0_per_point29=
wave_0_per_point30=//rotate on y axis again
wave_0_per_point31=axs2 = sin(t1*0.1)*3.3;
wave_0_per_point32=xq=xp*cos(axs2) - zp*sin(axs2);
wave_0_per_point33=zq=xp*sin(axs2) + zp*cos(axs2);
wave_0_per_point34=xp=xq;
wave_0_per_point35=zp=zq;
wave_0_per_point36=
wave_0_per_point37=//stretch y axis to compensate for aspect ratio
wave_0_per_point38=yp=yp*1.2;
wave_0_per_point39=
wave_0_per_point40=//push forward into viewpace
wave_0_per_point41=zp=zp+2.1;
wave_0_per_point42=
wave_0_per_point43=//project x,y,z into screenspace
wave_0_per_point44=xs=xp/zp;
wave_0_per_point45=ys=yp/zp;
wave_0_per_point46=
wave_0_per_point47=//center 0,0 in middle of screen
wave_0_per_point48=x=xs+0.5+q4;
wave_0_per_point49=y=ys+0.5+q5;
wave_0_per_point50=
wave_0_per_point51=r=1-q1;
wave_0_per_point52=g=1-q2;
wave_0_per_point53=b=1-q3;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=23
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.700
shapecode_0_rad=0.15493
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.01000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=y=bass_att*0.5+0.2;
shape_0_per_frame2=x=cos(time*2)*0.5+0.5;
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=1.80200
shapecode_1_ang=0.00000
shapecode_1_tex_ang=3.14159
shapecode_1_tex_zoom=0.57268
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=//ang = ang + (bass*.2) + (time*.4);
shape_1_per_frame2=//rad=1.781+(bass*0.025);
shape_1_per_frame3=ang=above(0.5,treb_att)*.063;
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.900
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.01000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shape_2_per_frame1=x = sin(time*5) * .4 + .5;
shape_2_per_frame2=y=treb_att*0.5;
shape_2_per_frame3=
shape_2_per_frame4=pow( (bass*.15),2);
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.03300
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.01000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=x=.5+(bass*0.07);
per_frame_init_1=
per_frame_init_2=//******** INITIALIZATION *********
per_frame_init_3=n = 0; loop (10000, gmegabuf(n)=0; n=n+1; ); 
per_frame_init_4=n = 0; loop (10000,  megabuf(n)=0; n=n+1; ); 
per_frame_init_5=trelx = 0;  trely = 0; trelz = 0;
per_frame_init_6=reg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;
per_frame_init_7=
per_frame_init_8=//Find random starting point
per_frame_init_9=while (exec2(
per_frame_init_10=  ran1 = rand(800)/100;  ran2 = rand(800)/100;  ran3 = rand(800)/100;
per_frame_init_11=  PosX = rand(10)-5;   PosY = rand(10)-5;   PosZ = rand(10)-5; 
per_frame_init_12=  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); 
per_frame_init_13=  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);
per_frame_init_14=
per_frame_init_15=  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;
per_frame_init_16=  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;
per_frame_init_17=  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;
per_frame_init_18=
per_frame_init_19=  //***********BOT*************
per_frame_init_20=  //Coord. Trans. must exactly match def in warp S. !!!!
per_frame_init_21=  dist = 0.001;
per_frame_init_22=  while (exec2(
per_frame_init_23=    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;
per_frame_init_24=    uvx += PosX; uvy += PosY; uvz += PosZ;
per_frame_init_25=    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);
per_frame_init_26=    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);
per_frame_init_27=    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);
per_frame_init_28=    uvx0 = uvx; uvy0 = uvy; uvz0 = uvz;
per_frame_init_29=    loop (7+1,
per_frame_init_30=      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));
per_frame_init_31=      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));
per_frame_init_32=      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));
per_frame_init_33=      slen = uvx*uvx + uvy*uvy + uvz*uvz;
per_frame_init_34=      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; 
per_frame_init_35=      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; 
per_frame_init_36=      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; 
per_frame_init_37=    );
per_frame_init_38=    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);
per_frame_init_39=    dist *= 1.05;
per_frame_init_40=  ,(dist < 0.6)*(len > 30)));
per_frame_init_41=,(dist < .2))); //end while
per_frame_init_42=
per_frame_init_43=
per_frame_init_44=//---------- some global vars, do not change -------------
per_frame_init_45=q7 = .1; //MyZoom
per_frame_init_46=q30 = 1; //logarithmic Z-Dist storage; unused
per_frame_init_47=q31 = 128;
per_frame_init_48=start = 1; travel = 0; RotZ = 0; look = 0; slow = 0;
per_frame_init_49=cran0 = rand(1);
per_frame_init_50=cran1 = rand(1);
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;
per_frame_16=//q31=mq31;
per_frame_17=
per_frame_18=monitor=mq1;
per_frame_19=vol=bass+treb+mid;
per_frame_20=atime=atime+vol;
per_frame_21=q11=.4+sin(atime*.006        )*.4;
per_frame_22=q12=.4+cos(atime*.00613828348)*.4;
per_frame_23=q13=.4+sin(atime*.00598593455)*.4;
per_frame_24=monitor=q13;
per_frame_25=fps_ = .9 * fps_ + .1*if(fps<=25,fps,25+.5*(fps-25)); 
per_frame_26=dec_s = 1-.03*30/fps_;
per_frame_27=
per_frame_28=beat = (time >  t0+2);
per_frame_29=t0 = if(beat, time, t0);
per_frame_30=
per_frame_31=speed = min(0.2,dist_-.0) * (1+avg) *(1-slow*.7);
per_frame_32=ds = ds * dec_s + (1-dec_s)*speed*.2/fps_ ; 
per_frame_33=
per_frame_34=RotZ = if (RotZ==0,beat*(rand(100)<10)*(rand(10)/10-.5),
per_frame_35=                   bnot(beat*(rand(100)<30))*RotZ);
per_frame_36=
per_frame_37=slow = if (bnot(slow), beat*(rand(1000*avg)<6), bnot(beat*(rand(100)<50)));
per_frame_38=look = if (bnot(look), beat*(rand(1000*speed)<5), bnot(beat));
per_frame_39=
per_frame_40=//Lamp View
per_frame_41=lx = if (beat,rand(150)/200+.15,lx);
per_frame_42=ly = if (beat,rand(150)/200+.15,ly);
per_frame_43=lampx = lampx * dec_s + (1-dec_s)*if (look,lx,0.5);
per_frame_44=lampy = lampy * dec_s + (1-dec_s)*if (look,ly,0.5);
per_frame_45=q1 = lampx; q2 = lampy;
per_frame_46=
per_frame_47=//Position 
per_frame_48=DirX= reg26; DirY= reg27; DirZ = reg28;
per_frame_49=PosX = PosX + ds*DirX ; PosY = PosY + ds*DirY; PosZ = PosZ + ds*DirZ; 
per_frame_50=q4 = PosX; q5 = PosY; q6 = PosZ;
per_frame_51=
per_frame_52=angchg = (.15-dist_)*(dist_ < .15)/2;
per_frame_53=travel = if (angchg > 0,0,travel+ds);
per_frame_54=v1 = v1 * dec_s + (1-dec_s)* RotZ * .05/fps_;
per_frame_55=v2 = v2 *dec_s + (1-dec_s)*angchg *xslope/fps_;
per_frame_56=v3 = v3 *dec_s + (1-dec_s)*(angchg *yslope/fps_ + v1/2 * (travel>1));
per_frame_57=
per_frame_58=//push old RotMat
per_frame_59=reg30 =reg20; reg31 =reg21; reg32 =reg22; 
per_frame_60=reg33 =reg23; reg34 =reg24; reg35 =reg25; 
per_frame_61=reg36 =reg26; reg37 =reg27; reg38 =reg28; 
per_frame_62=
per_frame_63=n = 0; avg = 0;
per_frame_64=loop (5,
per_frame_65=  n = n+1;
per_frame_66=  //new Rot. Mat for infinitesimal angles
per_frame_67=  ran1 = rand(100)/100;
per_frame_68=  ran2 = rand(100)/200-.25;
per_frame_69=  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;
per_frame_70=  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx); 
per_frame_71=  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);
per_frame_72=  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;
per_frame_73=  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;
per_frame_74=  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;
per_frame_75=
per_frame_76=  //pop old RotMat
per_frame_77=  reg20 =reg30; reg21 =reg31; reg22 =reg32; 
per_frame_78=  reg23 =reg33; reg24 =reg34; reg25 =reg35; 
per_frame_79=  reg26 =reg36; reg27 =reg37; reg28 =reg38; 
per_frame_80=
per_frame_81=  //Multiply new RotMat by old one
per_frame_82=  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;
per_frame_83=  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;
per_frame_84=  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;
per_frame_85=  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;
per_frame_86=  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;
per_frame_87=  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;
per_frame_88=  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;
per_frame_89=  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;
per_frame_90=  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;
per_frame_91=
per_frame_92=  reg20 =q20; reg21 =q21; reg22 =q22;
per_frame_93=  reg23 =q23; reg24 =q24; reg25 =q25;
per_frame_94=  reg26 =q26; reg27 =q27; reg28 =q28;
per_frame_95=
per_frame_96=  //***********BOT*************
per_frame_97=  //Coord. Trans. must exactly match def in warp S. !!!!
per_frame_98=  dist = 0.002;
per_frame_99=  while (exec2(
per_frame_100=    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;
per_frame_101=    uvx += PosX; uvy += PosY; uvz += PosZ;
per_frame_102=    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);
per_frame_103=    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);
per_frame_104=    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);
per_frame_105=    uvx0 = uvx; uvy0 = uvy; uvz0 = uvz;
per_frame_106=    loop (7+1,
per_frame_107=      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));
per_frame_108=      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));
per_frame_109=      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));
per_frame_110=      slen = uvx*uvx + uvy*uvy + uvz*uvz;
per_frame_111=      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; 
per_frame_112=      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; 
per_frame_113=      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; 
per_frame_114=    );
per_frame_115=    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);
per_frame_116=    dist *= 1.1;
per_frame_117=  ,(dist < 0.6)*(len > 30)));
per_frame_118=  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points
per_frame_119=  avg = avg+abs(megabuf(n)/5);
per_frame_120=); //end loop 5
per_frame_121=
per_frame_122=n = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));
per_frame_123=
per_frame_124=xslope = 1/avg*(megabuf(1)-megabuf(3));
per_frame_125=yslope =  1/avg*(megabuf(4)-megabuf(2));
per_frame_126=monitor = avg;
per_frame_127=dist_ = dist_*dec_s + (1-dec_s)*dist;
per_frame_128=
per_frame_129=//sustain
per_frame_130=q13 = 1-ds; //warp zoom uv 
per_frame_131=q14 = 4*abs(ds) + 6*(abs(v1) + 2*abs(v2) + 2*abs(v3)) + 1.0/255 + start*.1; 
per_frame_132=q18 = cran1; //brightness balance back/front
per_frame_133=q19 = .5 + .5*sin(time*.02+cran0*6); //brightness backgd
per_frame_134=start = start * .9;
per_pixel_1= warp = 0; dx = .00; zoom = 1; dy = 0;
warp_1=`sampler sampler_rand00;
warp_2=`sampler sampler_rand01;
warp_3=`sampler sampler_rand02;
warp_4=`
warp_5=`shader_body
warp_6=`{
warp_7=`    // sample previous frame
warp_8=`//mirror rt2
warp_9=`uv.x+=roam_sin.x;
warp_10=`uv.y-=roam_cos.x;
warp_11=`uv *=2 ;
warp_12=`float2 m = floor(frac(uv*0.5)*2);
warp_13=`uv = frac(uv)*(1-m) + (m)*frac(1-uv);
warp_14=`uv.x+=roam_sin.x;
warp_15=`uv.y+=roam_cos.x;
warp_16=`   ret =  tex2D( sampler_rand00, uv)*roam_sin.x;
warp_17=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_18=`                      ((uv.xyy*q27
warp_19=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_20=`                      ).xyz*
warp_21=`                      float3(1,1,0)*0.05 + 
warp_22=`                      time*float3(0,0,1)*q29
warp_23=`                     );
warp_24=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_25=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_26=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_27=`   ret += tex2D( sampler_rand01, uv)*roam_cos.y;
warp_28=`   ret += tex2D( sampler_rand02, uv)*roam_sin.z;
warp_29=`
warp_30=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`uv = 0.5 + (uv-0.5)*0.98;
comp_5=`    float2 d = texsize.zw*4;
comp_6=`    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
comp_7=`    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
comp_8=`
comp_9=`float4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05
comp_10=`                                        + time*float3(0,0,1)*0.2 );
comp_11=`uv -= float2(lum(dx),lum(dy))*0.04;
comp_12=`ret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));
comp_13=`ret *= lum(noise)*3; 
comp_14=`ret = pow(ret,0.5);
comp_15=`ret=1-ret;
comp_16=`}
