MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=0.955
fVideoEchoZoom=0.997
fVideoEchoAlpha=0.500
nVideoEchoOrientation=1
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=1.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=1.000
ob_a=1.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0001*cos(ma));
wave_1_per_point5=my=my+(.0001*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.1));
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0004*cos(ma));
wave_2_per_point5=my=my+(.0004*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx;
wave_2_per_point13=y=my;
wave_2_per_point14=
wave_2_per_point15=a=(above(bass+mid+treb,.3));
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_3_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_3_per_point3=
wave_3_per_point4=mx=mx+(.0008*cos(ma));
wave_3_per_point5=my=my+(.0008*sin(ma));
wave_3_per_point6=
wave_3_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_3_per_point8=my=if(above(my,.9),(.9-my),my);
wave_3_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_3_per_point10=my=if(below(my,.1),(.9+my),my);
wave_3_per_point11=
wave_3_per_point12=x=mx;
wave_3_per_point13=y=my;
wave_3_per_point14=
wave_3_per_point15=a=(above(bass+mid+treb,.2));
shapecode_0_enabled=1
shapecode_0_sides=14
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=512
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.01220
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.62832
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_0_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_0_per_frame3=
shape_0_per_frame4=mx=mx+(.0002*cos(ma));
shape_0_per_frame5=my=my+(.0002*sin(ma));
shape_0_per_frame6=
shape_0_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_0_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_0_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_0_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_0_per_frame11=
shape_0_per_frame12=x=mx;
shape_0_per_frame13=y=my;
shape_0_per_frame14=
shape_0_per_frame15=a=(above(bass+mid+treb,.8));
shapecode_1_enabled=1
shapecode_1_sides=23
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1024
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.01489
shapecode_1_ang=0.43982
shapecode_1_tex_ang=0.62832
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ma=ma+(above(bass,1)*3.1415*.05*bass);
shape_1_per_frame2=ma=ma-(above(mid,1)*3.1415*.05*mid);
shape_1_per_frame3=
shape_1_per_frame4=mx=mx+(.0001*cos(ma));
shape_1_per_frame5=my=my+(.0001*sin(ma));
shape_1_per_frame6=
shape_1_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_1_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_1_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_1_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_1_per_frame11=
shape_1_per_frame12=x=mx;
shape_1_per_frame13=y=my;
shape_1_per_frame14=
shape_1_per_frame15=a=(above(bass+mid+treb,.1));
shapecode_2_enabled=1
shapecode_2_sides=14
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=256
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.01525
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.62832
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ma=ma+(above(mid,1)*3.1415*.01*mid);
shape_2_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_2_per_frame3=
shape_2_per_frame4=mx=mx+(.0004*cos(ma));
shape_2_per_frame5=my=my+(.0004*sin(ma));
shape_2_per_frame6=
shape_2_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_2_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_2_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_2_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_2_per_frame11=
shape_2_per_frame12=x=mx;
shape_2_per_frame13=y=my;
shape_2_per_frame14=
shape_2_per_frame15=a=(above(bass+mid+treb,.3));
shapecode_3_enabled=1
shapecode_3_sides=14
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=256
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.01525
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.62832
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
shape_3_per_frame2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
shape_3_per_frame3=
shape_3_per_frame4=mx=mx+(.0008*cos(ma));
shape_3_per_frame5=my=my+(.0008*sin(ma));
shape_3_per_frame6=
shape_3_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_3_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_3_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_3_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_3_per_frame11=
shape_3_per_frame12=x=mx;
shape_3_per_frame13=y=my;
shape_3_per_frame14=
shape_3_per_frame15=a=(above(bass+mid+treb,.2));
per_frame_1=//martin no religion / my omniversal absence for changing the background light
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=runbass=runbass+vvb;
per_frame_12=runmids=runmids+vvm ;
per_frame_13=runtreb=runtreb+vvt;
per_frame_14=pi23=4*asin(-1)*.33333333333333;
per_frame_15=atime=(runtreb+runmids+runbass)*.05;
per_frame_16=q8= (sin(atime-0*pi23)+1)*.5;
per_frame_17=q9= (sin(atime-1*pi23)+1)*.5;
per_frame_18=q10=(sin(atime-2*pi23)+1)*.5;
per_frame_19=
per_frame_20=//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing
per_frame_21=vb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;
per_frame_22=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_23=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_24=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_25=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_26=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_27=vvb = min(1,max(0,vvb));
per_frame_28=vvm = min(1,max(0,vvm));
per_frame_29=vvt = min(1,max(0,vvt));
per_frame_30=q1   = (vvb+vvm+vvt)*10;
per_frame_31=q2   = (vvb+vvm+vvt)*10;
per_frame_32=q3   = (vvb+vvm+vvt)*10;
per_frame_33=q4   = (vvb+vvm+vvt)*10;
per_frame_34=q5   = (vvb+vvm+vvt)*10;
per_frame_35=q6   = (vvb+vvm+vvt)*10;
per_frame_36=q7   = (vvb+vvm+vvt)*10;
per_frame_37=q8   = (vvb+vvm+vvt)*10;
per_frame_38=q9   = (vvb+vvm+vvt)*10;
per_frame_39=q10  = (vvb+vvm+vvt)*10;
per_frame_40=q11  = (vvb+vvm+vvt)*10;
per_frame_41=q12  = (vvb+vvm+vvt)*10;
per_frame_42=q13  = (vvb+vvm+vvt)*10;
per_frame_43=q14  = (vvb+vvm+vvt)*10;
per_frame_44=q15  = (vvb+vvm+vvt)*10;
per_frame_45=q16  = (vvb+vvm+vvt)*10;
per_frame_46=q17  = (vvb+vvm+vvt)*10;
per_frame_47=q18  = (vvb+vvm+vvt)*10;
per_frame_48=q19  = (vvb+vvm+vvt)*10;
per_frame_49=q20  = (vvb+vvm+vvt)*10;
per_frame_50=q21  = (vvb+vvm+vvt)*10;
per_frame_51=q22  = (vvb+vvm+vvt)*10;
per_frame_52=q23  = (vvb+vvm+vvt)*10;
per_frame_53=q24  = (vvb+vvm+vvt)*10;
per_frame_54=q25  = (vvb+vvm+vvt)*10;
per_frame_55=q26  = (vvb+vvm+vvt)*10;
per_frame_56=q27  = (vvb+vvm+vvt)*10;
per_frame_57=q28  = (vvb+vvm+vvt)*10;
per_frame_58=q29  = (vvb+vvm+vvt)*10;
per_frame_59=q30  = (vvb+vvm+vvt)*10;
per_frame_60=q31  = (vvb+vvm+vvt)*10;
per_frame_61=q32  = (vvb+vvm+vvt)*10;
per_frame_62=
per_frame_63=warp = 0;
per_frame_64=zoom = 1.001;
per_frame_65=
per_frame_66=
per_frame_67=// Flexis dampened sound response functions
per_frame_68=
per_frame_69=db = db*0.98 + bass*0.2; // dampener
per_frame_70=bb = bb + db*0.1; // accumulation, replace time expressions with this ;)
per_frame_71=
per_frame_72=dt = dt*0.98 + treb*0.2;
per_frame_73=tt = tt + dt*0.1;
per_frame_74=
per_frame_75=dm = dm*0.98 + mid*0.2;
per_frame_76=mm = mm + dm*0.1;
per_frame_77=
per_frame_78=
per_frame_79=//***** [q11-q18] variables for Flexis caleidoscope shader code *****
per_frame_80=
per_frame_81=// change
per_frame_82=q13 = 0.5 + sin((bb-mm)*0.1)*0.25; // center x
per_frame_83=q14 = 0.5 + sin((tt-mm)*0.1)*0.25; // center y
per_frame_84=w = (bb-tt)*0.1;                   // angle
per_frame_85=q16 = 0.5 - (db-dt)*0.04;         // size
per_frame_86=
per_frame_87=//don't change
per_frame_88=q11 = sin(w);
per_frame_89=q12 = cos(w);
per_frame_90=q17 = sin(-w);
per_frame_91=q18 = cos(-w);
per_frame_92=q15 = 1/q16;
per_frame_93=
per_frame_94=chng=sin(time*.5);
per_frame_95=cthr=.9999;
per_frame_96=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_97=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_98=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_99=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_100=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_101=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_102=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_103=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_104=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_105=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_106=monitor=chng;
per_frame_107=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_108=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_109=
per_frame_110=monitor=mq1;
per_frame_111=vol=bass+treb+mid;
per_frame_112=atime=atime+vol;
per_frame_113=q11=.4+sin(atime*.006        )*.4;
per_frame_114=q12=.4+cos(atime*.00613828348)*.4;
per_frame_115=q13=.4+sin(atime*.00598593455)*.4;
per_frame_116=monitor=q13;
warp_1=`#define sampler_pic sampler_rand00
warp_2=`sampler2D sampler_pic;
warp_3=`
warp_4=`shader_body
warp_5=`{
warp_6=`    ret = tex2D( sampler_main, uv ).xyz;
warp_7=`
warp_8=`    // ERROR DIFFUSION DITHER - looks great
warp_9=`    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;
warp_10=`    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*1;
warp_11=`
warp_12=`    // mix in img...
warp_13=`    float3 pic = tex2D(sampler_pic, uv_orig*aspect.xy).xyz;
warp_14=`    float lum = lum(pic);
warp_15=`    float use_it = abs(lum*0.8+0.1 - (0.5+roam_cos.y*0.25));
warp_16=`    float LFNoise = tex2D(sampler_noise_lq, uv*0.1 + time*0.01).x*6-2;
warp_17=`    use_it = saturate(1 - use_it*(3+9*rand_preset.x) - LFNoise);
warp_18=`    ret = lerp(ret, pic, use_it.xxx);
warp_19=`
warp_20=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_21=`                      ((uv.xyy*q27
warp_22=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_23=`                      ).xyz*
warp_24=`                      float3(1,1,0)*0.05 + 
warp_25=`                      time*float3(0,0,1)*q29
warp_26=`                     );
warp_27=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_28=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_29=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_30=`    ret *= 0.97 + 0.03*saturate( length(uv - uv_orig)*200 );  // center only
warp_31=`}
warp_32=`
comp_1=`float2 rs;
comp_2=`sampler sampler_rand00;
comp_3=`float4 texsize_clouds2;
comp_4=`shader_body
comp_5=`{
comp_6=`uv *= aspect.xy;
comp_7=`float2 uv1 = (uv-.5);
comp_8=`
comp_9=`float2 hor = float2 (texsize.z,bass*texsize.y);
comp_10=`float2 ver = float2 (treb,mid*texsize.w);
comp_11=`float dx = lum(GetPixel (uv-hor)) - lum(GetPixel (uv+hor));
comp_12=`float dy = lum(GetPixel (uv-ver)) - lum(GetPixel (uv+ver));
comp_13=`float2 dz = float2 (20*dx,dy);
comp_14=`
comp_15=`uv1 = .3*tan((uv+.02*time)*6) + .3*dz;
comp_16=`float3 dots = saturate(.004*q26/length(uv1))*hue_shader;
comp_17=`
comp_18=`float3 clouds = (tex2D (sampler_rand00, uv_orig+dz));
comp_19=`clouds += lum(clouds)-.7;
comp_20=`
comp_21=`float3 ret1 = .1*tex2D(sampler_main, uv) ;
comp_22=`
comp_23=`ret = -2*ret1 + bass*dots  + .4*clouds;
comp_24=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_25=`                      ((uv1.xyy*q28
comp_26=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_27=`                      ).xyz*
comp_28=`                      float3(1,1,0)*0.05 + 
comp_29=`                      time*float3(0,0,1)*q31
comp_30=`                     );
comp_31=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_32=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_33=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_34=`ret=.3-ret;
comp_35=`}
