MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=0.995
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=3.786
fWaveScale=2.012
fWaveSmoothing=0.630
fWaveParam=0.300
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.050
ob_r=1.000
ob_g=0.000
ob_b=0.000
ob_a=0.100
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=ps = if(above(time-tin,tr),1,0);
wave_0_per_frame2=tin = if(ps,time,tin);
wave_0_per_frame3=
wave_0_per_frame4=sz = 3.5;
wave_0_per_frame5=
wave_0_per_frame6=xr = if(ps,int(rand(sz*10*2 + 1))*.1 - sz,xr);
wave_0_per_frame7=yr = if(ps,int(rand(sz*10*2*.75 + 1))*.1 - sz*.75,yr);
wave_0_per_frame8=tr = if(ps,int(rand(11))*.1*.1,tr);
wave_0_per_frame9=
wave_0_per_frame10=sr = if(ps,(int(rand(8))+3)*.1*.6,sr);
wave_0_per_frame11=
wave_0_per_frame12=bob = if(ps,int(rand(q5))*100,bob);
wave_0_per_frame13=
wave_0_per_frame14=t1 = xr + bob;
wave_0_per_frame15=t2 = yr + bob;
wave_0_per_frame16=t3 = sr;
wave_0_per_point1=sp = sample*6.28*8*8*4;
wave_0_per_point2=it = it+1;
wave_0_per_point3=it = it*above(sample,0);
wave_0_per_point4=sz = t3;
wave_0_per_point5=ss = sample*6;
wave_0_per_point6=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_0_per_point7=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_0_per_point8=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_0_per_point9=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_0_per_point10=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_0_per_point11=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_0_per_point12=
wave_0_per_point13=fov = .3;
wave_0_per_point14=
wave_0_per_point15=a = .05;
wave_0_per_point16=mod = (oz+1)*.5;
wave_0_per_point17=a = a*max(min(mod,1),0);
wave_0_per_point18=oz = oz - 2;
wave_0_per_point19=
wave_0_per_point20=ox = ox + t1;
wave_0_per_point21=oy = oy + t2;
wave_0_per_point22=
wave_0_per_point23=x = ox*fov/oz + 0.5;
wave_0_per_point24=x = (x-.5)*0.75 + 0.5;
wave_0_per_point25=y = oy*fov/oz + 0.5;
wave_0_per_point26=
wave_0_per_point27=r = 1;
wave_0_per_point28=g = .25+.25*sin(sp);
wave_0_per_point29=b = 0;
wave_0_per_point30=
wave_0_per_point31=minrgb = min(r,min(g,b));
wave_0_per_point32=maxrgb = max(r,max(g,b));
wave_0_per_point33=l = (maxrgb-minrgb)*.5;
wave_0_per_point34=diff = maxrgb-minrgb;
wave_0_per_point35=sum = maxrgb+minrgb;
wave_0_per_point36=s = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));
wave_0_per_point37=h = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));
wave_0_per_point38=h = h*0.1666666;
wave_0_per_point39=h = if(below(h,0),0,if(above(h,1),1,h));
wave_0_per_point40=
wave_0_per_point41=h = h + time*0.05*1.324;
wave_0_per_point42=h = h - int(h);
wave_0_per_point43=
wave_0_per_point44=tmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));
wave_0_per_point45=tmpa = 2*l - tmpb;
wave_0_per_point46=hvr = h + .333333;
wave_0_per_point47=hvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));
wave_0_per_point48=hvg = h;
wave_0_per_point49=hvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));
wave_0_per_point50=hvb = h - .333333;
wave_0_per_point51=hvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));
wave_0_per_point52=
wave_0_per_point53=r = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));
wave_0_per_point54=g = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));
wave_0_per_point55=b = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=ps = if(above(time-tin,tr),1,0);
wave_1_per_frame2=tin = if(ps,time,tin);
wave_1_per_frame3=
wave_1_per_frame4=sz = 3.5;
wave_1_per_frame5=
wave_1_per_frame6=xr = if(ps,int(rand(sz*10*2 + 1))*.1 - sz,xr);
wave_1_per_frame7=yr = if(ps,int(rand(sz*10*2*.75 + 1))*.1 - sz*.75,yr);
wave_1_per_frame8=tr = if(ps,int(rand(11))*.1*.1,tr);
wave_1_per_frame9=
wave_1_per_frame10=sr = if(ps,(int(rand(8))+3)*.1*.6,sr);
wave_1_per_frame11=
wave_1_per_frame12=bob = if(ps,int(rand(q5))*100,bob);
wave_1_per_frame13=
wave_1_per_frame14=t1 = xr + bob;
wave_1_per_frame15=t2 = yr + bob;
wave_1_per_frame16=t3 = sr;
wave_1_per_point1=sp = sample*6.28*8*8*4;
wave_1_per_point2=it = it+1;
wave_1_per_point3=it = it*above(sample,0);
wave_1_per_point4=sz = t3;
wave_1_per_point5=ss = sample*6;
wave_1_per_point6=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_1_per_point7=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_1_per_point8=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_1_per_point9=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_1_per_point10=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_1_per_point11=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_1_per_point12=
wave_1_per_point13=fov = .3;
wave_1_per_point14=
wave_1_per_point15=a = .05;
wave_1_per_point16=mod = (oz+1)*.5;
wave_1_per_point17=a = a*max(min(mod,1),0);
wave_1_per_point18=oz = oz - 2;
wave_1_per_point19=
wave_1_per_point20=ox = ox + t1;
wave_1_per_point21=oy = oy + t2;
wave_1_per_point22=
wave_1_per_point23=x = ox*fov/oz + 0.5;
wave_1_per_point24=x = (x-.5)*0.75 + 0.5;
wave_1_per_point25=y = oy*fov/oz + 0.5;
wave_1_per_point26=
wave_1_per_point27=r = 1+sin(sp);
wave_1_per_point28=g = 0.5 + 0.5*sin(sample*1.57);
wave_1_per_point29=b = 0.5 + 0.5*cos(sample*1.57);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=ps = if(above(time-tin,tr),1,0);
wave_2_per_frame2=tin = if(ps,time,tin);
wave_2_per_frame3=
wave_2_per_frame4=sz = 3.5;
wave_2_per_frame5=
wave_2_per_frame6=xr = if(ps,int(rand(sz*10*2 + 1))*.1 - sz,xr);
wave_2_per_frame7=yr = if(ps,int(rand(sz*10*2*.75 + 1))*.1 - sz*.75,yr);
wave_2_per_frame8=tr = if(ps,int(rand(11))*.1*.1,tr);
wave_2_per_frame9=
wave_2_per_frame10=sr = if(ps,(int(rand(8))+3)*.1*.6,sr);
wave_2_per_frame11=
wave_2_per_frame12=bob = if(ps,int(rand(q5))*100,bob);
wave_2_per_frame13=
wave_2_per_frame14=t1 = xr + bob;
wave_2_per_frame15=t2 = yr + bob;
wave_2_per_frame16=t3 = sr;
wave_2_per_point1=sp = sample*6.28*8*8*4;
wave_2_per_point2=it = it+1;
wave_2_per_point3=it = it*above(sample,0);
wave_2_per_point4=sz = t3;
wave_2_per_point5=ss = sample*6;
wave_2_per_point6=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_2_per_point7=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_2_per_point8=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_2_per_point9=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_2_per_point10=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_2_per_point11=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_2_per_point12=
wave_2_per_point13=fov = .3;
wave_2_per_point14=
wave_2_per_point15=a = .05;
wave_2_per_point16=mod = (oz+1)*.5;
wave_2_per_point17=a = a*max(min(mod,1),0);
wave_2_per_point18=oz = oz - 2;
wave_2_per_point19=
wave_2_per_point20=ox = ox + t1;
wave_2_per_point21=oy = oy + t2;
wave_2_per_point22=
wave_2_per_point23=x = ox*fov/oz + 0.5;
wave_2_per_point24=x = (x-.5)*0.75 + 0.5;
wave_2_per_point25=y = oy*fov/oz + 0.5;
wave_2_per_point26=
wave_2_per_point27=r = 1+sin(sp);
wave_2_per_point28=g = 0.5 + 0.5*sin(sample*1.57);
wave_2_per_point29=b = 0.5 + 0.5*cos(sample*1.57);
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=ps = if(above(time-tin,tr),1,0);
wave_3_per_frame2=tin = if(ps,time,tin);
wave_3_per_frame3=
wave_3_per_frame4=sz = 3.5;
wave_3_per_frame5=
wave_3_per_frame6=xr = if(ps,int(rand(sz*10*2 + 1))*.1 - sz,xr);
wave_3_per_frame7=yr = if(ps,int(rand(sz*10*2*.75 + 1))*.1 - sz*.75,yr);
wave_3_per_frame8=tr = if(ps,int(rand(11))*.1*.1,tr);
wave_3_per_frame9=
wave_3_per_frame10=sr = if(ps,(int(rand(8))+3)*.1*.6,sr);
wave_3_per_frame11=
wave_3_per_frame12=bob = if(ps,int(rand(q5))*100,bob);
wave_3_per_frame13=
wave_3_per_frame14=t1 = xr + bob;
wave_3_per_frame15=t2 = yr + bob;
wave_3_per_frame16=t3 = sr;
wave_3_per_point1=sp = sample*6.28*8*8*4;
wave_3_per_point2=it = it+1;
wave_3_per_point3=it = it*above(sample,0);
wave_3_per_point4=sz = t3;
wave_3_per_point5=ss = sample*6;
wave_3_per_point6=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_3_per_point7=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_3_per_point8=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_3_per_point9=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_3_per_point10=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_3_per_point11=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_3_per_point12=
wave_3_per_point13=fov = .3;
wave_3_per_point14=
wave_3_per_point15=a = .05;
wave_3_per_point16=mod = (oz+1)*.5;
wave_3_per_point17=a = a*max(min(mod,1),0);
wave_3_per_point18=oz = oz - 2;
wave_3_per_point19=
wave_3_per_point20=ox = ox + t1;
wave_3_per_point21=oy = oy + t2;
wave_3_per_point22=
wave_3_per_point23=x = ox*fov/oz + 0.5;
wave_3_per_point24=x = (x-.5)*0.75 + 0.5;
wave_3_per_point25=y = oy*fov/oz + 0.5;
wave_3_per_point26=
wave_3_per_point27=r = 1+sin(sp);
wave_3_per_point28=g = 0.5 + 0.5*sin(sample*1.57);
wave_3_per_point29=b = 0.5 + 0.5*cos(sample*1.57);
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.200
shapecode_0_y=0.300
shapecode_0_rad=0.27048
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=3.99914
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=x1 =0.5+ (int(rand(1000))-500)/2500;
per_frame_init_2=y1 =0.5+ (int(rand(1000))-500)/2500;
per_frame_init_3=x2 =0.5+ (int(rand(1000))-500)/2500;
per_frame_init_4=y2 =0.5+ (int(rand(1000))-500)/2500;
per_frame_init_5=x3 =0.5+ (int(rand(1000))-500)/2500;
per_frame_init_6=y3 =0.5+ (int(rand(1000))-500)/2500;
per_frame_init_7=x4 =0.5+ (int(rand(1000))-500)/2500;
per_frame_init_8=y4 =0.5+ (int(rand(1000))-500)/2500;
per_frame_1=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);
per_frame_2=treb_thresh=above(treb_att,treb_thresh)*2+
per_frame_3=(1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*0.96+1.3);
per_frame_4=mid_thresh=above(mid_att,mid_thresh)*2+
per_frame_5=(1-above(mid_mid_att,mid_thresh))*((mid_thresh-1.3)*0.96+1.3);
per_frame_6=vol_thresh=bass_thresh+treb_thresh+mid_thresh;
per_frame_7=q1=bass_thresh;
per_frame_8=q2=treb_thresh;
per_frame_9=q3=mid_thresh;
per_frame_10=q4=vol_thresh;
per_frame_11=q5=if(above(q1,q2),.5,-.5);
per_frame_12=q6=if(Above(q2,q3),.5,-.5);
per_frame_13=wave_r=.5+.3*sin(time*.54);
per_frame_14=wave_G=.2+.4*sin(time*.43);
per_frame_15=wave_b=.1+.4*Sin(time*.65);
per_frame_16=ob_r=ob_R-.1*sin(Time*.54);
per_frame_17=ob_b=wave_b;
per_frame_18=ob_G=wave_r;
per_frame_19=
per_frame_20=bounce = 0.8;
per_frame_21=d12 = 1/( sqr(x1-x2) + sqr(y1-y2));
per_frame_22=d13 = 1/( sqr(x1-x3) + sqr(y1-y3));
per_frame_23=d14 = 1/( sqr(x1-x4) + sqr(y1-y4));
per_frame_24=d23 = 1/( sqr(x2-x3) + sqr(y2-y3));
per_frame_25=d24 = 1/( sqr(x2-x4) + sqr(y2-y4));
per_frame_26=d34 = 1/( sqr(x3-x4) + sqr(y3-y4));
per_frame_27=vx1 = vx1 + (x2-x1)*d12 + (x3-x1)*d13 + (x4-x1)*d14;
per_frame_28=vy1 = vy1 + (y2-y1)*d12 + (y3-y1)*d13 + (y4-y1)*d14;
per_frame_29=vx2 = vx2 + (x1-x2)*d12 + (x3-x2)*d23 + (x4-x2)*d24;
per_frame_30=vy2 = vy2 + (y1-y2)*d12 + (y3-y2)*d23 + (y4-y2)*d24;
per_frame_31=vx3 = vx3 + (x1-x3)*d13 + (x2-x3)*d23 + (x4-x3)*d34;
per_frame_32=vy3 = vy3 + (y1-y3)*d13 + (y2-y3)*d23 + (y4-y3)*d34;
per_frame_33=vx4 = vx4 + (x1-x4)*d14 + (x2-x4)*d24 + (x3-x4)*d34;
per_frame_34=vy4 = vy4 + (y1-y4)*d14 + (y2-y4)*d24 + (y3-y4)*d34;
per_frame_35=dt = 0.00002;
per_frame_36=vx1 = if(above(x1,1),-abs(vx1)*bounce,if(below(x1,0),abs(vx1)*bounce,vx1));
per_frame_37=vx2 = if(above(x2,1),-abs(vx2)*bounce,if(below(x2,0),abs(vx2)*bounce,vx2));
per_frame_38=vx3 = if(above(x3,1),-abs(vx3)*bounce,if(below(x3,0),abs(vx3)*bounce,vx3));
per_frame_39=vx4 = if(above(x4,1),-abs(vx4)*bounce,if(below(x4,0),abs(vx4)*bounce,vx4));
per_frame_40=vy1 = if(above(y1,1),-abs(vy1)*bounce,if(below(y1,0),abs(vy1)*bounce,vy1));
per_frame_41=vy2 = if(above(y2,1),-abs(vy2)*bounce,if(below(y2,0),abs(vy2)*bounce,vy2));
per_frame_42=vy3 = if(above(y3,1),-abs(vy3)*bounce,if(below(y3,0),abs(vy3)*bounce,vy3));
per_frame_43=vy4 = if(above(y4,1),-abs(vy4)*bounce,if(below(y4,0),abs(vy4)*bounce,vy4));
per_frame_44=x1 = x1 + vx1*dt; y1 = y1 + vy1*dt;
per_frame_45=x2 = x2 + vx2*dt; y2 = y2 + vy2*dt;
per_frame_46=x3 = x3 + vx3*dt; y3 = y3 + vy3*dt;
per_frame_47=x4 = x4 + vx4*dt; y4 = y4 + vy4*dt;
per_frame_48=
per_frame_49=
per_frame_50=
per_frame_51=q11 =  0.5 - x1;
per_frame_52=q12 = -0.5 + y1;
per_frame_53=q13 =  0.5 - x2;
per_frame_54=q14 = -0.5 + y2;
per_frame_55=q15 =  0.5 - x3;
per_frame_56=q16 = -0.5 + y3;
per_frame_57=q17 =  0.5 - x4;
per_frame_58=q18 = -0.5 + y4;
per_frame_59=
per_pixel_1=zoome=zoom+.1*sin(rad-.05-zion*3.14*sin(Q5)+x-y*3.14*sin(Q6));
per_pixel_2=zion=if(Above(Rad,.05),rad-.03,ang-rad*3.14);;
per_pixel_3=zoom=if(Above(Q5,q6),zoome,zoom+.1*Sin(Rad*3.14*sin(q5-q6)));
per_pixel_4=dx=dx-.01*sin(zion*sin(Q5));
per_pixel_5=dy=dy+.01*sin(zion*sin(Q6));
per_pixel_6=rot=rot+.1*Sin(rad*3.14)*Sin(if(below(q1,q2),.5,-.5));
per_pixel_7=sx=sx+(.1*rad*sin(q1-.03)*sin(if(Above(Q2,q1),.5,-.5)));
per_pixel_8=sy=sy+(.1*rad*sin(Q2-.03)*sin(if(Above(Q1,q3),.5,-.5)));
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_main, uv ).xyz;
warp_5=`    
warp_6=`    // darken (decay) over time
warp_7=`    ret = ret- (ret*.5);
warp_8=`    ret = ret*(abs(GetBlur2(uv)-.5))*5;
warp_9=`    ret = ret - .01;
warp_10=`}
comp_1=`float2 factorA, factorB, product;
comp_2=`float2 numerator, denominator, fraction;
comp_3=`shader_body
comp_4=`{
comp_5=`float2 uvo = uv;
comp_6=`uv = (uv-0.5);
comp_7=`factorA = uv+ float2(q11,q12);
comp_8=`factorB = float2(8,0);
comp_9=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_10=`float2 uv1 = product;
comp_11=`factorA = uv+ float2(q13,q14);
comp_12=`factorB = float2(8,0);
comp_13=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_14=`float2 uv2 = product;
comp_15=`factorA = uv+ float2(q15,q16);
comp_16=`factorB = float2(8,0);
comp_17=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_18=`float2 uv3 = product;
comp_19=`factorA = uv+ float2(q17,q18);
comp_20=`factorB = float2(8,0);
comp_21=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_22=`float2 uv4 = product;
comp_23=`factorA = uv1;
comp_24=`factorB = uv2;
comp_25=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_26=`float2 uv12 = product;
comp_27=`factorA = uv3;
comp_28=`factorB = uv4;
comp_29=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_30=`float2 uv34 = product;
comp_31=`factorA = uv12;
comp_32=`factorB = uv34;
comp_33=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_34=`numerator = float2(1,0);
comp_35=`denominator = product;
comp_36=`fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
comp_37=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
comp_38=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
comp_39=`uv = fraction*2;
comp_40=`uv = lerp(0.5 + (uvo-0.5)*(2+(bass_att-treb_att)*0.02),uv+0.5,0.5);
comp_41=`
comp_42=`float l = length(uv-0.5);
comp_43=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5); // Eo.S. mirror code with cutted borders
comp_44=`    ret = tex2D(sampler_main, uv).xyz;
comp_45=`      // SUPER GLOW EDGES - looks awesome w/octopus
comp_46=`      float3 avg_col = GetBlur3(uv+.01*(bass+mid+treb));
comp_47=`      ret = abs(avg_col - ret)*6;
comp_48=`    ret *= 1.333; // a little bit of overbright
comp_49=`ret = lerp(ret,0,l*l*l);
comp_50=`}
