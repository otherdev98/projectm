MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.210
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=5
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=51.319
fWaveScale=0.943
fWaveSmoothing=0.900
fWaveParam=-0.500
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.010
fWarpScale=100.000
fZoomExponent=0.01559
fShader=1.000
zoom=0.99010
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=1.024
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=0.200
mv_g=0.200
mv_b=0.200
mv_a=0.400
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=r = min(1,max(0,r + 0.1*sin(mid_att*0.417 + 1)));
wave_0_per_frame2=g = min(1,max(0,g + 0.1*sin(treb_att*0.391 + 2)));
wave_0_per_frame3=b = min(1,max(0,b + 0.1*sin(mid_att*0.432 + 4)));
wave_0_per_frame4=r2 = min(1,max(0,r2 + 0.1*sin(mid_att*0.457 + 3)));
wave_0_per_frame5=g2 = min(1,max(0,g2 + 0.1*sin(treb_att*0.437 + 5)));
wave_0_per_frame6=b2 = min(1,max(0,b2 + 0.1*sin(mid_att*0.484 + 6)));
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=//a=(above(bass+mid+treb,.8));
wave_0_per_point16=a = bass_att * .35;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=r = min(1,max(0,r + 0.1*sin(mid_att*0.417 + 1)));
wave_1_per_frame2=g = min(1,max(0,g + 0.1*sin(treb_att*0.391 + 2)));
wave_1_per_frame3=b = min(1,max(0,b + 0.1*sin(mid_att*0.432 + 4)));
wave_1_per_frame4=r2 = min(1,max(0,r2 + 0.1*sin(mid_att*0.457 + 3)));
wave_1_per_frame5=g2 = min(1,max(0,g2 + 0.1*sin(treb_att*0.437 + 5)));
wave_1_per_frame6=b2 = min(1,max(0,b2 + 0.1*sin(mid_att*0.484 + 6)));
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_1_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0002*cos(ma));
wave_1_per_point5=my=my+(.0002*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=//a=(above(bass+mid+treb,.8));
wave_1_per_point16=a = bass_att * .35;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=r = min(1,max(0,r + 0.1*sin(mid_att*0.417 + 1)));
wave_2_per_frame2=g = min(1,max(0,g + 0.1*sin(treb_att*0.391 + 2)));
wave_2_per_frame3=b = min(1,max(0,b + 0.1*sin(mid_att*0.432 + 4)));
wave_2_per_frame4=r2 = min(1,max(0,r2 + 0.1*sin(mid_att*0.457 + 3)));
wave_2_per_frame5=g2 = min(1,max(0,g2 + 0.1*sin(treb_att*0.437 + 5)));
wave_2_per_frame6=b2 = min(1,max(0,b2 + 0.1*sin(mid_att*0.484 + 6)));
wave_2_per_point1=ma=ma+(above(bass,1)*3.1215*.01*bass);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1215*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0002*cos(ma));
wave_2_per_point5=my=my+(.0002*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx;
wave_2_per_point13=y=my;
wave_2_per_point14=
wave_2_per_point15=//a=(above(bass+mid+treb,.8));
wave_2_per_point16=a = bass_att * .35;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=80
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.370
shapecode_0_y=0.500
shapecode_0_rad=100.00000
shapecode_0_ang=3.64425
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.030
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=1.000
shape_0_init1=t1 = int(rand(100))*0.01;
shape_0_init2=t2 = int(rand(100))*0.01;
shape_0_per_frame1=tex_ang = time*(0.3 + 0.1*t1);
shape_0_per_frame2=rad = rad * (0.9 + 0.2*t2);
shape_0_per_frame3=r = min(1,max(0,r + 0.2*sin(treb_att*0.417 + 1)));
shape_0_per_frame4=g = min(1,max(0,g + 0.2*sin(mid_att*0.391 + 2)));
shape_0_per_frame5=b = min(1,max(0,b + 0.2*sin(treb_att*0.432 + 4)));
shape_0_per_frame6=r2 = min(1,max(0,r2 + 0.2*sin(time*0.657 + 3)));
shape_0_per_frame7=g2 = min(1,max(0,g2 + 0.2*sin(time*0.737 + 5)));
shape_0_per_frame8=b2 = min(1,max(0,b2 + 0.2*sin(time*0.884 + 6)));
shape_0_per_frame9=//a = 0 + sin(time) * .05;
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.370
shapecode_1_y=0.500
shapecode_1_rad=0.89796
shapecode_1_ang=3.64425
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.500
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_init1=t1 = int(rand(100))*0.01;
shape_1_init2=t2 = int(rand(100))*0.01;
shape_1_per_frame1=x = x + 0.05*(treb_att*0.15+3);
shape_1_per_frame2=y = y + 0.03*(mid_att*0.19+1);
shape_1_per_frame3=tex_ang = mid_att*(0.1 + 0.1*t1);
shape_1_per_frame4=r = 0.5 + 0.5*sin(frame*0.5);
shape_1_per_frame5=b = 0.5 + 0.5*sin(frame*0.5 + 2.094);
shape_1_per_frame6=g = 0.5 + 0.5*sin(frame*0.5 + 4.188);
shapecode_2_enabled=1
shapecode_2_sides=100
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.670
shapecode_2_y=0.430
shapecode_2_rad=0.51386
shapecode_2_ang=4.20974
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_init1=t1 = int(rand(100))*0.01;
shape_2_init2=t2 = int(rand(100))*0.01;
shape_2_per_frame1=x = x + 0.05*sin(mid_att*0.17);
shape_2_per_frame2=y = y + 0.03*sin(treb_att*0.13);
shape_2_per_frame3=tex_ang = treb_att*(0.2 + 0.1*t1);
shape_2_per_frame4=rad = rad * (0.9 + 0.2*t2);
shape_2_per_frame5=r = min(1,max(0,r + 0.1*sin(mid_att*0.417 + 1)));
shape_2_per_frame6=g = min(1,max(0,g + 0.1*sin(treb_att*0.391 + 2)));
shape_2_per_frame7=b = min(1,max(0,b + 0.1*sin(mid_att*0.432 + 4)));
shape_2_per_frame8=r2 = min(1,max(0,r2 + 0.1*sin(mid_att*0.457 + 3)));
shape_2_per_frame9=g2 = min(1,max(0,g2 + 0.1*sin(treb_att*0.437 + 5)));
shape_2_per_frame10=b2 = min(1,max(0,b2 + 0.1*sin(mid_att*0.484 + 6)));
shapecode_3_enabled=1
shapecode_3_sides=100
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.22298
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=0.600
shapecode_3_g=0.800
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=x = x + 0.2*sin(time*0.25);
shape_3_per_frame2=y = y + 0.1*sin(time*0.5+2);
shape_3_per_frame3=num_inst = num_inst + mid_att;
per_frame_init_1=x1 = 0.9;
per_frame_init_2=y1 = 0.5;
per_frame_init_3=
per_frame_init_4=x2 = 0.5; y2 = 0.5;
per_frame_init_5=x3 = 0.5; y3 = 0.5;
per_frame_init_6=x4 = 0.5; y4 = 0.5;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.99;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(5)*.3,mq29);
per_frame_12=mq30=if(above(chng,cthr),rand(1)*.3,mq30);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q30=mq30;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=zoom = 1;
per_frame_19=warp = 0;
per_frame_20=wave_a = 0;
per_frame_21=
per_frame_22=// elastic thread code
per_frame_23=
per_frame_24=xx1 = xx1*0.9 + (bass)*0.01;
per_frame_25=xx2 = xx2*0.9 + (treb)*0.01;
per_frame_26=yy1 = yy1*0.94 + (treb+bass)*0.0075;
per_frame_27=x1 = 0.5 + (xx1-xx2)*2;
per_frame_28=y1 = 0.4 + yy1*1.5;
per_frame_29=dt = 0.03/fps;
per_frame_30=vx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);
per_frame_31=vy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);
per_frame_32=vx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);
per_frame_33=vy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);
per_frame_34=vx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);
per_frame_35=vy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);
per_frame_36=x2 = x2 + vx2; y2 = y2 + vy2;
per_frame_37=x3 = x3 + vx3; y3 = y3 + vy3;
per_frame_38=x4 = x4 + vx4; y4 = y4 + vy4;
per_frame_39=vx2 = if(above(x2,0),vx2,abs(vx2)*0.5);
per_frame_40=vx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);
per_frame_41=vx3 = if(above(x3,0),vx3,abs(vx3)*0.5);
per_frame_42=vx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);
per_frame_43=vx4 = if(above(x4,0),vx4,abs(vx4)*0.5);
per_frame_44=vx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);
per_frame_45=vy2 = if(above(y2,0),vy2,abs(vy2)*0.5);
per_frame_46=vy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);
per_frame_47=vy3 = if(above(y3,0),vy3,abs(vy3)*0.5);
per_frame_48=vy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);
per_frame_49=vy4 = if(above(y4,0),vy4,abs(vy4)*0.5);
per_frame_50=vy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);
per_frame_51=q1 = x1;q2 = x2;q3 = x3;q4 = x4;
per_frame_52=q5 = y1;q6 = y2;q7 = y3;q8 = y4;
per_frame_53=q9 = 1/aspectx;
per_frame_54=q10 = 1/aspecty;
per_frame_55=q11 = aspectx;
per_frame_56=q12 = aspecty;
per_frame_57=q13 = sqrt(vx4*vx4 + vy4*vy4);
per_frame_58=q14 = atan2(vx4,vy4);
per_frame_59=q15 = sin(q14);
per_frame_60=q16 = cos(q14);
per_frame_61=
per_frame_62=// Flexi's beat detection
per_frame_63=vol = bass*8 + mid*4 + treb*2;
per_frame_64=vol = vol*above(vol,17);
per_frame_65=monitor = vol;
per_frame_66=beat = above(vol,res);
per_frame_67=diff = (1-beat)*diff + beat*(vol-res);
per_frame_68=res = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);
per_frame_69=res = max(0,res);
per_frame_70=
per_frame_71=z = max(0,if(beat,z+1.6,z-30/fps));
per_frame_72=
per_frame_73=zoom = 1 + z*0.004*60/fps;
per_frame_74=
warp_1=`float sigmoid(float t, float c){
warp_2=`   return 1 / ( 1 + exp(t*c));
warp_3=`}
warp_4=`
warp_5=`float2 vortex(float2 domain, float2 position, float2 motionVector, float4 domainAspect, float radius, float sharpness, float spin, float zoom){
warp_6=`   domain -= position;
warp_7=`   domain *= domainAspect.xy;
warp_8=`   float sigmoidFilter = sigmoid( length(domain) - radius , sharpness );
warp_9=`   domain +=  + motionVector*sigmoidFilter;
warp_10=`   spin *= sigmoidFilter;
warp_11=`   float s = sin(spin);
warp_12=`   float c = cos(spin);
warp_13=`   float2 uv_rot;
warp_14=`   uv_rot.x = c*domain.x - s*domain.y;
warp_15=`   uv_rot.y = s*domain.x + c*domain.y;
warp_16=`   uv_rot *= domainAspect.zw;
warp_17=`   uv_rot += position;
warp_18=`   return saturate(position + (uv_rot-position)*lerp(1,zoom,sigmoidFilter));
warp_19=`}
warp_20=`
warp_21=`shader_body
warp_22=`{
warp_23=`
warp_24=`float2 domain = uv;
warp_25=`float2 position = float2(q4,1-q8) + 0.5*0;
warp_26=`float2 motionVector = float2(-q15,q16)*q13*aspect.wz;
warp_27=`float4 domainAspect = aspect;
warp_28=`float radius = 0.05;
warp_29=`float sharpness = 50;
warp_30=`float spin = 0.4;
warp_31=`float zoom = 1.1;
warp_32=`
warp_33=`float2 uv_vortex = vortex( domain, position, motionVector, domainAspect, radius, sharpness, spin, zoom);
warp_34=`
warp_35=`uv = uv_vortex + texsize.zw*float2(0,0.15);
warp_36=`float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;
warp_37=`uv  -= (float2(0,1)*(lum(GetPixel(uv)-0.35))*texsize.zw*32)*(lum(GetPixel(uv))-0.4);
warp_38=`ret  = GetPixel(saturate(uv)) - 0.0011 + (tex2D(sampler_noise_lq, dither_uv)-0.5)*0.0038;    
warp_39=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_40=`                      ((uv.xyy*q27
warp_41=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_42=`                      ).xyz*
warp_43=`                      float3(1,1,0)*0.05 + 
warp_44=`                      time*float3(0,0,1)*q29
warp_45=`                     );
warp_46=`if(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y -= (noise9).x*.5; 
warp_47=`if(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z -= (noise9).y*.5; 
warp_48=`if(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x -= (noise9).z*.5; 
warp_49=`
warp_50=`ret-=roam_sin.wzy*roam_cos.zxy*.3;
warp_51=`}
comp_1=`float2 uvo, factorA, factorB, product, numerator, denominator, fraction;
comp_2=`shader_body
comp_3=`{
comp_4=`uvo = uv;
comp_5=`factorA = uv-float2(1-0.5,0.5);
comp_6=`factorB = float2(0,-512);
comp_7=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_8=`numerator = float2(1,0);
comp_9=`denominator = product;
comp_10=`fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
comp_11=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
comp_12=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
comp_13=`uv = fraction.yx*float2(-1,1)*20;
comp_14=`uv = lerp(0.5 + (uvo-0.5)*2,uv+0.5,0.5);
comp_15=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.98; // Eo.S. mirror code with cutted borders
comp_16=`
comp_17=`    float2 d = texsize.zw;
comp_18=`    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );
comp_19=`    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );
comp_20=`float2 dz = float2(dx.y,dy.y)*3;
comp_21=`
comp_22=`d = texsize.zw*2;
comp_23=`dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) )*0.5;
comp_24=`dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) )*0.5;
comp_25=`
comp_26=`dz +=float2(dx.y,dy.y);
comp_27=`
comp_28=`float3 bg = pow(length(dz)*0.8+0,0.7) + GetBlur2(uv).y*0.4-0.1;
comp_29=`
comp_30=`ret = bg*float3(0.3,0.5,0.7);
comp_31=`ret = lerp(ret,float3(0.2,0.1,0),GetPixel(uv + float2(dx.x,dy.x)*texsize.zw*18).x*6);
comp_32=`ret = lerp(ret,1,GetPixel(uv).z);
comp_33=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_34=`                      ((uv.xyy*q28
comp_35=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_36=`                      ).xyz*
comp_37=`                      float3(1,1,0)*0.05 + 
comp_38=`                      time*float3(0,0,1)*q30 
comp_39=`                     );
comp_40=`if(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.z -= (noise9).x*.5; 
comp_41=`if(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.x -= (noise9).y*.5; 
comp_42=`if(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.y -= (noise9).z*.5; 
comp_43=`
comp_44=`}
