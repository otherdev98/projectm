MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=0.940
fVideoEchoZoom=3.652
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=1
bSolarize=0
bInvert=1
fWaveAlpha=0.001
fWaveScale=0.010
fWaveSmoothing=0.000
fWaveParam=0.000
fModWaveAlphaStart=1.000
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000
fWarpScale=1.002
fZoomExponent=1.00183
fShader=0.000
zoom=1.07749
rot=0.00000
cx=0.500
cy=0.500
dx=0.00500
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.030
ib_r=0.380
ib_g=0.270
ib_b=0.030
ib_a=0.300
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=4
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=0.09348
wavecode_0_smoothing=1.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=t2 = 0;
wave_0_init2=t3 = 0;
wave_0_init3=t4 = 0;
wave_0_init4=ab = 1;
wave_0_per_frame1=t1 = q1;
wave_0_per_frame2=t2 = q2;
wave_0_per_frame3=t3 = q3;
wave_0_per_frame4=t4 = q4;
wave_0_per_frame5=t5 = q5;
wave_0_per_frame6=t6 = q6;
wave_0_per_point1=s8 = sample*383;
wave_0_per_point2=dir = s8*0.125*3.1415*0.5;
wave_0_per_point3=v = 0.0005;
wave_0_per_point4=t1 = 0;//value1*0.01;//t1*0.97 + value1*v;
wave_0_per_point5=d = 1;
wave_0_per_point6=xx = sin(dir+10*time)*(sample*d+t1);
wave_0_per_point7=yy = cos(dir+10*time)*(sample*d+t1);
wave_0_per_point8=zz = cos(sample*1000+time*5)*0.0;//value2*0.05*sample;
wave_0_per_point9=v = 0.001;
wave_0_per_point10=
wave_0_per_point11=w = 1-(sample-0.5)*t6;//(sample*sin(time*0.3)*0.02-1);
wave_0_per_point12=s1 = sin(t2*w);
wave_0_per_point13=s2 = sin(t3*w);
wave_0_per_point14=s3 = sin(t4*w);
wave_0_per_point15=c1 = cos(t2*w);
wave_0_per_point16=c2 = cos(t3*w);
wave_0_per_point17=c3 = cos(t4*w);
wave_0_per_point18=
wave_0_per_point19=z = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;
wave_0_per_point20=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
wave_0_per_point21=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
wave_0_per_point22=
wave_0_per_point23=a = 2;
wave_0_per_point24=zoom = 0.5*atan2(a-z,a);//0.5*(1/(z+a));
wave_0_per_point25=x = 0.5 + zoom*x1;
wave_0_per_point26=y = 0.5 + zoom*y1;
wave_0_per_point27=
wave_0_per_point28=pi3 = 3.1415*2*0.3333;
wave_0_per_point29=t = -z*1.2+t5*20;
wave_0_per_point30=c = 10;
wave_0_per_point31=r = sin(t)*c;
wave_0_per_point32=
wave_0_per_point33=g = sin(t+pi3)*c;
wave_0_per_point34=
wave_0_per_point35=b = sin(t-pi3)*c;
wave_0_per_point36=
wave_0_per_point37=j = 0.71;
wave_0_per_point38=//r = 0.5+xx*j;
wave_0_per_point39=//g = 0.5+yy*j;
wave_0_per_point40=//b = 0.5+zz*j;
wave_0_per_point41=
wave_0_per_point42=r = if(above(r,1),1,r);
wave_0_per_point43=r = if(below(r,0),0,r);
wave_0_per_point44=g = if(above(g,1),1,g);
wave_0_per_point45=g = if(below(g,0),0,g);
wave_0_per_point46=b = if(above(b,1),1,b);
wave_0_per_point47=b = if(below(b,0),0,b);
wave_0_per_point48=
wave_0_per_point49=
wave_0_per_point50=a = sigmoid(-z,2)*1.0+0.0;
wavecode_1_enabled=0
wavecode_1_samples=484
wavecode_1_sep=4
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=9.94125
wavecode_1_smoothing=1.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=t2 = 0;
wave_1_init2=t3 = 0;
wave_1_init3=t4 = 0;
wave_1_init4=ab = 1;
wave_1_per_frame1=t1 = q1;
wave_1_per_frame2=t2 = q2;
wave_1_per_frame3=t3 = q3;
wave_1_per_frame4=t4 = q4;
wave_1_per_frame5=t5 = q5;
wave_1_per_frame6=t6 = q6;
wave_1_per_point1=s8 = sample*383;
wave_1_per_point2=
wave_1_per_point3=s = 0.25;
wave_1_per_point4=xx = ((sample*(465))%15 - 8)*s*2;
wave_1_per_point5=yy = ((sample*31)%31 - 16)*s;
wave_1_per_point6=zz = value1+sin(time+yy*0.3)*1;
wave_1_per_point7=
wave_1_per_point8=d = sqrt( xx*xx + yy*yy + zz*zz);
wave_1_per_point9=w = 1+d*0.0003*t6;//(sample*sin(time*0.3)*0.02-1);
wave_1_per_point10=s1 = sin(t2*w);
wave_1_per_point11=s2 = sin(t3*w);
wave_1_per_point12=s3 = sin(t4*w);
wave_1_per_point13=c1 = cos(t2*w);
wave_1_per_point14=c2 = cos(t3*w);
wave_1_per_point15=c3 = cos(t4*w);
wave_1_per_point16=
wave_1_per_point17=
wave_1_per_point18=z = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;
wave_1_per_point19=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
wave_1_per_point20=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
wave_1_per_point21=
wave_1_per_point22=a = 500;
wave_1_per_point23=zoom = 0.05*atan2(a-z,a);//0.5*(1/(z+a));
wave_1_per_point24=x = 0.5 + zoom*x1;
wave_1_per_point25=y = 0.5 + zoom*y1;
wave_1_per_point26=
wave_1_per_point27=pi3 = 3.1415*2*0.3333;
wave_1_per_point28=t = -z*0.5+t5;
wave_1_per_point29=c = 10;
wave_1_per_point30=r = sin(t)*c;
wave_1_per_point31=
wave_1_per_point32=g = sin(t+pi3)*c;
wave_1_per_point33=
wave_1_per_point34=b = sin(t-pi3)*c;
wave_1_per_point35=
wave_1_per_point36=j = 0.71;
wave_1_per_point37=//r = 0.5+xx*j;
wave_1_per_point38=//g = 0.5+yy*j;
wave_1_per_point39=//b = 0.5+zz*j;
wave_1_per_point40=
wave_1_per_point41=r = if(above(r,1),1,r);
wave_1_per_point42=r = if(below(r,0),0,r);
wave_1_per_point43=g = if(above(g,1),1,g);
wave_1_per_point44=g = if(below(g,0),0,g);
wave_1_per_point45=b = if(above(b,1),1,b);
wave_1_per_point46=b = if(below(b,0),0,b);
wave_1_per_point47=
wave_1_per_point48=
wave_1_per_point49=a = sigmoid(-z,0.25)*1.0+0.0;
wavecode_2_enabled=0
wavecode_2_samples=484
wavecode_2_sep=4
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=9.94125
wavecode_2_smoothing=1.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_init1=t2 = 0;
wave_2_init2=t3 = 0;
wave_2_init3=t4 = 0;
wave_2_init4=ab = 1;
wave_2_per_frame1=t1 = q1;
wave_2_per_frame2=t2 = q2;
wave_2_per_frame3=t3 = q3;
wave_2_per_frame4=t4 = q4;
wave_2_per_frame5=t5 = q5;
wave_2_per_frame6=t6 = q6;
wave_2_per_point1=s8 = sample*383;
wave_2_per_point2=
wave_2_per_point3=s = 0.25;
wave_2_per_point4=xx = ((sample*(465))%15 - 8)*s*2;
wave_2_per_point5=zz = ((sample*31)%31 - 16)*s;
wave_2_per_point6=yy = value1+sin(time +xx*0.3)*1;
wave_2_per_point7=
wave_2_per_point8=d = sqrt( xx*xx + yy*yy + zz*zz);
wave_2_per_point9=w = 1+d*0.0003*t6;//(sample*sin(time*0.3)*0.02-1);
wave_2_per_point10=s1 = sin(t2*w);
wave_2_per_point11=s2 = sin(t3*w);
wave_2_per_point12=s3 = sin(t4*w);
wave_2_per_point13=c1 = cos(t2*w);
wave_2_per_point14=c2 = cos(t3*w);
wave_2_per_point15=c3 = cos(t4*w);
wave_2_per_point16=
wave_2_per_point17=
wave_2_per_point18=z = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;
wave_2_per_point19=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
wave_2_per_point20=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
wave_2_per_point21=
wave_2_per_point22=a = 500;
wave_2_per_point23=zoom = 0.05*atan2(a-z,a);//0.5*(1/(z+a));
wave_2_per_point24=x = 0.5 + zoom*x1;
wave_2_per_point25=y = 0.5 + zoom*y1;
wave_2_per_point26=
wave_2_per_point27=pi3 = 3.1415*2*0.3333;
wave_2_per_point28=t = -z*0.5+t5;
wave_2_per_point29=c = 10;
wave_2_per_point30=r = sin(t)*c;
wave_2_per_point31=
wave_2_per_point32=g = sin(t+pi3)*c;
wave_2_per_point33=
wave_2_per_point34=b = sin(t-pi3)*c;
wave_2_per_point35=
wave_2_per_point36=j = 0.71;
wave_2_per_point37=//r = 0.5+xx*j;
wave_2_per_point38=//g = 0.5+yy*j;
wave_2_per_point39=//b = 0.5+zz*j;
wave_2_per_point40=
wave_2_per_point41=r = if(above(r,1),1,r);
wave_2_per_point42=r = if(below(r,0),0,r);
wave_2_per_point43=g = if(above(g,1),1,g);
wave_2_per_point44=g = if(below(g,0),0,g);
wave_2_per_point45=b = if(above(b,1),1,b);
wave_2_per_point46=b = if(below(b,0),0,b);
wave_2_per_point47=
wave_2_per_point48=
wave_2_per_point49=a = sigmoid(-z,0.25)*1.0+0.0;
wavecode_3_enabled=0
wavecode_3_samples=484
wavecode_3_sep=4
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=9.94125
wavecode_3_smoothing=1.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_init1=t2 = 0;
wave_3_init2=t3 = 0;
wave_3_init3=t4 = 0;
wave_3_init4=ab = 1;
wave_3_per_frame1=t1 = q1;
wave_3_per_frame2=t2 = q2;
wave_3_per_frame3=t3 = q3;
wave_3_per_frame4=t4 = q4;
wave_3_per_frame5=t5 = q5;
wave_3_per_frame6=t6 = q6;
wave_3_per_point1=s8 = sample*383;
wave_3_per_point2=
wave_3_per_point3=s = 0.25;
wave_3_per_point4=yy = ((sample*(465))%15 - 8)*s*2;
wave_3_per_point5=zz = ((sample*31)%31 - 16)*s;
wave_3_per_point6=xx = value1+ sin(time+yy*0.3)*1;
wave_3_per_point7=
wave_3_per_point8=d = sqrt( xx*xx + yy*yy + zz*zz);
wave_3_per_point9=w = 1+d*0.0003*t6;//(sample*sin(time*0.3)*0.02-1);
wave_3_per_point10=s1 = sin(t2*w);
wave_3_per_point11=s2 = sin(t3*w);
wave_3_per_point12=s3 = sin(t4*w);
wave_3_per_point13=c1 = cos(t2*w);
wave_3_per_point14=c2 = cos(t3*w);
wave_3_per_point15=c3 = cos(t4*w);
wave_3_per_point16=
wave_3_per_point17=
wave_3_per_point18=z = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;
wave_3_per_point19=x1 = (c1*c2*xx + c1*s2*yy - s1*zz);
wave_3_per_point20=y1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);
wave_3_per_point21=
wave_3_per_point22=a = 500;
wave_3_per_point23=zoom = 0.05*atan2(a-z,a);//0.5*(1/(z+a));
wave_3_per_point24=x = 0.5 + zoom*x1;
wave_3_per_point25=y = 0.5 + zoom*y1;
wave_3_per_point26=
wave_3_per_point27=pi3 = 3.1415*2*0.3333;
wave_3_per_point28=t = -z*0.5+t5;
wave_3_per_point29=c = 10;
wave_3_per_point30=r = sin(t)*c;
wave_3_per_point31=
wave_3_per_point32=g = sin(t+pi3)*c;
wave_3_per_point33=
wave_3_per_point34=b = sin(t-pi3)*c;
wave_3_per_point35=
wave_3_per_point36=j = 0.71;
wave_3_per_point37=//r = 0.5+xx*j;
wave_3_per_point38=//g = 0.5+yy*j;
wave_3_per_point39=//b = 0.5+zz*j;
wave_3_per_point40=
wave_3_per_point41=r = if(above(r,1),1,r);
wave_3_per_point42=r = if(below(r,0),0,r);
wave_3_per_point43=g = if(above(g,1),1,g);
wave_3_per_point44=g = if(below(g,0),0,g);
wave_3_per_point45=b = if(above(b,1),1,b);
wave_3_per_point46=b = if(below(b,0),0,b);
wave_3_per_point47=
wave_3_per_point48=
wave_3_per_point49=a = sigmoid(-z,0.25)*1.0+0.0;
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.16611
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=21.85863
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.500
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_init1=vx = 0;
shape_0_init2=vy = 0;
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=1.99863
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.49831
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.080
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=1.21525
shapecode_2_ang=0.00000
shapecode_2_tex_ang=2.57611
shapecode_2_tex_zoom=0.55595
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=q1   = (vvb+vvm+vvt)*10;
per_frame_12=q2   = (vvb+vvm+vvt)*10;
per_frame_13=q3   = (vvb+vvm+vvt)*10;
per_frame_14=q4   = (vvb+vvm+vvt)*10;
per_frame_15=q5   = (vvb+vvm+vvt)*10;
per_frame_16=q6   = (vvb+vvm+vvt)*10;
per_frame_17=q7   = (vvb+vvm+vvt)*10;
per_frame_18=q8   = (vvb+vvm+vvt)*10;
per_frame_19=q9   = (vvb+vvm+vvt)*10;
per_frame_20=q10  = (vvb+vvm+vvt)*10;
per_frame_21=q11  = (vvb+vvm+vvt)*10;
per_frame_22=q12  = (vvb+vvm+vvt)*10;
per_frame_23=q13  = (vvb+vvm+vvt)*10;
per_frame_24=q14  = (vvb+vvm+vvt)*10;
per_frame_25=q15  = (vvb+vvm+vvt)*10;
per_frame_26=q16  = (vvb+vvm+vvt)*10;
per_frame_27=q17  = (vvb+vvm+vvt)*10;
per_frame_28=q18  = (vvb+vvm+vvt)*10;
per_frame_29=q19  = (vvb+vvm+vvt)*10;
per_frame_30=q20  = (vvb+vvm+vvt)*10;
per_frame_31=q21  = (vvb+vvm+vvt)*10;
per_frame_32=q22  = (vvb+vvm+vvt)*10;
per_frame_33=q23  = (vvb+vvm+vvt)*10;
per_frame_34=q24  = (vvb+vvm+vvt)*10;
per_frame_35=q25  = (vvb+vvm+vvt)*10;
per_frame_36=q26  = (vvb+vvm+vvt)*10;
per_frame_37=q27  = (vvb+vvm+vvt)*10;
per_frame_38=q28  = (vvb+vvm+vvt)*10;
per_frame_39=q29  = (vvb+vvm+vvt)*10;
per_frame_40=q30  = (vvb+vvm+vvt)*10;
per_frame_41=q31  = (vvb+vvm+vvt)*10;
per_frame_42=q32  = (vvb+vvm+vvt)*10;
per_frame_43=
per_frame_44=//spiral collide frame
per_frame_45=t = t + 2.5/fps;
per_frame_46=t = if(above(t,2),t-2,t);
per_frame_47=q22 = -t;
per_frame_48=// Flexis dampened sound response functions
per_frame_49=db = db*0.98 + bass_att*0.2; // dampener
per_frame_50=bb = bb + db*0.1; // accumulation, replace time expressions with this ;)
per_frame_51=dt = dt*0.98 + treb_att*0.2;
per_frame_52=tt = tt + dt*0.1;
per_frame_53=dm = dm*0.98 + mid_att*0.2;
per_frame_54=mm = mm + dm*0.1;
per_frame_55=//***** [q11-q18] variables for Flexis caleidoscope shader code *****
per_frame_56=// change
per_frame_57=q13 = 0.5 + sin((bb-mm)*0.1)*0.25; // center x
per_frame_58=q14 = 0.5 + sin((tt-mm)*0.1)*0.25; // center y
per_frame_59=w = (bb-tt)*0.1;                   // angle
per_frame_60=q16 = 0.8 - (db-dt)*0.04;         // size
per_frame_61=//don't change
per_frame_62=q11 = sin(w);
per_frame_63=q12 = cos(w);
per_frame_64=q17 = sin(-w);
per_frame_65=q18 = cos(-w);
per_frame_66=q15 = 1/q16;
per_frame_67=wave_mystery=abs(sin(time*0.51))*-1;
per_frame_68=cx=cx+(sin(time)*if(above(sin(time),0),(-1+bass),1.3))*0.5;
per_frame_69=cy=cy+(cos(time)*if(below(sin(time),0),(-1+bass),1.3))*0.6;
per_frame_70=mv_x=mv_x+sin(time/1.8)*3;
per_frame_71=mv_y=mv_x-sin(time/2)*3.5;
per_frame_72=wave_r=bass;
per_frame_73=wave_g=wave_g+sin(time*0.74)*0.3;
per_frame_74=wave_b=wave_b+sin(time*0.83)*0.2;
per_frame_75=mv_g=mv_g*abs(sin(time));
per_frame_76=mv_r=bass;
per_frame_77=mv_b=treb;
per_frame_78=ib_size=ib_size+bass*0.15;
per_frame_79=rot=sin(time)*0.03;
per_frame_80=ib_r=abs(sin(time*1.5))*0.4;
per_frame_81=ib_g=abs(sin(time*1.53))*0.5 ;
per_frame_82=ib_b=abs(sin(time*1.51))*0.45 ;
per_frame_83=monitor = q30;
per_frame_84=chng=sin(time*.5);
per_frame_85=cthr=.9999;
per_frame_86=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_87=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_88=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_89=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_90=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_91=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_92=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_93=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_94=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_95=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_96=monitor=chng;
per_frame_97=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_98=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_99=
per_frame_100=monitor=mq1;
per_frame_101=vol=bass+treb+mid;
per_frame_102=atime=atime+vol;
per_frame_103=q11=.4+sin(atime*.006        )*.4;
per_frame_104=q12=.4+cos(atime*.00613828348)*.4;
per_frame_105=q13=.4+sin(atime*.00598593455)*.4;
per_frame_106=monitor=q13;
per_frame_107=chng=sin(time*.5);
per_frame_108=cthr=.9999;
per_frame_109=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_110=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_111=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_112=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_113=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_114=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_115=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_116=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_117=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_118=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_119=monitor=chng;
per_frame_120=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_121=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_122=
per_frame_123=monitor=mq1;
per_frame_124=vol=bass+treb+mid;
per_frame_125=atime=atime+vol;
per_frame_126=q11=.4+sin(atime*.006        )*.4;
per_frame_127=q12=.4+cos(atime*.00613828348)*.4;
per_frame_128=q13=.4+sin(atime*.00598593455)*.4;
per_frame_129=monitor=q13;
per_frame_130=
per_pixel_1=zoom=zoom+rad*0.1;
warp_1=`sampler sampler_pw_noise_lq;
warp_2=`
warp_3=`float2 rs;
warp_4=`float3 noise, ret1;
warp_5=`
warp_6=`shader_body {
warp_7=`float2 p0 = -.0*float2(q6,q6);
warp_8=`uv = mul(uv,float2x2(_qb));
warp_9=`
warp_10=`
warp_11=`float corr = texsize.xy*texsize_noise_lq.zw;
warp_12=`float2 uv1 = (uv-.5+p0 );
warp_13=`
warp_14=`float h1 = .4;
warp_15=`
warp_16=`float z = +h1/abs(uv1.y);
warp_17=`rs.x = uv1.x * z;
warp_18=`rs.y = z + q30;
warp_19=`noise = tex2D(sampler_pw_noise_lq,rs/32);
warp_20=`noise *= (noise >= .9);
warp_21=`noise *= 1+.5*(lum(tex2D(sampler_noise_hq,16*rs))-.5);
warp_22=`ret1 = noise;
warp_23=`
warp_24=`z = 3*h1/abs(uv1.y);
warp_25=`rs.x = uv1.x * z;
warp_26=`rs.y = z + q30;
warp_27=`noise = tex2D(sampler_pw_noise_lq,rs/32);
warp_28=`noise *= (noise >= .9);
warp_29=`ret1 += noise;
warp_30=`
warp_31=`z = h1/abs(uv1.x);
warp_32=`rs.y = uv1.y * z;
warp_33=`rs.x = z + q30;
warp_34=`noise = tex2D(sampler_pw_noise_lq,rs/32);
warp_35=`noise *= (noise >= .9);
warp_36=`noise *= 1+.5*(lum(tex2D(sampler_noise_hq,16*rs))-.5);
warp_37=`ret1 += noise;
warp_38=`
warp_39=`z = 3*h1/abs(uv1.x);
warp_40=`rs.y = uv1.y * z;
warp_41=`rs.x = z + q30;
warp_42=`noise = tex2D(sampler_pw_noise_lq,rs/32);
warp_43=`noise *= (noise >= .9);
warp_44=`ret1 += noise;
warp_45=`
warp_46=`
warp_47=`ret = ret1;    
warp_48=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_49=`                      ((rs.xyy*q27
warp_50=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_51=`                      ).xyz*
warp_52=`                      float3(1,1,0)*0.05 + 
warp_53=`                      time*float3(0,0,1)*q29
warp_54=`                     );
warp_55=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_56=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_57=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_58=`}
comp_1=`shader_body
comp_2=`{
comp_3=`float2 uv2 = uv;
comp_4=`uv2.x=1-uv2.x;
comp_5=`
comp_6=`    float2 d  = texsize.zw*4;
comp_7=`    float2 d2 = texsize.zw*4;
comp_8=`
comp_9=`    float3 dx  = ( GetBlur1(uv +float2(1,0)*d )-GetBlur1(uv2-float2(1,0)*d2) );
comp_10=`    float3 dx2 = ( GetBlur1(uv2+float2(1,0)*d2)-GetBlur1(uv -float2(0,1)*d ) );
comp_11=`
comp_12=`    float3 dy  = ( GetBlur1(uv2+float2(0,1)*d2)-GetBlur1(uv -float2(1,0)*d ) );
comp_13=`    float3 dy2 = ( GetBlur1(uv +float2(0,1)*d )-GetBlur1(uv2-float2(0,1)*d2) );
comp_14=`
comp_15=`
comp_16=`float2 uv_bg  = uv2 - float2(dx2.y,dy2.y)*texsize.zw*16;
comp_17=`float2 uv_bg2 = uv  - float2(dx.y ,dy.y )*texsize.zw*16;
comp_18=`
comp_19=`        ret = (GetBlur2(uv_bg )-GetBlur1(uv_bg2)*1+GetPixel(uv_bg )*0.9 + (-dx.y  + dy.y )*0.4).y*0.8*float3(1.0,1.1,1.2);
comp_20=`float3 ret2 = (GetBlur2(uv_bg2)-GetBlur1(uv_bg )*1+GetPixel(uv_bg2)*0.9 + (-dx2.y + dy2.y)*0.4).y*0.8*float3(1.2,1.0,1.1);
comp_21=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_22=`                      ((uv2.xyy*q28
comp_23=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_24=`                      ).xyz*
comp_25=`                      float3(1,1,0)*0.05 + 
comp_26=`                      time*float3(0,0,1)*q31
comp_27=`                     );
comp_28=`if(ret.x> q26*q13         && ret2.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_29=`if(ret2.y> q25*q11         && ret.y<= q22*q12        )ret2.x -= (noise9).y*.5; 
comp_30=`if(ret.z> q24*q12         && ret2.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_31=`
comp_32=`float2 uv_m  = uv2 - float2(dx2.x,dy.x )*texsize.zw*8;
comp_33=`float2 uv_m2 = uv  - float2(dx.x ,dy2.x)*texsize.zw*8;
comp_34=`
comp_35=`ret  = lerp(ret , 2*float3(0.0,0.5,1.0), GetBlur3(uv_m2 - float2(dx2.y,dy.y )*0.4).x*0.4);
comp_36=`ret2 = lerp(ret2, 2*float3(0.5,1.0,0.0), GetBlur3(uv_m  - float2(dx.y ,dy2.y)*0.4).x*0.4);
comp_37=`
comp_38=`ret  = lerp(ret , 2*float3(0.5,1.0,1.0), GetBlur2(uv_m  - float2(dx.y ,dy2.y)*0.2).x*0.4);
comp_39=`ret2 = lerp(ret2, 2*float3(1.0,0.5,1.0), GetBlur2(uv_m2 - float2(dx2.y,dy.y )*0.2).x*0.4);
comp_40=`
comp_41=`ret = lerp(ret, 2*float3(1,1,0.8), GetBlur1(uv_m - float2(dx.y,dy.y)*0.1).x*0.2);
comp_42=`//ret = lerp(ret, float3(0.5,0,1), GetPixel(uv_m).x*0.4);
comp_43=`
comp_44=`//ret = .7-ret2;
comp_45=`//ret2=.7-ret;
comp_46=`ret-=ret2;
comp_47=`}