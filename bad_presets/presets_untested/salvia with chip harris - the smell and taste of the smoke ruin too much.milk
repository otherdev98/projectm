MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=5
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=1.136
fWaveScale=1.229
fWaveSmoothing=0.000
fWaveParam=0.200
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.531
fWarpScale=2.005
fZoomExponent=1.11606
fShader=0.000
zoom=1.01871
rot=0.00422
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.32162
sx=1.00000
sy=0.99999
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.037
ob_g=0.000
ob_b=0.004
ob_a=0.000
ib_size=0.010
ib_r=0.041
ib_g=0.245
ib_b=0.529
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=0.89152
wavecode_0_smoothing=0.82000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.600
wave_0_init1=t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_0_init2=t2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_0_init3=t3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_0_init4=t4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_0_init5=t5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_0_init6=t6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_0_init7=t7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_0_init8=t8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_0_init9=
wave_0_per_frame1=t1 = time - int (time);
wave_0_per_point1=
wave_0_per_point2=t_abs = sample*3;
wave_0_per_point3=t_rel = sample-time/5;
wave_0_per_point4=
wave_0_per_point5=ampl = 2*t_abs/2 ;
wave_0_per_point6=
wave_0_per_point7=k1=sin(time/13);
wave_0_per_point8=k2=sin(time/12);
wave_0_per_point9=ox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;
wave_0_per_point10=oy = ampl*cos (t_abs*(31+5*k2));
wave_0_per_point11=oz = -1  ;
wave_0_per_point12=
wave_0_per_point13=
wave_0_per_point14=r = sqr(sin(t_rel*3.4));
wave_0_per_point15=g = sqr(sin(t_rel));
wave_0_per_point16=b = sqr (cos(t_rel*1.8));
wave_0_per_point17=
wave_0_per_point18=a=0.1*(sin(t_abs*3)) 
wave_0_per_point19=  + 0.6*q3*below (abs(1-t_abs-t1 ),0.3);
wave_0_per_point20=
wave_0_per_point21=xang = time/9.5;
wave_0_per_point22=yang = 0*time/7;
wave_0_per_point23=zang = -time/22;
wave_0_per_point24=fov = 0.5;
wave_0_per_point25=
wave_0_per_point26=
wave_0_per_point27=// Rotation um x,y,z
wave_0_per_point28=
wave_0_per_point29=mx = ox*cos(zang) - oy*sin(zang);
wave_0_per_point30=my = ox*sin(zang) + oy*cos(zang);
wave_0_per_point31=
wave_0_per_point32=ox = mx;
wave_0_per_point33=oy = my;
wave_0_per_point34=mx = ox*cos(yang) + oz*sin(yang);
wave_0_per_point35=mz = - ox*sin(yang) + oz*cos(yang);
wave_0_per_point36=ox = mx;
wave_0_per_point37=oz = mz;
wave_0_per_point38=my = oy*cos(xang) - oz*sin(xang);
wave_0_per_point39=mz = oy*sin(xang) + oz*cos(xang);
wave_0_per_point40=oy = my;
wave_0_per_point41=oz = mz;
wave_0_per_point42=
wave_0_per_point43=oz = oz - 6;
wave_0_per_point44=x = ox*fov/oz +0.5;
wave_0_per_point45=//x = (x-.5)*0.75 + 0.5;
wave_0_per_point46=y = oy*fov/oz + 0.5;
wave_0_per_point47=
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.100
wave_1_init1=t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_1_init2=t2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_1_init3=t3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_1_init4=t4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_1_init5=t5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_1_init6=t6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_1_init7=t7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_1_init8=t8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_1_init9=
wave_1_per_frame1=tm = time*.1;
wave_1_per_frame2=t1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);
wave_1_per_frame3=t2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);
wave_1_per_frame4=t3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);
wave_1_per_frame5=
wave_1_per_frame6=tic = min(time - tin,1);
wave_1_per_frame7=tin = time;
wave_1_per_frame8=
wave_1_per_frame9=tva = (tic*q1*.5);
wave_1_per_frame10=tvb = (tic*q2*.5);
wave_1_per_frame11=tvc = (tic*q3*.5);
wave_1_per_frame12=
wave_1_per_frame13=q1 = tva;
wave_1_per_frame14=q2 = tvb;
wave_1_per_frame15=q3 = tvc;
wave_1_per_frame16=
wave_1_per_frame17=sz = .5;
wave_1_per_frame18=len = q4;
wave_1_per_frame19=t4 = len;
wave_1_per_point1=ang = 0;
wave_1_per_point2=len = t4;
wave_1_per_point3=mad = .6;
wave_1_per_point4=
wave_1_per_point5=it = if(above(sample,0),(it+equal(lev,7)),1);
wave_1_per_point6=ita = (ita + 1)*above(sample,0);
wave_1_per_point7=
wave_1_per_point8=mod = if(equal(it%2,0),1,  if(equal((it+1)%4,0),2,  if(equal((it+3)%8,0),3,  if(equal((it+7)%16,0),4,  if(equal((it+15)%32,0),5,  if(equal((it+31)%64,0),6,  if(equal((it+63)%128,0),7,7)  ))))));
wave_1_per_point9=
wave_1_per_point10=sw = sw - 1;
wave_1_per_point11=sw = if(equal(lev,7),mod,sw)*above(sample,0);
wave_1_per_point12=
wave_1_per_point13=lev = if(above(sample,0),if(above(sw,0),lev-1,lev+1),7);
wave_1_per_point14=a = lev*.1*1.46;
wave_1_per_point15=
wave_1_per_point16=ar = if(above(sample,0),ar,1);
wave_1_per_point17=ar = if(equal(lev,0),ar*-1,ar);
wave_1_per_point18=br = if(above(sample,0),br,1);
wave_1_per_point19=br = if(equal(lev,1),br*-1,br);
wave_1_per_point20=cr = if(above(sample,0),cr,1);
wave_1_per_point21=cr = if(equal(lev,2),cr*-1,cr);
wave_1_per_point22=dr = if(above(sample,0),dr,1);
wave_1_per_point23=dr = if(equal(lev,3),dr*-1,dr);
wave_1_per_point24=er = if(above(sample,0),er,1);
wave_1_per_point25=er = if(equal(lev,4),er*-1,er);
wave_1_per_point26=fr = if(above(sample,0),fr,1);
wave_1_per_point27=fr = if(equal(lev,5),fr*-1,fr);
wave_1_per_point28=gr = if(above(sample,0),gr,1);
wave_1_per_point29=gr = if(equal(lev,6),gr*-1,gr);
wave_1_per_point30=
wave_1_per_point31=mlev = lev*above(sample,0);
wave_1_per_point32=
wave_1_per_point33=swi = equal(q4,0)*equal(sample,0);
wave_1_per_point34=
wave_1_per_point35=ha = if(swi,1-2*int(rand(2)),ha);
wave_1_per_point36=hb = if(swi,1-2*int(rand(2)),hb);
wave_1_per_point37=hc = if(swi,1-2*int(rand(2)),hc);
wave_1_per_point38=hd = if(swi,1-2*int(rand(2)),hd);
wave_1_per_point39=he = if(swi,1-2*int(rand(2)),he);
wave_1_per_point40=hf = if(swi,1-2*int(rand(2)),hf);
wave_1_per_point41=hg = if(swi,1-2*int(rand(2)),hg);
wave_1_per_point42=
wave_1_per_point43=aang = if(above(sample,0),aang,aang + (q1*.8 + q2*.1 + q3*.1)*ha*1);
wave_1_per_point44=bang = if(above(sample,0),bang,bang + (q1*.57 + q2*.33 + q3*.1)*hb*1.33);
wave_1_per_point45=cang = if(above(sample,0),cang,cang + (q1*.33 + q2*.57 + q3*.1)*hc*1.67);
wave_1_per_point46=dang = if(above(sample,0),dang,dang + (q1*.1 + q2*.8 + q3*.1)*hd*2);
wave_1_per_point47=eang = if(above(sample,0),eang,eang + (q1*.1 + q2*.57 + q3*.33)*he*2.33);
wave_1_per_point48=fang = if(above(sample,0),fang,fang + (q1*.1 + q2*.33 + q3*.57)*hf*2.67);
wave_1_per_point49=gang = if(above(sample,0),gang,gang + (q1*.1 + q2*.1 + q3*.8)*hg*3);
wave_1_per_point50=
wave_1_per_point51=aang = 1.57;
wave_1_per_point52=bang = 1.57;
wave_1_per_point53=cang = 1.57;
wave_1_per_point54=dang = 1.57;
wave_1_per_point55=eang = 1.57;
wave_1_per_point56=fang = 1.57;
wave_1_per_point57=gang = 1.57;
wave_1_per_point58=
wave_1_per_point59=oz = 0;
wave_1_per_point60=
wave_1_per_point61=len = len*mad;
wave_1_per_point62=ox = above(lev,0)*sin(aang)*len*ar;
wave_1_per_point63=oy = above(lev,0)*cos(aang)*len;
wave_1_per_point64=
wave_1_per_point65=an = (ar*aang + br*bang)*br;
wave_1_per_point66=len = len*mad;
wave_1_per_point67=oy = oy + above(lev,1)*sin(an)*len*br;
wave_1_per_point68=oz = oz + above(lev,1)*cos(an)*len;
wave_1_per_point69=
wave_1_per_point70=an = (ar*aang + br*bang + cr*cang)*cr;
wave_1_per_point71=len = len*mad;
wave_1_per_point72=ox = ox + above(lev,2)*sin(an)*len*cr;
wave_1_per_point73=oz = oz + above(lev,2)*cos(an)*len;
wave_1_per_point74=
wave_1_per_point75=an = (ar*aang + br*bang + cr*cang + dr*dang)*dr;
wave_1_per_point76=len = len*mad;
wave_1_per_point77=ox = ox + above(lev,3)*sin(an)*len*dr;
wave_1_per_point78=oy = oy + above(lev,3)*cos(an)*len;
wave_1_per_point79=
wave_1_per_point80=an = (ar*aang + br*bang + cr*cang + dr*dang + er*eang)*er;
wave_1_per_point81=len = len*mad;
wave_1_per_point82=ox = ox + above(lev,4)*sin(an)*len*er;
wave_1_per_point83=oz = oz + above(lev,4)*cos(an)*len;
wave_1_per_point84=
wave_1_per_point85=an = (ar*aang + br*bang + cr*cang + dr*dang + er*eang + fr*fang)*fr;
wave_1_per_point86=len = len*mad;
wave_1_per_point87=ox = ox + above(lev,5)*sin(an)*len*fr;
wave_1_per_point88=oz = oz + above(lev,5)*cos(an)*len;
wave_1_per_point89=
wave_1_per_point90=an = (ar*aang + br*bang + cr*cang + dr*dang + er*eang + fr*fang + gr*gang)*gr;
wave_1_per_point91=len = len*mad;
wave_1_per_point92=oy = oy + above(lev,6)*sin(an)*len*gr;
wave_1_per_point93=ox = ox + above(lev,6)*cos(an)*len;
wave_1_per_point94=
wave_1_per_point95=
wave_1_per_point96=xang = time*1.132;
wave_1_per_point97=xang = q5;
wave_1_per_point98=yang = time*1.153;
wave_1_per_point99=yang = q6;
wave_1_per_point100=zang = time*1.110;
wave_1_per_point101=zang = q7 + 1.57;
wave_1_per_point102=fov = .5;
wave_1_per_point103=
wave_1_per_point104=mx = ox*cos(zang) - oy*sin(zang);
wave_1_per_point105=my = ox*sin(zang) + oy*cos(zang);
wave_1_per_point106=ox = mx;
wave_1_per_point107=oy = my;
wave_1_per_point108=mx = ox*cos(yang) + oz*sin(yang);
wave_1_per_point109=mz = - ox*sin(yang) + oz*cos(yang);
wave_1_per_point110=ox = mx;
wave_1_per_point111=oz = mz;
wave_1_per_point112=my = oy*cos(xang) - oz*sin(xang);
wave_1_per_point113=mz = oy*sin(xang) + oz*cos(xang);
wave_1_per_point114=oy = my;
wave_1_per_point115=oz = mz;
wave_1_per_point116=
wave_1_per_point117=oz = oz - 2;
wave_1_per_point118=x = ox*fov/oz + 0.5;
wave_1_per_point119=x = (x-.5)*0.75 + 0.5;
wave_1_per_point120=y = oy*fov/oz + 0.5;
wave_1_per_point121=
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=0.100
wave_2_init1=t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_2_init2=t2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_2_init3=t3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_2_init4=t4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_2_init5=t5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_2_init6=t6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_2_init7=t7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_2_init8=t8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;
wave_2_init9=
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=12
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=92
shapecode_0_x=0.800
shapecode_0_y=0.500
shapecode_0_rad=0.02705
shapecode_0_ang=1.57080
shapecode_0_tex_ang=1.25664
shapecode_0_tex_zoom=3.07268
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=t1 = time - int (time);
shape_0_per_frame2=sample = instance/num_inst;
shape_0_per_frame3=t_abs = sample*3;
shape_0_per_frame4=t_rel = sample-time/5;
shape_0_per_frame5=
shape_0_per_frame6=ampl = 2*t_abs/2 ;
shape_0_per_frame7=
shape_0_per_frame8=k1=sin(time/13);
shape_0_per_frame9=k2=sin(time/12);
shape_0_per_frame10=ox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;
shape_0_per_frame11=oy = ampl*cos (t_abs*(31+5*k2));
shape_0_per_frame12=oz = -1  ;
shape_0_per_frame13=
shape_0_per_frame14=
shape_0_per_frame15=r = sqr(sin(t_rel*3.4));
shape_0_per_frame16=g = sqr(sin(t_rel));
shape_0_per_frame17=b = sqr (cos(t_rel*1.8));
shape_0_per_frame18=
shape_0_per_frame19=//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;
shape_0_per_frame20=
shape_0_per_frame21=xang = time/9.5;
shape_0_per_frame22=yang = 0*time/7;
shape_0_per_frame23=zang = -time/22;
shape_0_per_frame24=fov = 0.5;
shape_0_per_frame25=
shape_0_per_frame26=
shape_0_per_frame27=// Rotation um x,y,z
shape_0_per_frame28=
shape_0_per_frame29=mx = ox*cos(zang) - oy*sin(zang);
shape_0_per_frame30=my = ox*sin(zang) + oy*cos(zang);
shape_0_per_frame31=
shape_0_per_frame32=ox = mx;
shape_0_per_frame33=oy = my;
shape_0_per_frame34=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame35=mz = - ox*sin(yang) + oz*cos(yang);
shape_0_per_frame36=ox = mx;
shape_0_per_frame37=oz = mz;
shape_0_per_frame38=my = oy*cos(xang) - oz*sin(xang);
shape_0_per_frame39=mz = oy*sin(xang) + oz*cos(xang);
shape_0_per_frame40=oy = my;
shape_0_per_frame41=oz = mz;
shape_0_per_frame42=
shape_0_per_frame43=oz = oz - 6;
shape_0_per_frame44=x = ox*fov/oz +0.5;
shape_0_per_frame45=//x = (x-.5)*0.75 + 0.5;
shape_0_per_frame46=y = oy*fov/oz + 0.5;
shape_0_per_frame47=
shapecode_1_enabled=0
shapecode_1_sides=63
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=1.99863
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.49981
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.100
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.600
shapecode_1_border_r=0.500
shapecode_1_border_g=0.500
shapecode_1_border_b=0.500
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=63
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.123
shapecode_2_y=0.000
shapecode_2_rad=0.27319
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.49981
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.500
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=63
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=1.000
shapecode_3_rad=0.54822
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.49981
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.500
shapecode_3_border_g=0.500
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
per_frame_1=//martin no religion / my omniversal absence for changing the background light
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=runbass=runbass+vvb;
per_frame_12=runmids=runmids+vvm ;
per_frame_13=runtreb=runtreb+vvt;
per_frame_14=pi23=4*asin(-1)*.33333333333333;
per_frame_15=atime=(runtreb+runmids+runbass)*.05;
per_frame_16=q8= (sin(atime-0*pi23)+1)*.5;
per_frame_17=q9= (sin(atime-1*pi23)+1)*.5;
per_frame_18=q10=(sin(atime-2*pi23)+1)*.5;
per_frame_19=
per_frame_20=//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing
per_frame_21=vb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;
per_frame_22=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_23=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_24=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_25=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_26=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_27=vvb = min(1,max(0,vvb));
per_frame_28=vvm = min(1,max(0,vvm));
per_frame_29=vvt = min(1,max(0,vvt));
per_frame_30=q1   = (vvb+vvm+vvt)*10;
per_frame_31=q2   = (vvb+vvm+vvt)*10;
per_frame_32=q3   = (vvb+vvm+vvt)*20;
per_frame_33=q4   = (vvb+vvm+vvt)*10;
per_frame_34=q5   = (vvb+vvm+vvt)*10;
per_frame_35=q6   = (vvb+vvm+vvt)*10;
per_frame_36=q7   = (vvb+vvm+vvt)*10;
per_frame_37=q11  = (vvb+vvm+vvt)*10;
per_frame_38=q12  = (vvb+vvm+vvt)*10;
per_frame_39=q13  = (vvb+vvm+vvt)*10;
per_frame_40=q14  = (vvb+vvm+vvt)*10;
per_frame_41=q15  = (vvb+vvm+vvt)*10;
per_frame_42=q16  = (vvb+vvm+vvt)*10;
per_frame_43=q17  = (vvb+vvm+vvt)*10;
per_frame_44=q18  = (vvb+vvm+vvt)*10;
per_frame_45=q19  = (vvb+vvm+vvt)*10;
per_frame_46=q20  = (vvb+vvm+vvt)*10;
per_frame_47=q21  = (vvb+vvm+vvt)*10;
per_frame_48=q22  = (vvb+vvm+vvt)*10;
per_frame_49=q23  = (vvb+vvm+vvt)*10;
per_frame_50=q24  = (vvb+vvm+vvt)*10;
per_frame_51=q25  = (vvb+vvm+vvt)*10;
per_frame_52=q26  = (vvb+vvm+vvt)*10;
per_frame_53=q27  = (vvb+vvm+vvt)*10;
per_frame_54=q28  = (vvb+vvm+vvt)*10;
per_frame_55=q29  = (vvb+vvm+vvt)*10;
per_frame_56=q30  = (vvb+vvm+vvt)*20;
per_frame_57=q31  = (vvb+vvm+vvt)*10;
per_frame_58=q32  = (vvb+vvm+vvt)*10;
per_frame_59=
per_frame_60=wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );
per_frame_61=wave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );
per_frame_62=wave_b = wave_b + 0.100*( 0.60*sin(0.510*time) + 0.40*sin(0.550*time) );
per_frame_63=zoom = zoom + 0.01*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );
per_frame_64=rot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );
per_frame_65=left = 0.5 + 0.25*(sin(0.555*time) + sin(1.111*time));
per_frame_66=right = 0.5 + 0.25*(sin(0.333*time) + sin(1.222*time));
per_frame_67=centrex = (left+right)/2;
per_frame_68=distx = 0.1 + (abs(centrex-left)+abs(centrex-right))/2;
per_frame_69=q1 = centrex + distx;
per_frame_70=q2 = centrex - distx;
per_frame_71=wave_x = centrex;
per_frame_72=top = 0.5 + 0.25*(sin(0.888*time) + sin(0.999*time));
per_frame_73=bottom = 0.5 + 0.25*(sin(0.444*time) + sin(1.333*time));
per_frame_74=centrey = (top+bottom)/2;
per_frame_75=disty = 0.1 + (abs(centrey-top)+abs(centrey-bottom))/2;
per_frame_76=//q3 = centrey + disty;
per_frame_77=q4 = centrey - disty;
per_frame_78=wave_y = 1-centrey;
per_pixel_1=rot = 0;
per_pixel_2=dx = if(below(x,q2), -1,if(above(x,q1), 1,dx));
per_pixel_3=dy = if(below(y,q4), -1,if(above(y,q3), 1,dy));
warp_1=`shader_body
warp_2=`{
warp_3=`float2 pixelsize = texsize.zw;
warp_4=`float1 conwar = tex2D( sampler_pw_main, uv + float2(-1,-1)*pixelsize).x;
warp_5=`       conwar += tex2D( sampler_pw_main, uv + float2(0,-1)*pixelsize).x;
warp_6=`       conwar += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).x;
warp_7=`
warp_8=`       conwar += tex2D( sampler_pw_main, uv + float2(-1,0)*pixelsize).x;
warp_9=`       conwar += tex2D( sampler_pw_main, uv + float2(1,0)*pixelsize).x;
warp_10=`
warp_11=`       conwar += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).x;
warp_12=`       conwar += tex2D( sampler_pw_main, uv + float2(0,1)*pixelsize).x;
warp_13=`       conwar += tex2D( sampler_pw_main, uv + float2(1,1)*pixelsize).x;
warp_14=`
warp_15=`float1 conwag = tex2D( sampler_pw_main, uv + float2(-1, 1)*pixelsize).z;
warp_16=`       conwag += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).z;
warp_17=`       conwag += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).z;
warp_18=`
warp_19=`       conwag += tex2D( sampler_pw_main, uv + float2(-1,0)*pixelsize).z;
warp_20=`       conwag += tex2D( sampler_pw_main, uv + float2(1,0)*pixelsize).z;
warp_21=`
warp_22=`       conwag += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).z;
warp_23=`       conwag += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).z;
warp_24=`       conwag += tex2D( sampler_pw_main, uv + float2(0,-1)*pixelsize).z;
warp_25=`
warp_26=`float1 conwab = tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).y;
warp_27=`       conwab += tex2D( sampler_pw_main, uv + float2(1,1)*pixelsize).y;
warp_28=`       conwab += tex2D( sampler_pw_main, uv + float2(0,-1)*pixelsize).y;
warp_29=`
warp_30=`       conwab += tex2D( sampler_pw_main, uv + float2(0,0)*pixelsize).y;
warp_31=`       conwab += tex2D( sampler_pw_main, uv + float2(-1,-1)*pixelsize).y;
warp_32=`
warp_33=`       conwab += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).y;
warp_34=`       conwab += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).y;
warp_35=`       conwab += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).y;
warp_36=`
warp_37=`float1 p = saturate (tex2D( sampler_pw_main, uv).x);
warp_38=`
warp_39=`
warp_40=`ret.x = saturate((1-abs(conwar-3)))*((1+roam_sin)*.75-p);
warp_41=`ret.y = saturate((1-abs(conwag-3)))*((1+roam_cos)*.8-p);
warp_42=`ret.z = saturate((1-abs(conwab-3)))*((1+roam_sin)*.86-p);
warp_43=`ret.x += saturate(max(1-abs(conwar-2),(1+roam_cos)*.93-abs(conwag-3)))*p;
warp_44=`ret.y += saturate(max(1-abs(conwag-2),(1+roam_sin)*1.01-abs(conwab-3)))*p;
warp_45=`ret.z += saturate(max(1-abs(conwab-2),(1+roam_cos)*1.10-abs(conwar-3)))*p;
warp_46=`
warp_47=`}
comp_1=`
comp_2=`float2 rs, rs0, uv2, uv3,uv4,dz;
comp_3=`float3 noise, ret1, neu;
comp_4=`
comp_5=`shader_body {
comp_6=`float2 uv1 = (uv-.5 )*aspect.xy;
comp_7=`
comp_8=`float z = .1/uv1.y/uv1.x;
comp_9=`
comp_10=`
comp_11=`float2 hor = float2 (texsize.z,0);
comp_12=`float2 ver = float2 (0, texsize.w);
comp_13=`
comp_14=`
comp_15=`float dist = 1;
comp_16=`float inten = 1;
comp_17=`ret1 = 0;
comp_18=`int anz = 3;
comp_19=`int n = 0;
comp_20=`dz = 0;
comp_21=`while (n <= anz) {
comp_22=`    dist = 1-frac(1.0/anz*n+.01); //evtl sqrt !;
comp_23=`
comp_24=`    inten =  (1-dist)*4;
comp_25=`    uv = 1*uv1;
comp_26=`uv *= aspect.yx;
comp_27=`    uv3 = 2*uv*dist + -.5 +noise*.0;
comp_28=`
comp_29=`    dz.x += inten*(lum(GetPixel(uv3+hor))- lum(GetPixel (uv3-hor)));
comp_30=`    dz.y += inten*(lum(GetPixel(uv3+ver))- lum(GetPixel (uv3-ver)));
comp_31=`    neu = GetPixel(uv3+dz*.01);
comp_32=`
comp_33=`    ret1 = max(ret1,neu*inten);
comp_34=`n++;
comp_35=`}
comp_36=`
comp_37=`
comp_38=`float2 uv6 = .2*sin(14*uv1+dz*2 + time/6);
comp_39=`float3 mus = (.01/length(uv6));
comp_40=`
comp_41=`ret = sqrt(ret1)*(.2+8*mus)/1.5;
comp_42=`}
