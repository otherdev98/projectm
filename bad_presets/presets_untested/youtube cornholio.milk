MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=3.177
fWaveSmoothing=0.000
fWaveParam=-0.400
fModWaveAlphaStart=1.000
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=1.00183
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.90529
sy=0.93272
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.100
ob_g=0.100
ob_b=0.100
ob_a=0.010
ib_size=0.005
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.500
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.200
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=0.300
wave_0_per_point1=n=sample*6.283;
wave_0_per_point2=phs=-sample * 0.2;
wave_0_per_point3=tm=time*0.4 + phs;
wave_0_per_point4=
wave_0_per_point5=flip=flip+1;
wave_0_per_point6=flip=flip*below(flip,2);
wave_0_per_point7=
wave_0_per_point8=xp=0;
wave_0_per_point9=yp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;
wave_0_per_point10=zp=0;
wave_0_per_point11=
wave_0_per_point12=//wrist movement;
wave_0_per_point13=ang=sin(tm*2)*0.5 +0.5;
wave_0_per_point14=
wave_0_per_point15=xq=xp;
wave_0_per_point16=yq=yp*sin(ang) + zp*cos(ang);
wave_0_per_point17=zq=yp*cos(ang) - zp*sin(ang);
wave_0_per_point18=yq=yp;
wave_0_per_point19=zq=zp;
wave_0_per_point20=
wave_0_per_point21=ang=tm*8;
wave_0_per_point22=xp=xq*sin(ang) + yq*cos(ang);
wave_0_per_point23=yp=xq*cos(ang) - yq*sin(ang);
wave_0_per_point24=zp=zq;
wave_0_per_point25=
wave_0_per_point26=//forearm movement;
wave_0_per_point27=zp=zp-0.3;
wave_0_per_point28=ang=3.14 + sin(tm*2 - 0.5)*1.5;
wave_0_per_point29=xq=xp;
wave_0_per_point30=yq=yp*sin(ang) + zp*cos(ang);
wave_0_per_point31=zq=yp*cos(ang) - zp*sin(ang);
wave_0_per_point32=
wave_0_per_point33=//upper arm twist
wave_0_per_point34=ang=-1.0 + cos(tm*3 + 0.5);
wave_0_per_point35=xp=xq*sin(ang) + yq*cos(ang);
wave_0_per_point36=yp=xq*cos(ang) - yq*sin(ang);
wave_0_per_point37=zp=zq;
wave_0_per_point38=
wave_0_per_point39=//upper arm outward;
wave_0_per_point40=zp=zp-0.35;
wave_0_per_point41=ang=cos(tm*2)*0.75 - 1.05;
wave_0_per_point42=xq=xp*sin(ang) + zp*cos(ang);
wave_0_per_point43=yq=yp;
wave_0_per_point44=zq=xp*cos(ang) - zp*sin(ang);
wave_0_per_point45=
wave_0_per_point46=//upper arm up down;
wave_0_per_point47=ang=cos(tm)*0.5 - 0.5;
wave_0_per_point48=xp=xq;
wave_0_per_point49=yp=yq*cos(ang) - zq*sin(ang);
wave_0_per_point50=zp=yq*sin(ang) + zq*cos(ang);
wave_0_per_point51=
wave_0_per_point52=//xp=xq;yp=yq;zp=zq;
wave_0_per_point53=
wave_0_per_point54=
wave_0_per_point55=//project into screenspace and draw on screen
wave_0_per_point56=zp=zp+2;
wave_0_per_point57=xs=xp/zp;
wave_0_per_point58=ys=yp/zp;
wave_0_per_point59=
wave_0_per_point60=x=xs+0.5;
wave_0_per_point61=y=ys*1.3+0.5;
wave_0_per_point62=
wave_0_per_point63=
wave_0_per_point64=//a=(1-sample)*flip;
wave_0_per_point65=
wave_0_per_point66=//b=b+pow(1-sample,2)*0.3;
wave_0_per_point67=
wave_0_per_point68=x = 0.5 + (x-0.5)/q1;
wave_0_per_point69=y = 0.5 + (y-0.5)/q2 + 0.1;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.200
wavecode_1_g=0.000
wavecode_1_b=0.000
wavecode_1_a=0.300
wave_1_per_point1=n=sample*6.283;
wave_1_per_point2=phs=-sample * 0.2;
wave_1_per_point3=tm=time*0.4 + phs;
wave_1_per_point4=
wave_1_per_point5=flip=flip+1;
wave_1_per_point6=flip=flip*below(flip,2);
wave_1_per_point7=
wave_1_per_point8=xp=0;
wave_1_per_point9=yp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;
wave_1_per_point10=yp=-yp;
wave_1_per_point11=zp=0;
wave_1_per_point12=
wave_1_per_point13=//wrist movement;
wave_1_per_point14=ang=sin(tm*2)*0.5 +0.5;
wave_1_per_point15=
wave_1_per_point16=xq=xp;
wave_1_per_point17=yq=yp*sin(ang) + zp*cos(ang);
wave_1_per_point18=zq=yp*cos(ang) - zp*sin(ang);
wave_1_per_point19=yq=yp;
wave_1_per_point20=zq=zp;
wave_1_per_point21=
wave_1_per_point22=ang=tm*8;
wave_1_per_point23=xp=xq*sin(ang) + yq*cos(ang);
wave_1_per_point24=yp=xq*cos(ang) - yq*sin(ang);
wave_1_per_point25=zp=zq;
wave_1_per_point26=
wave_1_per_point27=//forearm movement;
wave_1_per_point28=zp=zp-0.3;
wave_1_per_point29=ang=3.14 + sin(tm*2 - 0.5)*1.5;
wave_1_per_point30=xq=xp;
wave_1_per_point31=yq=yp*sin(ang) + zp*cos(ang);
wave_1_per_point32=zq=yp*cos(ang) - zp*sin(ang);
wave_1_per_point33=
wave_1_per_point34=//upper arm twist
wave_1_per_point35=ang=-1.0 + cos(tm*3 + 0.5);
wave_1_per_point36=xp=xq*sin(ang) + yq*cos(ang);
wave_1_per_point37=yp=xq*cos(ang) - yq*sin(ang);
wave_1_per_point38=zp=zq;
wave_1_per_point39=
wave_1_per_point40=//upper arm outward;
wave_1_per_point41=zp=zp-0.35;
wave_1_per_point42=ang=cos(tm*2)*0.75 - 1.05;
wave_1_per_point43=xq=xp*sin(ang) + zp*cos(ang);
wave_1_per_point44=yq=yp;
wave_1_per_point45=zq=xp*cos(ang) - zp*sin(ang);
wave_1_per_point46=
wave_1_per_point47=//upper arm up down;
wave_1_per_point48=ang=cos(tm)*0.5 - 0.5;
wave_1_per_point49=xp=xq;
wave_1_per_point50=yp=yq*cos(ang) - zq*sin(ang);
wave_1_per_point51=zp=yq*sin(ang) + zq*cos(ang);
wave_1_per_point52=
wave_1_per_point53=//xp=xq;yp=yq;zp=zq;
wave_1_per_point54=
wave_1_per_point55=
wave_1_per_point56=//project into screenspace and draw on screen
wave_1_per_point57=zp=zp+2;
wave_1_per_point58=xs=xp/zp;
wave_1_per_point59=ys=yp/zp;
wave_1_per_point60=
wave_1_per_point61=x=xs+0.5;
wave_1_per_point62=y=ys*1.3+0.5;
wave_1_per_point63=
wave_1_per_point64=
wave_1_per_point65=//a=(1-sample)*flip;
wave_1_per_point66=
wave_1_per_point67=
wave_1_per_point68=//b=b+pow(1-sample,2)*0.3;
wave_1_per_point69=
wave_1_per_point70=
wave_1_per_point71=x = 0.5 + (x-0.5)/q1;
wave_1_per_point72=y = 0.5 + (y-0.5)/q2 + 0.1;
wave_1_per_point73=
wavecode_2_enabled=0
wavecode_2_samples=61
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=2.44415
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=t1 = q1;
wave_2_per_frame2=t2 = q2;
wave_2_per_frame3=t3 = q3;
wave_2_per_frame4=t4 = q4;
wave_2_per_frame5=t5 = q5;
wave_2_per_frame6=t6 = q6;
wave_2_per_frame7=t7 = q7;
wave_2_per_frame8=t8 = q8;
wave_2_per_point1=x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2
wave_2_per_point2=+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;
wave_2_per_point3=
wave_2_per_point4=y = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6
wave_2_per_point5=+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;
wavecode_3_enabled=0
wavecode_3_samples=61
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=2.44415
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_init1=t2 = 0
wave_3_per_frame1=t1 = q1;
wave_3_per_frame2=t2 = q2;
wave_3_per_frame3=t3 = q3;
wave_3_per_frame4=t4 = q4;
wave_3_per_frame5=t5 = q5;
wave_3_per_frame6=t6 = q6;
wave_3_per_frame7=t7 = q7;
wave_3_per_frame8=t8 = q8;
wave_3_per_point1=x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2
wave_3_per_point2=+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;
wave_3_per_point3=
wave_3_per_point4=y = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6
wave_3_per_point5=+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;
shapecode_0_enabled=1
shapecode_0_sides=12
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=512
shapecode_0_x=0.500
shapecode_0_y=0.550
shapecode_0_rad=0.03400
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.78740
shapecode_0_r=1.000
shapecode_0_g=0.450
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_init1=started = 0;
shape_0_init2=t1 = 0.412; //seeds for pseudo random generator
shape_0_init3=t2 = 0.4563;
shape_0_init4=t3 = 0.6452;
shape_0_init5=t4 = 0.2565;
shape_0_per_frame1=vol=bass+treb+mid;
shape_0_per_frame2=rnd1 = if(equal(instance,0),t1,rnd1);
shape_0_per_frame3=rnd2 = if(equal(instance,0),t2,rnd2);
shape_0_per_frame4=rnd3 = if(equal(instance,0),t3,rnd3);
shape_0_per_frame5=rnd4 = if(equal(instance,0),t4,rnd4);
shape_0_per_frame6=rnd1 = 4*rnd1*(1-rnd1);
shape_0_per_frame7=rnd2 = 4*rnd2*(1-rnd2);
shape_0_per_frame8=rnd3 = 4*rnd3*(1-rnd3);
shape_0_per_frame9=rnd4 = 4*rnd4*(1-rnd4);
shape_0_per_frame10=t = .6;
shape_0_per_frame11=t =  (rnd1+time*t) - int(rnd1+time*t);
shape_0_per_frame12=t = t + rnd2*0.1;
shape_0_per_frame13=wh = rnd4*asin(1)*4;
shape_0_per_frame14=wv = 0.25 + rnd3*0.1;
shape_0_per_frame15=
shape_0_per_frame16=d = 1.4; // makes the perspective impact
shape_0_per_frame17=zoom = 1;
shape_0_per_frame18=l = 1;
shape_0_per_frame19=
shape_0_per_frame20=// Kardan angles
shape_0_per_frame21=
shape_0_per_frame22=w1 = q3; // first rotation: clockwise in the desktop pane
shape_0_per_frame23=w2 = q4; // rotation around vertical axis
shape_0_per_frame24=w3 = q5; // rotation around horizontal axis
shape_0_per_frame25=
shape_0_per_frame26=
shape_0_per_frame27=// definition of the 3D shape
shape_0_per_frame28=
shape_0_per_frame29=i = instance;
shape_0_per_frame30=
shape_0_per_frame31=my_x = t *(cos(wh)*sin(wv)*l);
shape_0_per_frame32=my_y = (-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l;
shape_0_per_frame33=my_z = t*(sin(wh)*sin(wv)*l);
shape_0_per_frame34=
shape_0_per_frame35=
shape_0_per_frame36=// 3D rotations
shape_0_per_frame37=
shape_0_per_frame38=x1 = cos(w1)*my_x + sin(w1)*my_y;
shape_0_per_frame39=y1 = -sin(w1)*my_x + cos(w1)*my_y;
shape_0_per_frame40=z1 = my_z;
shape_0_per_frame41=
shape_0_per_frame42=x2 = cos(w2)*x1 + sin(w2)*z1;
shape_0_per_frame43=z2 = -sin(w2)*x1 + cos(w2)*z1;
shape_0_per_frame44=y2 = y1;
shape_0_per_frame45=
shape_0_per_frame46=y3 = cos(w3)*y2 + sin(w3)*z2;
shape_0_per_frame47=z3 = -sin(w3)*y2 + cos(w3)*z2;
shape_0_per_frame48=x3 = x2;
shape_0_per_frame49=
shape_0_per_frame50=// perspective calculation
shape_0_per_frame51=
shape_0_per_frame52=l = sqrt(x3*x3 + y3*y3);
shape_0_per_frame53=w = atan2(x3,y3);
shape_0_per_frame54=p = tan(asin(1) + atan2(d+z3,l));
shape_0_per_frame55=d = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));
shape_0_per_frame56=
shape_0_per_frame57=rad = rad/d;
shape_0_per_frame58=my_x = zoom*sin(w)*p;
shape_0_per_frame59=my_y = zoom*cos(w)*p;
shape_0_per_frame60=
shape_0_per_frame61=x = 0.5 + my_x;
shape_0_per_frame62=y = 0.5 + my_y;
shape_0_per_frame63=
shape_0_per_frame64=x = 0.5 + (x-0.5)/q2;
shape_0_per_frame65=y = 0.5 + (y-0.5)/q1;
shape_0_per_frame66=
shape_0_per_frame67=pi2O3=4*asin(1)*.333333333;
shape_0_per_frame68=
shape_0_per_frame69=r=(sin(vol-0.0*pi2O3)+1)*.5;
shape_0_per_frame70=g=(sin(vol-1.0*pi2O3)+1)*.5;
shape_0_per_frame71=b=(sin(vol-2.0*pi2O3)+1)*.5;
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.520
shapecode_1_y=0.410
shapecode_1_rad=0.52160
shapecode_1_ang=0.18850
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.73458
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.750
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_init1=vx = 0
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=1
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.480
shapecode_2_y=0.410
shapecode_2_rad=0.61162
shapecode_2_ang=5.96903
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.73458
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.750
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_init1=vx = 0
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=1
shapecode_3_thickOutline=1
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.750
shapecode_3_rad=0.07059
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.73458
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_init1=vx = 0
shape_3_per_frame1=x = q1;
shape_3_per_frame2=y = q5;
per_frame_init_1=warp = 0;
per_frame_init_2=beatcount = 0;
per_frame_1=//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=q1   = (vvb+vvm+vvt)*10;
per_frame_12=q2   = (vvb+vvm+vvt)*10;
per_frame_13=q3   = (vvb+vvm+vvt)*10;
per_frame_14=q4   = (vvb+vvm+vvt)*10;
per_frame_15=q5   = (vvb+vvm+vvt)*10;
per_frame_16=q6   = (vvb+vvm+vvt)*10;
per_frame_17=q7   = (vvb+vvm+vvt)*10;
per_frame_18=q8   = (vvb+vvm+vvt)*10;
per_frame_19=q9   = (vvb+vvm+vvt)*10;
per_frame_20=q10  = (vvb+vvm+vvt)*10;
per_frame_21=q11  = (vvb+vvm+vvt)*10;
per_frame_22=q12  = (vvb+vvm+vvt)*10;
per_frame_23=q13  = (vvb+vvm+vvt)*10;
per_frame_24=q14  = (vvb+vvm+vvt)*10;
per_frame_25=q15  = (vvb+vvm+vvt)*10;
per_frame_26=q16  = (vvb+vvm+vvt)*10;
per_frame_27=q17  = (vvb+vvm+vvt)*10;
per_frame_28=q18  = (vvb+vvm+vvt)*10;
per_frame_29=q19  = (vvb+vvm+vvt)*10;
per_frame_30=q20  = (vvb+vvm+vvt)*10;
per_frame_31=q21  = (vvb+vvm+vvt)*10;
per_frame_32=q22  = (vvb+vvm+vvt)*10;
per_frame_33=q23  = (vvb+vvm+vvt)*10;
per_frame_34=q24  = (vvb+vvm+vvt)*10;
per_frame_35=q25  = (vvb+vvm+vvt)*10;
per_frame_36=q26  = (vvb+vvm+vvt)*10;
per_frame_37=q27  = (vvb+vvm+vvt)*10;
per_frame_38=q28  = (vvb+vvm+vvt)*10;
per_frame_39=q29  = (vvb+vvm+vvt)*10;
per_frame_40=q30  = (vvb+vvm+vvt)*10;
per_frame_41=q31  = (vvb+vvm+vvt)*10;
per_frame_42=q32  = (vvb+vvm+vvt)*10;
per_frame_43=
per_frame_44=slowtime = slowtime+beat*time;
per_frame_45=ying = if(below(ying,1),1,ying);
per_frame_46=ying = if (beat,ying + bnot(time*10%3),ying);
per_frame_47=yin = ying%2;
per_frame_48=vol_now =  .4 * bass + 0.1 * (bass_att+treb+mid);
per_frame_49=vol_mean =  if(equal(frame%50,0),vol_mean-0.5*(vol_mean-vol_now),0.1*(vol_mean*9 + vol_now));
per_frame_50=beat = if(above(vol_now,1.5*vol_mean),1,0);
per_frame_51=beatcount = if(bnot(time%5000),0,beatcount);
per_frame_52=beatcount = beatcount +.05*beat;
per_frame_53=yang = bnot(beatcount%2);
per_frame_54=ib_r = 0;
per_frame_55=ib_g = pow(abs(sign(sin(slowtime))),2)*sin(slowtime);
per_frame_56=ib_b= cos(slowtime)*sign(cos(slowtime))*pow(abs(sign(sin(slowtime))),2);
per_frame_57=mv_g = sin(slowtime)*(sign(sin(slowtime))-1)*(sign(sin(slowtime)));
per_frame_58=mv_b = -1*abs(cos(slowtime))+1;
per_frame_59=mv_r = .8;
per_frame_60=redneg = if(below(ib_r,0),1,0);
per_frame_61=greenneg = if(below(ib_g,0),1,0);
per_frame_62=blueneg = if(below(ib_b,0),1,0);
per_frame_63=wave_r = if(redneg,if(bor(greenneg , blueneg),1,1+ib_r),ib_r);
per_frame_64=wave_g = if(greenneg,if(equal(greenneg + blueneg,2),1,1+ib_g),ib_g);
per_frame_65=wave_b = if(blueneg,1 + ib_b, ib_b);
per_frame_66=q1 = if(yin,sin(slowtime),q1);
per_frame_67=q2 = if(yin,cos(slowtime),0);
per_frame_68=q3 = sin(beatcount);
per_frame_69=dx = if(yin,.01*sin(slowtime),if(equal(yin,yang),0,dx));
per_frame_70=dy = if(yin,.01*cos(slowtime),0);
per_frame_71=q5 = if(bnot(yin),abs(cos(time)),dx);
per_frame_72=wave_mystery=wave_mystery-1*sin(time*.65*sin(q3));
per_frame_73=wave_mode=int(rand(slowtime%12));
per_frame_74=chng=sin(time*.5);
per_frame_75=cthr=.9999;
per_frame_76=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_77=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_78=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_79=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_80=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_81=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_82=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_83=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_84=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_85=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_86=monitor=chng;
per_frame_87=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_88=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_89=
per_frame_90=monitor=mq1;
per_frame_91=vol=bass+treb+mid;
per_frame_92=atime=atime+vol;
per_frame_93=q11=.4+sin(atime*.006        )*.4;
per_frame_94=q12=.4+cos(atime*.00613828348)*.4;
per_frame_95=q13=.4+sin(atime*.00598593455)*.4;
per_frame_96=monitor=q13;
per_frame_97=q4=sin(atime*.03);
per_frame_98=q5=cos(atime*.030383824);
per_frame_99=q6=tan(atime*.029384834);
per_frame_100=
per_pixel_1=solipsist = if(equal(q3,0),0,.01*( rad - q3*x + pow(q3,4)*y));
per_pixel_2=rot = rot + sin(rad)-5*solipsist-1.5*q5;
per_pixel_3=sy = if(equal(q3,0),sy,1-solipsist);
per_pixel_4=new_x=rad*.05-x;
per_pixel_5=new_y=rad*.05-y;
per_pixel_6=zoom=zoom+.01*sin(ang-rad*3.14*sin(if(Above(q2,q1),.5,-.5)*sin(new_X*new_y)))*sin(if(Above(q3,q1),.5,-.5))-.03*sin(Ang*5-rad*sin(if(Above(q3,q2),.5,-.5)));
warp_1=`shader_body {
warp_2=`
warp_3=`//uv = uv_orig;
warp_4=`float corr = texsize.xy*texsize_noise_lq.zw;
warp_5=`float2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;
warp_6=`
warp_7=`float2 tmp = uv1;
warp_8=`tmp.x = ang*3; tmp.y = rad;
warp_9=`uv1 = tmp;
warp_10=`
warp_11=`float3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);
warp_12=`
warp_13=`float3 ret1 = GetBlur1 (uv)-.3;
warp_14=`float3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;
warp_15=`float3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;
warp_16=`
warp_17=`ret = -.4*blur + crisp;
warp_18=`
warp_19=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_20=`                      ((uv1.xyy*q27
warp_21=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_22=`                      ).xyz*
warp_23=`                      float3(1,1,0)*0.05 + 
warp_24=`                      time*float3(0,0,1)*q29
warp_25=`                     );
warp_26=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_27=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_28=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_29=`    
warp_30=` ret *= 0.98 * pow(1-.01*q28*q28*rad,2); 
warp_31=`  ret -= 0.04;
warp_32=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`float2 rs, rs0, uv1, uv2, uv3,uv4,uv5,dz,sunpos1;
comp_3=`float3 ret1,col,gnd, back,back2;
comp_4=`
comp_5=`
comp_6=`shader_body {
comp_7=`
comp_8=`
comp_9=`ret1 = GetPixel(uv_orig);
comp_10=`
comp_11=`uv2 = float2 (uv.x,uv.y-.3);
comp_12=`float shadow = lum(GetBlur2(frac(uv2)))*3;
comp_13=`
comp_14=`float k1 = saturate(lum(back));
comp_15=`ret = lerp(GetPixel(uv),2*GetBlur1(uv),.4)*1.5;
comp_16=`
comp_17=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_18=`                      ((uv2.xyy*q28
comp_19=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_20=`                      ).xyz*
comp_21=`                      float3(1,1,0)*0.05 + 
comp_22=`                      time*float3(0,0,1)*q31
comp_23=`                     );
comp_24=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_25=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_26=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_27=`ret += saturate(1) * saturate(1-lum(ret))*(1-shadow) * .2*(uv.y);
comp_28=`
comp_29=`}
