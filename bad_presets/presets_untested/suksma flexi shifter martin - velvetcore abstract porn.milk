MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=0.910
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=0.24832
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.050
ib_r=0.100
ib_g=0.100
ib_b=0.100
ib_a=0.014
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=t1 = (q1 + q2*2);
wave_0_per_frame2=
wave_0_per_point1=sp = sample*6.2832*3.3 - t1;
wave_0_per_point2=ra = .5*(int(rand(1001))*.001 - int(rand(1001))*.001);
wave_0_per_point3=sz = sample*(.05 + ra*.05) + value1*1.6*sample;
wave_0_per_point4=x = q3 + sz*sin(sp);
wave_0_per_point5=y = 1-q4 + sz*cos(sp);
wave_0_per_point6=
wave_0_per_point7=a = min(value1*4,1);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t1 = (q1 + q2*2);
wave_1_per_point1=sp = sample*6.2832*3.3 - t1 + 3.14;
wave_1_per_point2=ra = .5*(int(rand(1001))*.001 - int(rand(1001))*.001);
wave_1_per_point3=sz = sample*(.05 + ra*.05) + value2*1.6*sample;
wave_1_per_point4=x = q3 + sz*sin(sp);
wave_1_per_point5=y = 1-q4 + sz*cos(sp);
wave_1_per_point6=
wave_1_per_point7=a = min(value2*4,1);
wave_1_per_point8=
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=x = q1;
wave_2_per_point2=y = 1-q2;
wavecode_3_enabled=0
wavecode_3_samples=54
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=
wave_3_per_point2=mx = .5 + .5*sin(time);
wave_3_per_point3=my = .5 + .5*cos(time);
wave_3_per_point4=
wave_3_per_point5=x = (mx - .5)*.75 + .5;
wave_3_per_point6=y = my;
shapecode_0_enabled=1
shapecode_0_sides=33
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.72130
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.54934
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=//ang = time;
shape_0_per_frame2=
shape_0_per_frame3=tex_zoom = 1/rad;
shapecode_1_enabled=1
shapecode_1_sides=34
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.88027
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.67032
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.500
shapecode_1_a=0.160
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.500
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=x = int(rand(1001))*.001*1.5 - .25;
shape_1_per_frame2=y = int(rand(1001))*.001*1.5 - .25;
shapecode_2_enabled=1
shapecode_2_sides=34
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.88027
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.67032
shapecode_2_r=0.000
shapecode_2_g=0.500
shapecode_2_b=0.000
shapecode_2_a=0.160
shapecode_2_r2=0.000
shapecode_2_g2=0.500
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=x = int(rand(1001))*.001*1.5 - .25;
shape_2_per_frame2=y = int(rand(1001))*.001*1.5 - .25;
shapecode_3_enabled=1
shapecode_3_sides=34
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.88027
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.67032
shapecode_3_r=0.500
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=0.160
shapecode_3_r2=0.500
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=x = int(rand(1001))*.001*1.5 - .25;
shape_3_per_frame2=y = int(rand(1001))*.001*1.5 - .25;
shape_3_per_frame3=
per_frame_1=decay = .99;
per_frame_2=warp = 0;
per_frame_3=
per_frame_4=tic = min(time - tir,.1);
per_frame_5=tir = time;
per_frame_6=
per_frame_7=ra = 10;
per_frame_8=treb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);
per_frame_9=mid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);
per_frame_10=bass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);
per_frame_11=vav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);
per_frame_12=
per_frame_13=tt = tt + tic*treb_avg;
per_frame_14=mt = mt + tic*mid_avg;
per_frame_15=bt = bt + tic*bass_avg;
per_frame_16=vt = vt + tic*vav;
per_frame_17=
per_frame_18=q3 = .5 + min(vav*.1,.3)*sin(vt);
per_frame_19=q4 = .5 + min(vav*.1,.3)*cos(vt);
per_frame_20=
per_frame_21=//q3 = vt*2;
per_frame_22=
per_frame_23=
per_frame_24=
per_frame_25=tic = min(time - tir,.1);
per_frame_26=tir = time;
per_frame_27=
per_frame_28=warp = 0;
per_frame_29=zoom = 1;
per_frame_30=
per_frame_31=ti = time*2.4;
per_frame_32=ob_r = 0.5 + 0.5*sin(0.5*(time + 2*(cos(ti*0.645)*0.8 + 0.2*sin(ti*0.475))));
per_frame_33=ob_g = 0.5 + 0.5*sin(0.5*(time + 2*(cos(ti*0.561)*0.5 + 0.5*sin(ti*0.680)) + 2.094));
per_frame_34=ob_b = 0.5 + 0.5*sin(0.5*(time + 2*(cos(ti*0.326)*0.3 + 0.7*sin(ti*0.546)) + 4.188));
per_frame_35=
per_frame_36=ib_r = ob_r*.75*0;
per_frame_37=ib_g = ob_g*.75*0;
per_frame_38=ib_b = ob_b*.75*0;
per_frame_39=
per_frame_40=
per_frame_41=
per_frame_42=ra = 10;
per_frame_43=treb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);
per_frame_44=mid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);
per_frame_45=bass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);
per_frame_46=vav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);
per_frame_47=
per_frame_48=tt = tt + tic*treb_avg;
per_frame_49=mt = mt + tic*mid_avg;
per_frame_50=bt = bt + tic*bass_avg;
per_frame_51=vt = vt + tic*vav;
per_frame_52=q1 = bt; // per pixel dx shift
per_frame_53=q2 = (mt + tt)*.5; // per pixel dy shift
per_frame_54=
per_frame_55=monitor = fps;
per_frame_56=decay = 1;
per_frame_57=
per_frame_58=tc = tic*10;
per_frame_59=tm = tm + if(above(sin(tm),0),tc*2-av*tc,vav*tc);
per_frame_60=//wrap = above(sin(tm),0);
per_frame_61=
per_frame_62=q5 = (treb_avg + mid_avg)*.1;
per_frame_63=
per_frame_64=q6 = .5 + .2*sin(bt*.279) + .25*sin(bt*.972); // artefact ring 2
per_frame_65=q7 = .5 + .2*sin(bt*.785) + .25*sin(bt*.489);
per_frame_66=q8 = bass_avg*.2;
per_frame_67=vtime=vtime+(bass+treb+mid)*.01;
per_frame_68=q26=sin(vtime)*5;
per_frame_69=q27=cos(vtime*1.1)*5;
per_pixel_1=vt = (q1 + q2*2)*.33333;
per_pixel_2=vav = (q5*2 + q8)*.3333*5;
per_pixel_3=zm = .05*(1-rad*1);
per_pixel_4=rot = .01*sin(ang*5 + vt)*vav;
per_pixel_5=dx = zm*(x-q3);
per_pixel_6=dy = zm*(y-q4);
per_pixel_7=
per_pixel_8=
per_pixel_9=ba = (bass - 1)*.75 + 1;
per_pixel_10=bb = min(1,ba);
per_pixel_11=trmi = (treb + mid - 2)*.5*.75 + 1;
per_pixel_12=
per_pixel_13=xx = sin(x*4.8 + q2*1.024)*.25 + .15*sin(x*7.1 - q2*.9437) + .1*sin(x*15.9 - q2*1.222);
per_pixel_14=yy = sin(y*3 + q2*.935)*.15 + .15*sin(y*16.5 + q2*1.127) + .2*sin(y*9.2 - q2*1.974);
per_pixel_15=
per_pixel_16=a = .5 + .2*sin(q2*.687) + .25*sin(q2*.248); // artefact ring 1
per_pixel_17=b = .5 + .2*sin(q2*.354) + .25*sin(q2*.724);
per_pixel_18=dis = pow((x-a)*(x-a) + (y-b)*(y-b)*.75,.5);
per_pixel_19=sw = below(abs(dis - q5),.015) + below(abs(dis - (q5-.1)),.01) + below(abs(dis - (q5-.2)),.005);
per_pixel_20=
per_pixel_21=a = q6;
per_pixel_22=b = q7;
per_pixel_23=dis = pow((x-a)*(x-a) + (y-b)*(y-b)*.75,.5);
per_pixel_24=sw = sw + below(abs(dis - q8),.015) + below(abs(dis - (q8-.1)),.01) + below(abs(dis - (q8-.2)),.005);
per_pixel_25=
per_pixel_26=sw = if(sw,int(rand(3)),below(int(rand(int(fps*5))),1));
per_pixel_27=zoom = 1 + sw*12;
per_pixel_28=rot = rot + sw*12;
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float2 uv1, uv6;
warp_4=`float dx,dy;
warp_5=`
warp_6=`shader_body {
warp_7=`
warp_8=`uv1 = (uv-.5);
warp_9=`
warp_10=`float2 ang2= tex2D (sampler_noise_hq,uv1/3+.006*time).xy;
warp_11=`uv6 = mul(uv1,float2x2(ang2.y,-ang2.x,ang2.x,ang2.y));
warp_12=`
warp_13=`mus = abs(.5*cos(uv6.y*14)-(cos(uv6.x*71)));
warp_14=`mus *= float3 (1,.96,.9)/25;
warp_15=`
warp_16=`uv6 = .2*sin(12*uv+rand_frame);
warp_17=`float3 dots = .001/length(uv6)* float3 (0.2,1,1);
warp_18=`
warp_19=`//dots = lum(tex2D (sampler_noise_hq,uv +rand_frame));
warp_20=`//dots = (dots-.7) * (dots >= .7) * float3 (0.2,1,1);
warp_21=`
warp_22=`mus -= dots;
warp_23=`
warp_24=`
warp_25=`float3 blur = GetBlur1(frac(uv));
warp_26=`
warp_27=`float2 hor = float2 (texsize.z,0);
warp_28=`float2 ver = float2 (0,texsize.w);
warp_29=`hor = float2 (.004,0);
warp_30=`ver = float2 (0,.004);
warp_31=`
warp_32=`
warp_33=`
warp_34=`float dx = lum(GetPixel(uv+hor)-GetPixel(uv-hor));
warp_35=`float dy = lum(GetPixel(uv+ver)-GetPixel(uv-ver));
warp_36=`
warp_37=`float2 zz = float2 (dx,dy);
warp_38=`
warp_39=`
warp_40=`float3 crisp= tex2D(sampler_main,uv+zz*.02);
warp_41=`crisp +=.015 - length(zz)*blur/1.5;
warp_42=`
warp_43=`float3 ret1 = crisp - lum(blur)*.012 + mus;
warp_44=`//ret1 = abs(mus)/2;
warp_45=`ret = ret1 * .99 -  .04 ;
warp_46=`}
comp_1=`float2 complex_div(float2 numerator, float2 denominator){
comp_2=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_3=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_4=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_5=`}
comp_6=`
comp_7=`float2 uv_polar(float2 domain, float2 center){
comp_8=`   float2 c = domain - center;
comp_9=`   float rad_hq = length(c);
comp_10=`   float ang_hq = atan2(c.x,c.y);
comp_11=`   return float2(ang_hq, rad_hq);
comp_12=`}
comp_13=`
comp_14=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_15=`   float2 polar = uv_polar(domain, center);
comp_16=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_17=`}
comp_18=`
comp_19=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_20=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_21=`}
comp_22=`
comp_23=`float2 uv_bipolar_logarithmic(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_24=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_25=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord)*float2(M_INV_PI_2,1);
comp_26=`}
comp_27=`
comp_28=`float2 uv_scale(float2 domain, float2 center, float2 scale){
comp_29=`   return center + (domain-center)*scale;
comp_30=`}
comp_31=`float2 uv_lens_half_sphere(float2 domain, float2 position, float radius, float refractivity){
comp_32=`   float2 polar = uv_polar(domain, position);
comp_33=`   float cone = saturate(1-polar.y/radius);
comp_34=`   float halfsphere = sqrt(1-pow(cone-1,2));
comp_35=`   float w = atan2(1-cone,halfsphere);
comp_36=`   float refrac_w = w-asin(sin(w)/refractivity);
comp_37=`   float refrac_d = 1-cone - sin(refrac_w)*halfsphere/cos(refrac_w);
comp_38=`   float2 refrac_uv =position+float2(sin(polar.x),cos(polar.x))*refrac_d*radius;
comp_39=`   bool mask =(length(domain-position)<radius);
comp_40=`   return !mask*domain + 
comp_41=`           mask*refrac_uv;
comp_42=`}
comp_43=`shader_body
comp_44=`{
comp_45=`float2 uvo = uv;
comp_46=`uv = 0.5+(uv-0.5)*aspect.wz;
comp_47=`uv = uv_bipolar_logarithmic(uv, float2(0,0.5), float2(1,0.5), 4, 0.55, float2(q26,0.1*q27));
comp_48=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.995; // Eo.S. mirror code with cutted borders
comp_49=`uv = uv_lens_half_sphere(uv, 0.5, 0.5, 3).yx;
comp_50=`uv = uv_bipolar_logarithmic(uv, float2(0,0.5), float2(1,0.5), 4, 0.55, float2(q26,0.1*q27)).yx;
comp_51=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.995; // Eo.S. mirror code with cutted borders
comp_52=`
comp_53=`    ret = GetPixel(uv)*0.4 + GetBlur2(uv)*1.75;
comp_54=`//ret=1-ret;
comp_55=`}
comp_56=`
comp_57=`
