MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000
fGammaAdj=1.700
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=1
fWaveAlpha=0.004
fWaveScale=0.295
fWaveSmoothing=0.000
fWaveParam=-0.440
fModWaveAlphaStart=1.000
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=0.228
fWarpScale=4.141
fZoomExponent=0.43865
fShader=0.000
zoom=0.99010
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.18090
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.040
ob_size=0.005
ob_r=1.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.250
mv_r=1.000
mv_g=0.500
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=2.02310
wavecode_0_smoothing=0.00000
wavecode_0_r=0.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=t2 = 0;
wave_0_init2=t3 = 0;
wave_0_init3=t4 = 0;
wave_0_init4=cl = 0;
wave_0_per_frame1=vol = bass*8 + mid*5 + treb*3;
wave_0_per_frame2=m = m*0.97 + vol*0.08;
wave_0_per_frame3=monitor = vol;
wave_0_per_frame4=beat = above(vol,res)*above(vol,m)*above(vol,16);
wave_0_per_frame5=diff = (1-beat)*diff + beat*(vol-res);
wave_0_per_frame6=res = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);
wave_0_per_frame7=res = max(0,res);
wave_0_per_frame8=b = beat;
wave_0_per_frame9=g = 1-beat;
wave_0_per_point1=tt3 = tt3*0.6 + (value1)*1;
wave_0_per_point2=tt2 = tt2*0.7 + tt3*0.2;
wave_0_per_point3=tt1 = tt1*0.8 + tt2*0.1;
wave_0_per_point4=d = d*0.9 + tt1*0.2;
wave_0_per_point5=
wave_0_per_point6=y = 0.5 + d*sample*(1-sample)*4;
wave_0_per_point7=x =  -0.05 + sample*1.1;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=2.44415
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=t2 = 0;
wave_1_init2=t3 = 0;
wave_1_init3=t4 = 0;
wave_1_init4=cl = 0;
wave_1_per_point1=w = sample*asin(1)*4;
wave_1_per_point2=d = 0.04;
wave_1_per_point3=x = 0.5 + sin(w)*d;
wave_1_per_point4=y = 0.5 + cos(w)*d;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=100.00000
wavecode_2_smoothing=0.60000
wavecode_2_r=0.000
wavecode_2_g=0.400
wavecode_2_b=1.000
wavecode_2_a=0.300
wave_2_per_frame1=t1 = q1;
wave_2_per_frame2=t2 = q2;
wave_2_per_frame3=t3 = q3;
wave_2_per_frame4=t4 = q4;
wave_2_per_frame5=t5 = q5;
wave_2_per_frame6=t6 = q6;
wave_2_per_frame7=t7 = q7;
wave_2_per_frame8=t8 = q8;
wave_2_per_point1=sample = 1-sample;
wave_2_per_point2=xxx = xx;
wave_2_per_point3=yyy = yy;
wave_2_per_point4=xx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2
wave_2_per_point5=+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;
wave_2_per_point6=
wave_2_per_point7=yy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6
wave_2_per_point8=+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;
wave_2_per_point9=d = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));
wave_2_per_point10=x = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;
wave_2_per_point11=y = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=2.44415
wavecode_3_smoothing=0.00000
wavecode_3_r=0.000
wavecode_3_g=0.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_init1=t2 = 0;
wave_3_init2=t3 = 0;
wave_3_init3=t4 = 0;
wave_3_init4=cl = 0;
wave_3_per_frame1=t8 = 1;
wave_3_per_point1=t8 = -t8;
wave_3_per_point2=y = (1+t8)*0.01;
wave_3_per_point3=x = sample;
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=1
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.330
shapecode_0_y=0.500
shapecode_0_rad=0.34340
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.12566
shapecode_0_tex_zoom=0.70591
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.490
shapecode_1_y=0.500
shapecode_1_rad=0.04557
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.73458
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=0.000
shapecode_1_a=0.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=1.000
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=1
shapecode_2_thickOutline=1
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.750
shapecode_2_rad=0.04208
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.73458
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_init1=vx = 0
shape_2_per_frame1=x = q2;
shape_2_per_frame2=y = q6;
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=1
shapecode_3_thickOutline=1
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.750
shapecode_3_rad=0.07059
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.73458
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_init1=vx = 0
shape_3_per_frame1=x = q1;
shape_3_per_frame2=y = q5;
per_frame_init_1=x1 =0.5+ (int(rand(1000))-500)/2500;
per_frame_init_2=y1 =0.5+ (int(rand(1000))-500)/2500;
per_frame_init_3=x2 =0.5+ (int(rand(1000))-500)/2500;
per_frame_init_4=y2 =0.5+ (int(rand(1000))-500)/2500;
per_frame_init_5=x3 =0.5+ (int(rand(1000))-500)/2500;
per_frame_init_6=y3 =0.5+ (int(rand(1000))-500)/2500;
per_frame_init_7=x4 =0.5+ (int(rand(1000))-500)/2500;
per_frame_init_8=y4 =0.5+ (int(rand(1000))-500)/2500;
per_frame_1=wave_a = 0;
per_frame_2=zoom = 0.996;
per_frame_3=warp = 0.18 - (bass-treb)*0.15;
per_frame_4=
per_frame_5=bounce = 0.8;
per_frame_6=d12 = 1/( sqr(x1-x2) + sqr(y1-y2));
per_frame_7=d13 = 1/( sqr(x1-x3) + sqr(y1-y3));
per_frame_8=d14 = 1/( sqr(x1-x4) + sqr(y1-y4));
per_frame_9=d23 = 1/( sqr(x2-x3) + sqr(y2-y3));
per_frame_10=d24 = 1/( sqr(x2-x4) + sqr(y2-y4));
per_frame_11=d34 = 1/( sqr(x3-x4) + sqr(y3-y4));
per_frame_12=vx1 = vx1 + (x2-x1)*d12 + (x3-x1)*d13 + (x4-x1)*d14;
per_frame_13=vy1 = vy1 + (y2-y1)*d12 + (y3-y1)*d13 + (y4-y1)*d14;
per_frame_14=vx2 = vx2 + (x1-x2)*d12 + (x3-x2)*d23 + (x4-x2)*d24;
per_frame_15=vy2 = vy2 + (y1-y2)*d12 + (y3-y2)*d23 + (y4-y2)*d24;
per_frame_16=vx3 = vx3 + (x1-x3)*d13 + (x2-x3)*d23 + (x4-x3)*d34;
per_frame_17=vy3 = vy3 + (y1-y3)*d13 + (y2-y3)*d23 + (y4-y3)*d34;
per_frame_18=vx4 = vx4 + (x1-x4)*d14 + (x2-x4)*d24 + (x3-x4)*d34;
per_frame_19=vy4 = vy4 + (y1-y4)*d14 + (y2-y4)*d24 + (y3-y4)*d34;
per_frame_20=dt = 0.00002;
per_frame_21=vx1 = if(above(x1,1),-abs(vx1)*bounce,if(below(x1,0),abs(vx1)*bounce,vx1));
per_frame_22=vx2 = if(above(x2,1),-abs(vx2)*bounce,if(below(x2,0),abs(vx2)*bounce,vx2));
per_frame_23=vx3 = if(above(x3,1),-abs(vx3)*bounce,if(below(x3,0),abs(vx3)*bounce,vx3));
per_frame_24=vx4 = if(above(x4,1),-abs(vx4)*bounce,if(below(x4,0),abs(vx4)*bounce,vx4));
per_frame_25=vy1 = if(above(y1,1),-abs(vy1)*bounce,if(below(y1,0),abs(vy1)*bounce,vy1));
per_frame_26=vy2 = if(above(y2,1),-abs(vy2)*bounce,if(below(y2,0),abs(vy2)*bounce,vy2));
per_frame_27=vy3 = if(above(y3,1),-abs(vy3)*bounce,if(below(y3,0),abs(vy3)*bounce,vy3));
per_frame_28=vy4 = if(above(y4,1),-abs(vy4)*bounce,if(below(y4,0),abs(vy4)*bounce,vy4));
per_frame_29=x1 = x1 + vx1*dt; y1 = y1 + vy1*dt;
per_frame_30=x2 = x2 + vx2*dt; y2 = y2 + vy2*dt;
per_frame_31=x3 = x3 + vx3*dt; y3 = y3 + vy3*dt;
per_frame_32=x4 = x4 + vx4*dt; y4 = y4 + vy4*dt;
per_frame_33=
per_frame_34=
per_frame_35=
per_frame_36=q1 =  0.5 - x1;
per_frame_37=q2 = -0.5 + y1;
per_frame_38=q3 =  0.5 - x2;
per_frame_39=q4 = -0.5 + y2;
per_frame_40=q5 =  0.5 - x3;
per_frame_41=q6 = -0.5 + y3;
per_frame_42=q7 =  0.5 - x4;
per_frame_43=q8 = -0.5 + y4;
per_frame_44=
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_main, uv ).xyz;
warp_5=`
warp_6=`    // take the difference between the crisp and blurred images,
warp_7=`    // then add it back into the image.  Creates spots and stripes over time.
warp_8=`    ret += (ret - GetBlur1(uv))*0.3;
warp_9=`    ret *= 0.9;
warp_10=`
warp_11=`   // add noise:
warp_12=`   float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.1;// + rand_frame.xy;
warp_13=`   ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 28;
warp_14=`
warp_15=`   // desaturate over time, to keep the globs white
warp_16=`   ret = lerp(ret, lum(ret), 0.04);
warp_17=`}
comp_1=`float2 factorA, factorB, product;
comp_2=`float2 numerator, denominator, fraction;
comp_3=`shader_body
comp_4=`{
comp_5=`float2 uvo = uv;
comp_6=`uv = (uv-0.5);
comp_7=`factorA = uv+ float2(q1,q2);
comp_8=`factorB = float2(8,0);
comp_9=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_10=`float2 uv1 = product;
comp_11=`factorA = uv+ float2(q3,q4);
comp_12=`factorB = float2(8,0);
comp_13=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_14=`float2 uv2 = product;
comp_15=`factorA = uv+ float2(q5,q6);
comp_16=`factorB = float2(8,0);
comp_17=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_18=`float2 uv3 = product;
comp_19=`factorA = uv+ float2(q7,q8);
comp_20=`factorB = float2(8,0);
comp_21=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_22=`float2 uv4 = product;
comp_23=`factorA = uv1;
comp_24=`factorB = uv2;
comp_25=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_26=`float2 uv12 = product;
comp_27=`factorA = uv3;
comp_28=`factorB = uv4;
comp_29=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_30=`float2 uv34 = product;
comp_31=`factorA = uv12;
comp_32=`factorB = uv34;
comp_33=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_34=`numerator = float2(1,0);
comp_35=`denominator = product;
comp_36=`fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
comp_37=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
comp_38=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
comp_39=`uv = fraction*2;
comp_40=`uv = lerp(0.5 + (uvo-0.5)*(2+(bass_att-treb_att)*0.02),uv+0.5,0.5);
comp_41=`
comp_42=`float l = length(uv-0.5);
comp_43=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5); // Eo.S. mirror code with cutted borders
comp_44=`ret = GetPixel(uv).x*float3(1,0,0)*0.5;
comp_45=`ret = pow(ret.x,0.8)*float3(1.2,0.15,0);
comp_46=`ret = lerp(ret,float3(1,1,1),GetBlur2(uv).z*0.6);
comp_47=`ret = lerp(ret,float3(1,1.1,1.2),GetPixel(uv).z);
comp_48=`ret = lerp(ret,float3(0.2,0,0.1),GetBlur1(uv).y*6);
comp_49=`}
