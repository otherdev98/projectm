MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=2.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=3
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=1
fWaveAlpha=1.000
fWaveScale=0.181
fWaveSmoothing=0.750
fWaveParam=-0.200
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=9.861
fWarpScale=16.217
fZoomExponent=1.50374
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=1.00000
sx=1.00000
sy=1.00000
wave_r=0.900
wave_g=0.200
wave_b=0.400
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.100
ob_g=0.100
ob_b=0.000
ob_a=1.000
ib_size=0.150
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=0.000
mv_b=0.000
mv_a=1.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=1.800
shapecode_0_rad=0.53742
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.72509
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=1
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=1.800
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=1.800
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=warp=  0*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_2=volume=  0.3*(bass+mid+att)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_3=yamptarg=  if(equal(frame%15,0),min(0.25*volume*bass_att,0.5),xamptarg)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_4=yamp=  xamp + 0.5*(xamptarg-xamp)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_5=ydir=  if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir))*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_6=yspeed=  xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_7=ypos=  xpos + 0.001*xspeed*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_8=yamptarg=  if(equal(frame%15,0),min(0.15*volume*treb_att,0.5),yamptarg)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_9=yamp=  yamp + 0.5*(yamptarg-yamp)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_10=ydir=  if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir))*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_11=yspeed=  yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_12=ypos=  ypos + 0.001*yspeed*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_13=beatrate=  equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_14=lastbeat=  lastbeat + equal(lastbeat,0)*time*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_15=meanbass_att=  0.1*(meanbass_att*9 + bass_att)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_16=peakbass_att=  max(bass_att,peakbass_att)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_17=beat=  above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1))*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_18=beatrate=  max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_19=peakbass_att=  beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_20=lastbeat=  beat*time + (1-beat)*lastbeat*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_21=peakbass_att=  max(peakbass_att,1.1*meanbass_att)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_22=wave_x=  xpos + 0.5*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_23=wave_y=  1-(ypos + 0.5)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_24=wave_r=  0.5 + 0.499*( 0.60*atan(0.980*time*0.01) + 0.40*atan(1.047*time*0.01) )*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_25=wave_g=  0.5 + 0.499*( 0.60*atan(0.835*time*0.01) + 0.40*atan(1.081*time*0.01) )*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_26=wave_b=  0.5 + 0.499*( 0.60*atan(0.814*time*0.01) + 0.40*atan(1.011*time*0.01) )*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_27=wave_mystery=  -0.17 + 0.03*(0.6*atan(0.637*time*0.01) + 0.4*atan(0.949*time*0.01))*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_28=mv_r=  if(beat, 1, ib_r)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_29=mv_b=  if(beat, wave_b, ib_b)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_30=//mv_a=  if(beat, 0.1, ib_a)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_31=//ib_a=  0.015*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_32=q3=  wave_mystery*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_33=q1=  wave_x*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_34=q2=  1-wave_y*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_35=q2=  ypos+0.5*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_36=warp=0*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_37=
per_frame_38=//q2=  1-(ypos + 0.5)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_39=//q1=  0.5*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_40=//q2=0.5*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_41=ob_r=  atan(time*2)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_42=ob_b=  atan(time*6.8)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_43=ob_g=  atan(time*9.3)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_44=
per_frame_45=monitor=  wave_y*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_46=movement= movement + 0.4*(((bass+bass_att + 0.1*pow((bass+0.6*bass_att+0.2*treb_att),3)))/fps)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_47=movement=  if(above(movement,10000), 0, movement)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_48=rot= 1*atan(movement)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_49=cx=  wave_x*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_50=cy=  y_pos+0.5*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_frame_51=
per_frame_52=q8=  movement*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_1=myy=  x-q1*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_2=myx=  y-q2+0.1*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_3=dx=  3*atan(q8*0.675)*(2*myx*myy)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_4=dy=  3*atan(q8*0.675)*((myx*myx) - (myy*myy))*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_5=thresh=  above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_6=dx_r=  equal(thresh,2)*0.015*atan(5*time)+(1-equal(thresh,2))*dx_r*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_7=dy_r=  equal(thresh,2)*0.015*atan(6*time)+(1-equal(thresh,2))*dy_r*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_8=
per_pixel_9=
per_pixel_10=//zoom=  zoom +q7*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_11=thresh=  above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_12=dx_r=  equal(thresh,2)*0.015*atan(5*time)+(1-equal(thresh,2))*dx_r*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_13=dy_r=  equal(thresh,2)*0.015*atan(6*time)+(1-equal(thresh,2))*dy_r*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_14=
per_pixel_15=rot=  rot + 0.00006*(0.1*(time))+(0.5*(0.5-rad))+rad*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_16=rot=  rot - 0.1*sqr(0.5*cos(ang*time)*bass_att)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_17=zoom=  zoom - 0.09*(atan(1-rad)*0.25*(0.25*(5-rad)))*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_18=zoom=  zoom - 0.05*above(y,0.5)*sqr(0.5*atan(ang*time)*0.1*bass_att)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_19=zoom=  zoom - 0.05*below(y,0.5)*sqr(0.5*cos(ang*time)*0.1*treb_att)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_20=du=  (x*2-1) - q1*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_21=dv=  (y*2-1) - q2*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_22=dist=  sqrt(du*du+dv*dv)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_23=ang2=  atan2(du,dv) + time*0.15*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_24=mult=  0.65*atan(dist*0.05)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_25=dx=  mult*atan(ang2*2-1.5)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_26=dy=  mult*cos(ang2*2-1.5)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_27=rot=(0.15+sin(time*0.07)*0.061)*pow(-ang,3)-1.18*atan(ang)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_28=zoom=2*atan(-rad)+1.3+ atan(rad)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_29=dx=  dx + 0.09*atan(q8*0.785)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_30=dy=  dy + 0.09*atan(q8*0.675)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_31=zoom=  zoom +q7*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;
per_pixel_32=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_33=dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_34=dy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_35=
per_pixel_36=
per_pixel_37=zoom = zoom - 0.01;
per_pixel_38=rot = rot + 5*above(x,0.45+0.35*sin(3.04*time))*below(x,0.55+0.35*sin(3.01*time))
per_pixel_39=*cos(time*0.1);
per_pixel_40=rot = rot + 5*below(y,0.45+0.35*cos(2.91*time))*below(y,0.55+0.35*cos(2.9*time))
per_pixel_41=*sin(time*0.1);
per_pixel_42=zoom = zoom + above(sin(time),0.090)*0.02*bass_att;
warp_1=`sampler sampler_rand02;
warp_2=`float4  texsize_rand02;    // ...it's smart enough to get it from just this.
warp_3=`//float4  texsize_rand03;    // ...it's smart enough to get it from just this.
warp_4=`  
warp_5=`shader_body
warp_6=`{
warp_7=`    // sample previous frame
warp_8=`    float3 main = tex2D( sampler_main, uv ).xyz;
warp_9=`float s = 1;
warp_10=`float zoom = sin((q5-q6)*(q14-q5)*.1)*s + s*1.01;
warp_11=`float2 Zoom = float2(zoom,zoom);
warp_12=`float2 Pan = float2(1.0136,.31);
warp_13=` float2 c = (uv - 0.5) * Zoom * aspect - Pan;
warp_14=`float2 v = 0+sin(q5)*.05;
warp_15=`
warp_16=`float m = 0;
warp_17=`
warp_18=`const float r = 5;
warp_19=`float its = 30;
warp_20=`for (int n = 0; n < its; n++)
warp_21=`{
warp_22=`v = float2(v.x * v.x - v.y * v.y, v.x * v.y * 2) + c;
warp_23=`
warp_24=`if (dot(v, v) < (r*r - 1))
warp_25=`m++;
warp_26=`
warp_27=`v = clamp(v, -r, r);
warp_28=`}
warp_29=`
warp_30=`float3 man = tex2D( sampler_main, v ).xyz;
warp_31=`float3 color = tex2D( sampler_rand02, v ).xyz;
warp_32=`
warp_33=`
warp_34=`if (m == its)
warp_35=`ret = 0;
warp_36=`else
warp_37=`ret = (float4(sin(m/4+q1*3), sin(m/5-q2*3), sin(m/7+q22), 1) / 4 + 0.75); 
warp_38=`
warp_39=`ret = (ret*main*1.8
warp_40=`  + man * color)*.8;
warp_41=`//ret=man;
warp_42=`    ret *= 0.98; //or try: ret -= 0.004;
warp_43=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`float mask1, mask2, mask3, rad1, rad2, rad3;
comp_3=`float2 rs0, rs, rs1,dz, rsk, dz1, uv4, 
comp_4=`       Kugel1, Kugel2, Kugel3;
comp_5=`float3 noise, ret1, ret2;
comp_6=`
comp_7=`shader_body {
comp_8=`float2 uv1 = (uv-.5 )*aspect.xy;
comp_9=`
comp_10=`uv1 = mul(uv1,float2x2(_qb));
comp_11=`
comp_12=`//Kugel1
comp_13=`rsk = (uv1 + float2 (q11,q12)) ;
comp_14=`dz1 = normalize(rsk);
comp_15=`rad1 = 8*(q13)*length (rsk) ;
comp_16=`uv4 =  tan(rad1)*dz1;
comp_17=`mask1 = saturate(10-7*rad1);
comp_18=`Kugel1 = uv4*mask1/(1+q13*q13)*q13;
comp_19=`
comp_20=`//Kugel2
comp_21=`rsk = (uv1 + float2 (q14,q15)) ;
comp_22=`dz1 = normalize(rsk);
comp_23=`rad2 = 2*(1+q16)*length (rsk) ;
comp_24=`uv4 =  tan(rad2)*dz1;
comp_25=`mask2 = saturate(10-7*rad2);
comp_26=`Kugel2 = uv4*mask2/(1+q16*q16)*q16;
comp_27=`
comp_28=`//Kugel3
comp_29=`rsk = (uv1 + float2 (q17,q18)) ;
comp_30=`dz1 = normalize(rsk);
comp_31=`rad3 = 4*(1+q19)*length (rsk) ;
comp_32=`uv4 =  tan(rad3)*dz1;
comp_33=`mask3 = saturate(10-7*rad3);
comp_34=`Kugel3 = uv4*mask3/(1+q19*q19)*q19;
comp_35=`
comp_36=`float z = .1/abs(uv1.y*rad*rad);
comp_37=`rs0.y =  z ;
comp_38=`rs0.x = uv1.x*z*4;
comp_39=`
comp_40=`rs0 = mul(rs0, float2x2(_qa));
comp_41=`rs = rs0 + float2 (0,q30);
comp_42=`ret2 = GetBlur1(frac(rs))/z;
comp_43=`
comp_44=`uv1 += (Kugel1 + Kugel2 + Kugel3)*.25 + ret2/4;
comp_45=`ret1 = ret2 + (GetPixel(uv1/2+.5))
comp_46=`+ .4/rad1 * (.5-GetBlur1(0.1))*q22*(q27%4)
comp_47=`+ .3/rad2 * (.5-GetBlur1(0.2))*q22*((q27+1)%4)
comp_48=`+ .2/rad3 * (.5-GetBlur1(0))*q22*((q27+2)%4);
comp_49=`
comp_50=`ret = saturate(ret1*(1+ret1));
comp_51=`ret=1-ret;
comp_52=`}   
comp_53=`
