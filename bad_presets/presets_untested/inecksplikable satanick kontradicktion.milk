MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.770
fDecay=0.500
fVideoEchoZoom=1.002
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=1.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.015
ob_r=0.000
ob_g=0.000
ob_b=1.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=t1 = time/6;//q2*2; //volume time
wave_0_per_frame2=t2 = 0;
wave_0_per_frame3=t3 = 0;
wave_0_per_frame4=t4 = -1;
wave_0_per_frame5=t5 = -1;
wave_0_per_frame6=t6 = 1;
wave_0_per_point1=//rotating sphere
wave_0_per_point2=
wave_0_per_point3=n = sample*6.283;
wave_0_per_point4=
wave_0_per_point5=
wave_0_per_point6=//draw circle, loop 32x
wave_0_per_point7=xp = -1;
wave_0_per_point8=xp =   if( equal(t3,1) , 1 , xp );
wave_0_per_point9=  xp = if( equal(t3,2) , 1 , xp );
wave_0_per_point10=yp = t4 * t6;
wave_0_per_point11=zp = t5;
wave_0_per_point12=
wave_0_per_point13=t4h = t4;
wave_0_per_point14=  t4h = if( equal(t3,1) , t4h + 0.125 , t4h );
wave_0_per_point15=  t4h = if( equal(t3,3) , t4h + 0.125 , t4h );
wave_0_per_point16=t3 = t3 + 1;
wave_0_per_point17=t6h = t6;
wave_0_per_point18=  t6h = if( equal(t4h,1.125) , -t6h , t6h );
wave_0_per_point19=  t6 = t6h;
wave_0_per_point20=t5 = if( equal(t4h,1.125) , t5 + 0.125 , t5 ) ;
wave_0_per_point21=t4h = if( equal(t4h,1.125) , -1 , t4h );
wave_0_per_point22=  t4 = t4h;
wave_0_per_point23=t3 = t3 * (1-equal(t3,4));
wave_0_per_point24=
wave_0_per_point25=//x axis rotation;
wave_0_per_point26=ang = t1;
wave_0_per_point27=sang = sin(ang);cang = cos(ang);
wave_0_per_point28=xq = xp;
wave_0_per_point29=yq = yp*cang - zp*sang;
wave_0_per_point30=zq = yp*sang + zp*cang;
wave_0_per_point31=xp=xq;yp=yq;zp=zq;
wave_0_per_point32=
wave_0_per_point33=//y axis rotation;
wave_0_per_point34=ang = t1*2;
wave_0_per_point35=sang = sin(ang);cang = cos(ang);
wave_0_per_point36=xq = xp*cang - zp*sang;
wave_0_per_point37=yq = yp;
wave_0_per_point38=zq = xp*sang + zp*cang;
wave_0_per_point39=xp=xq;yp=yq;zp=zq;
wave_0_per_point40=
wave_0_per_point41=//z axis rotation;
wave_0_per_point42=ang = t1*3;
wave_0_per_point43=sang = sin(ang);cang = cos(ang);
wave_0_per_point44=xq = xp*cang - yp*sang;
wave_0_per_point45=yq = xp*sang + yp*cang;
wave_0_per_point46=zq = zp;
wave_0_per_point47=xp=xq;yp=yq;zp=zq;
wave_0_per_point48=
wave_0_per_point49=//push forward into viewspace
wave_0_per_point50=zp = zp + 4;
wave_0_per_point51=
wave_0_per_point52=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_0_per_point53=
wave_0_per_point54=//project into camera space, and compensate for aspect ratio
wave_0_per_point55=x = xp/zp * fov + 0.5;
wave_0_per_point56=y = yp/zp * 1.3333 * fov + 0.5;
wave_0_per_point57=r=q8;
wave_0_per_point58=g=q9;
wave_0_per_point59=b=q10;
wave_0_per_point60=a=q11;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t1 = q2*2; //volume time
wave_1_per_point1=//traveling line
wave_1_per_point2=
wave_1_per_point3=n = sample*6.283;
wave_1_per_point4=phase = sample;
wave_1_per_point5=
wave_1_per_point6=//draw circle, loop 32x
wave_1_per_point7=xp = 0;
wave_1_per_point8=yp = 0;
wave_1_per_point9=zp = -1;
wave_1_per_point10=
wave_1_per_point11=//x axis rotation;
wave_1_per_point12=ang = (t1 + phase) * 7;
wave_1_per_point13=sang = sin(ang);cang = cos(ang);
wave_1_per_point14=xq = xp;
wave_1_per_point15=yq = yp*cang - zp*sang;
wave_1_per_point16=zq = yp*sang + zp*cang;
wave_1_per_point17=xp=xq;yp=yq;zp=zq;
wave_1_per_point18=
wave_1_per_point19=//y axis rotation;
wave_1_per_point20=ang = (t1 + phase) * 2.2;
wave_1_per_point21=sang = sin(ang);cang = cos(ang);
wave_1_per_point22=xq = xp*cang - zp*sang;
wave_1_per_point23=yq = yp;
wave_1_per_point24=zq = xp*sang + zp*cang;
wave_1_per_point25=xp=xq;yp=yq;zp=zq;
wave_1_per_point26=
wave_1_per_point27=//z axis rotation;
wave_1_per_point28=ang = (t1 + phase) * 3.4;
wave_1_per_point29=sang = sin(ang);cang = cos(ang);
wave_1_per_point30=xq = xp*cang - yp*sang;
wave_1_per_point31=yq = xp*sang + yp*cang;
wave_1_per_point32=zq = zp;
wave_1_per_point33=xp=xq;yp=yq;zp=zq;
wave_1_per_point34=
wave_1_per_point35=//push forward into viewspace
wave_1_per_point36=zp = zp + 4;
wave_1_per_point37=
wave_1_per_point38=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_1_per_point39=
wave_1_per_point40=//project into camera space, and compensate for aspect ratio
wave_1_per_point41=x = xp/zp * fov + 0.5;
wave_1_per_point42=y = yp/zp * 1.3333 * fov + 0.5;
wave_1_per_point43=
wave_1_per_point44=//a = sample;
wave_1_per_point45=r=q10;
wave_1_per_point46=g=q8;
wave_1_per_point47=b=q9;
wave_1_per_point48=a=q11;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=3
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=256
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.600
shapecode_0_g2=0.700
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_init1=t1 = q2*2; //volume time
shape_0_per_frame1=//traveling line
shape_0_per_frame2=
shape_0_per_frame3=n = (sin(q9+instance)+1)/2*instance*4000;//sample*6.283;
shape_0_per_frame4=phase = (sin(q8+instance)+1)/2*instance*4000;
shape_0_per_frame5=
shape_0_per_frame6=//draw circle, loop 32x
shape_0_per_frame7=xp = 0;
shape_0_per_frame8=yp = 0;
shape_0_per_frame9=zp = -1;
shape_0_per_frame10=
shape_0_per_frame11=//x axis rotation;
shape_0_per_frame12=ang = (t1 + phase) * 7;
shape_0_per_frame13=sang = sin(ang);cang = cos(ang);
shape_0_per_frame14=xq = xp-instance/300-q11*.1;
shape_0_per_frame15=yq = yp*cang - zp*sang;
shape_0_per_frame16=zq = yp*sang + zp*cang;
shape_0_per_frame17=xp=xq;yp=yq;zp=zq;
shape_0_per_frame18=
shape_0_per_frame19=//y axis rotation;
shape_0_per_frame20=ang = (t1 + phase) * 2.2;
shape_0_per_frame21=sang = sin(ang);cang = cos(ang);
shape_0_per_frame22=xq = xp*cang - zp*sang;
shape_0_per_frame23=yq = yp+instance/1000-q11*.1;
shape_0_per_frame24=zq = xp*sang + zp*cang;
shape_0_per_frame25=xp=xq;yp=yq;zp=zq;
shape_0_per_frame26=
shape_0_per_frame27=//z axis rotation;
shape_0_per_frame28=ang = (t1 + phase) * 3.4;
shape_0_per_frame29=sang = sin(ang);cang = cos(ang);
shape_0_per_frame30=xq = xp*cang - yp*sang;
shape_0_per_frame31=yq = xp*sang + yp*cang;
shape_0_per_frame32=zq = zp;
shape_0_per_frame33=xp=xq;yp=yq;zp=zq;
shape_0_per_frame34=
shape_0_per_frame35=//push forward into viewspace
shape_0_per_frame36=zp = zp + 4 + instance/100-q11*.1;
shape_0_per_frame37=rad=zp/150;
shape_0_per_frame38=fov = 1; //larger number equal less extreme perspective (zoom in)
shape_0_per_frame39=
shape_0_per_frame40=//project into camera space, and compensate for aspect ratio
shape_0_per_frame41=x = xp/zp * fov + 0.5;
shape_0_per_frame42=y = yp/zp * 1.3333 * fov + 0.5;
shape_0_per_frame43=r=q8-instance*.1;
shape_0_per_frame44=g=q10-instance*.11;
shape_0_per_frame45=b=q9-instance*.12;
shape_0_per_frame46=a=q11-instance*.13;
shape_0_per_frame47=r2=q9-instance*.14;
shape_0_per_frame48=g2=q10-instance*.15;
shape_0_per_frame49=b2=q8-instance*.16;
shape_0_per_frame50=a2=q11-instance*.17;
shape_0_per_frame51=border_r=q9-instance*.18;
shape_0_per_frame52=border_g=q8-instance*.19;
shape_0_per_frame53=border_b=q10-instance*.2;
shape_0_per_frame54=border_a=-q11-instance*.21;
shapecode_1_enabled=0
shapecode_1_sides=3
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.600
shapecode_1_g2=0.700
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=3
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.600
shapecode_2_g2=0.700
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=3
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.600
shapecode_3_g2=0.700
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
per_frame_init_1=step = 0;
per_frame_1=dec_med = pow (0.9, 30/fps);
per_frame_2=dec_slow = pow (0.96, 30/fps);
per_frame_3=dec_fast = pow (0.6, 30/fps);
per_frame_4=beat = max (max (bass, mid), treb); 
per_frame_5=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_6=is_beat = above(beat, 0+avg+peak) * above (time, t0+.1);
per_frame_7=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_8=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_9=index = (index + is_beat) %16;
per_frame_10=index2 = (index2 + is_beat*bnot(index))%8;
per_frame_11=
per_frame_12=q20 = avg;
per_frame_13=q21 = beat;
per_frame_14=q22 = peak;
per_frame_15=q24 = is_beat;
per_frame_16=vol = bass_att + mid_att + treb_att;
per_frame_17=vol_ = dec_med * vol_ + (1-dec_med)* vol;
per_frame_18=vol__ = dec_med * vol__ + (1-dec_med)* vol_;
per_frame_19=q27 = index + 1;
per_frame_20=q28 = index2 + 1;
per_frame_21=q23 = q22 -0.1/q22;
per_frame_22=q23 = max(q23,1);
per_frame_23=
per_frame_24=k1 =  is_beat*equal(index%8,0);
per_frame_25=p1 =  k1*(p1+1) + (1-k1)*p1;
per_frame_26=p2 = dec_fast * p2+ (1-dec_fast)*p1;
per_frame_27=rott = p2 * 3.1416/4;
per_frame_28=
per_frame_29=q1 = cos(rott);
per_frame_30=q2 = sin(rott);
per_frame_31=q3 = -q2;
per_frame_32=q4 = q1;
per_frame_33=
per_frame_34=trig = q24 * bnot(index%2);
per_frame_35=vx = vx*bnot(trig) + trig* (int(rand(100))/100-.5);
per_frame_36=vy = vy*bnot(trig) + trig* (int(rand(100))/100-.5);
per_frame_37=q10 = 0.2+vy*vy*2;
per_frame_38=q11 = sin(time/9)/2+.4;
per_frame_39=movz = movz-1/fps*(.3+vx);
per_frame_40=q9 = movz;
per_frame_41=
per_frame_42=q12 = min(q22,6)*2;
per_frame_43=q13 = min(2,1+abs(8*vy*vx));
per_frame_44=//dir_ = dec_med*dir_ + (1-dec_med)*(index2%2-.5);
per_frame_45=dir_ =  bass-1;
per_frame_46=
per_frame_47=trig = bnot(index%4) * q24;
per_frame_48=dir = bnot(trig)*dir + trig*(int(rand(10))-5);
per_frame_49=
per_frame_50=trel = trel + .1/fps*dir;
per_frame_51=trel_ = dec_med*trel_ + (1-dec_med)*trel;
per_frame_52=
per_frame_53=q5 = cos(trel_);
per_frame_54=q6 = sin(trel_+0*q27*(q28%2));
per_frame_55=q7 = -q6;
per_frame_56=q8 = q5;
per_frame_57=
per_frame_58=zoom = 1.02;
per_frame_59=rot = .5*sin(bnot(q28%2)*q28) ;
per_frame_60=rot = .0*sin(time/3);
per_frame_61=dx = .0;
per_frame_62=
per_frame_63=monitor = q11;
warp_1=`sampler sampler_fc_rand00;
warp_2=`
warp_3=`shader_body
warp_4=`{
warp_5=`    // sample previous frame
warp_6=`//use in warp shader for collidescope in neon 3 mixes
warp_7=`uv=abs(frac(uv.yx+.5)-.5) ;
warp_8=`uv=(uv.yx*2);
warp_9=`
warp_10=`
warp_11=`
warp_12=`
warp_13=`float3 uv_sphere;
warp_14=`uv_sphere.xy = uv;
warp_15=`uv_sphere.xy = frac( uv_sphere.xy  ) * 2.0;
warp_16=`uv_sphere.xy = 1.0 - abs( uv_sphere.xy - 1.0 );
warp_17=`uv_sphere = tex2Dbias( sampler_main, float4(uv_sphere.xy,0.0,-0.5) );
warp_18=`
warp_19=`   ret = tex2D( sampler_fc_rand00, frac(lerp(uv_orig,uv,uv_sphere)));
warp_20=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`float3 ret1, neu, neu2;
comp_3=`float2 uv0, uv1, uv2, uv3, uv4;
comp_4=`float m,n;
comp_5=`shader_body
comp_6=`{
comp_7=`float2 uv2;
comp_8=`float ang2, c, s;
comp_9=`uv0 = uv;
comp_10=`uv -= 0.5;
comp_11=`uv *= aspect.xy;    
comp_12=`
comp_13=`float dist = 1;
comp_14=`float inten = 1;
comp_15=`float maskn = 1; float maskp = 0;
comp_16=`ret1 = 0;
comp_17=`int anz = 4;
comp_18=`n = 1; 
comp_19=`
comp_20=`uv = mul(uv,float2x2(_qa));
comp_21=`
comp_22=`float t_rel = q10;
comp_23=`while (n <= anz) {
comp_24=`    m =  n-int(t_rel);
comp_25=`
comp_26=`    dist = frac(1-n*1.0/anz+frac(-t_rel)/anz); //evtl sqrt !
comp_27=`    inten =  4*(1-dist)*pow(dist,.2);
comp_28=`    uv2 = frac(3*uv*dist +m*.35 + q7*dist*dist);
comp_29=`    neu = GetPixel (uv2) + GetBlur1(uv2);
comp_30=`    maskn = 1-pow(dist,.1)*saturate(8*neu);
comp_31=`
comp_32=`    ret1 = ret1*maskn + neu*inten*.7;
comp_33=`n++;
comp_34=`}
comp_35=`
comp_36=`
comp_37=`float flash = saturate(.01*(q21-2)/length(sin(float2(q15,q16) + 2*uv+.2*rand_frame)));
comp_38=`
comp_39=`float smoke = lum(ret1)*(1-lum(ret1))*4;
comp_40=`ret = pow(ret1,1.5)
comp_41=`+ flash*saturate(1-smoke/2) + saturate(1-smoke)*q29*(q27==2)*(q28<=2);
comp_42=`//ret = GetPixel(uv0*2)*6;
comp_43=`}
