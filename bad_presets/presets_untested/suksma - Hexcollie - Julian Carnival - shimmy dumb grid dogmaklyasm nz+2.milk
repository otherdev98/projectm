MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=0.500
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.010
fWarpScale=0.010
fZoomExponent=1.00000
fShader=0.000
zoom=9.86086
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.015
ob_r=0.840
ob_g=0.700
ob_b=1.000
ob_a=0.180
ib_size=0.500
ib_r=0.980
ib_g=0.270
ib_b=0.240
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=it = (it + 1)*above(sample,0)*below(it,53);
wave_0_per_point2=ita = (ita + equal(it,0))*above(sample,0);
wave_0_per_point3=
wave_0_per_point4=sw = if(equal(it,0),int(rand(4)),1);
wave_0_per_point5=xv = if(sw,xv,int(rand(1001))*.001*.8);
wave_0_per_point6=mx = xv + ita*.025;
wave_0_per_point7=my = if(sw,my,int(rand(1001))*.001*.975);
wave_0_per_point8=
wave_0_per_point9=sz = .01;
wave_0_per_point10=vx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);
wave_0_per_point11=vy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);
wave_0_per_point12=
wave_0_per_point13=cvc = if(equal(it,0),cvb,cvc);
wave_0_per_point14=cvb = if(equal(it,0),cva,cvb);
wave_0_per_point15=cva = if(equal(it,0),cv,cva);
wave_0_per_point16=cv = if(equal(it,0),if(cva*cvb,if(cva,above(int(rand(1001))*.001,.69),above(int(rand(1001))*.001,.14)),1),cv);
wave_0_per_point17=
wave_0_per_point18=lr = if(equal(it,0),if(cv,int(rand(10001))*.0001*316.02,int(rand(10001))*.0001*193.66),lr);
wave_0_per_point19=
wave_0_per_point20=let = (1-cv)*(1 + above(lr,43.31)*4 + above(lr,100.19)*4 + above(lr,138.64)*6 + above(lr,175.51)*6) + cv*(2 + above(lr,10.56) + above(lr,33.69) + above(lr,50.94)*2 + above(lr,60.18) + above(lr,72.77) + above(lr,88.08)*2 + above(lr,89.08) + above(lr,94.69) + above(lr,122.67) + above(lr,138.03) + above(lr,171.95)*2 + above(lr,188.09) + above(lr,189.09) + above(lr,227.73) + above(lr,256.96) + above(lr,292.39)*2 + above(lr,297.52) + above(lr,304.09) + above(lr,305.57) + above(lr,314.63));
wave_0_per_point21=
wave_0_per_point22=va = equal(let,23) + equal(let,24) + equal(let,26);
wave_0_per_point23=vb = below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);
wave_0_per_point24=vc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);
wave_0_per_point25=vd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);
wave_0_per_point26=ve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);
wave_0_per_point27=vf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);
wave_0_per_point28=vg = equal(let,1);
wave_0_per_point29=vh = equal(let,9) + equal(let,20);
wave_0_per_point30=vi = below(let,5) - equal(let,3) + equal(let,18);
wave_0_per_point31=vj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);
wave_0_per_point32=vk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);
wave_0_per_point33=vl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);
wave_0_per_point34=vm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);
wave_0_per_point35=vn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);
wave_0_per_point36=vo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);
wave_0_per_point37=vp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_0_per_point38=vq = equal(let,2) + equal(let,4) + equal(let,22);
wave_0_per_point39=vr = equal(let,9) + equal(let,20) + equal(let,25);
wave_0_per_point40=vs = equal(let,22);
wave_0_per_point41=vt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_0_per_point42=
wave_0_per_point43=a = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));
wave_0_per_point44=
wave_0_per_point45=a = a*below(ita,8);
wave_0_per_point46=
wave_0_per_point47=x = mx + vx*sz*.75;
wave_0_per_point48=y = my + vy*sz*1.5;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=it = (it + 1)*above(sample,0)*below(it,53);
wave_1_per_point2=ita = (ita + equal(it,0))*above(sample,0);
wave_1_per_point3=
wave_1_per_point4=sw = if(equal(it,0),int(rand(4)),1);
wave_1_per_point5=xv = if(sw,xv,int(rand(1001))*.001*.8);
wave_1_per_point6=mx = xv + ita*.025;
wave_1_per_point7=my = if(sw,my,int(rand(1001))*.001*.975);
wave_1_per_point8=
wave_1_per_point9=sz = .01;
wave_1_per_point10=vx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);
wave_1_per_point11=vy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);
wave_1_per_point12=
wave_1_per_point13=cvc = if(equal(it,0),cvb,cvc);
wave_1_per_point14=cvb = if(equal(it,0),cva,cvb);
wave_1_per_point15=cva = if(equal(it,0),cv,cva);
wave_1_per_point16=cv = if(equal(it,0),if(cva*cvb,if(cva,above(int(rand(1001))*.001,.69),above(int(rand(1001))*.001,.14)),1),cv);
wave_1_per_point17=
wave_1_per_point18=lr = if(equal(it,0),if(cv,int(rand(10001))*.0001*316.02,int(rand(10001))*.0001*193.66),lr);
wave_1_per_point19=
wave_1_per_point20=let = (1-cv)*(1 + above(lr,43.31)*4 + above(lr,100.19)*4 + above(lr,138.64)*6 + above(lr,175.51)*6) + cv*(2 + above(lr,10.56) + above(lr,33.69) + above(lr,50.94)*2 + above(lr,60.18) + above(lr,72.77) + above(lr,88.08)*2 + above(lr,89.08) + above(lr,94.69) + above(lr,122.67) + above(lr,138.03) + above(lr,171.95)*2 + above(lr,188.09) + above(lr,189.09) + above(lr,227.73) + above(lr,256.96) + above(lr,292.39)*2 + above(lr,297.52) + above(lr,304.09) + above(lr,305.57) + above(lr,314.63));
wave_1_per_point21=
wave_1_per_point22=va = equal(let,23) + equal(let,24) + equal(let,26);
wave_1_per_point23=vb = below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);
wave_1_per_point24=vc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);
wave_1_per_point25=vd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);
wave_1_per_point26=ve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);
wave_1_per_point27=vf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);
wave_1_per_point28=vg = equal(let,1);
wave_1_per_point29=vh = equal(let,9) + equal(let,20);
wave_1_per_point30=vi = below(let,5) - equal(let,3) + equal(let,18);
wave_1_per_point31=vj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);
wave_1_per_point32=vk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);
wave_1_per_point33=vl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);
wave_1_per_point34=vm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);
wave_1_per_point35=vn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);
wave_1_per_point36=vo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);
wave_1_per_point37=vp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_1_per_point38=vq = equal(let,2) + equal(let,4) + equal(let,22);
wave_1_per_point39=vr = equal(let,9) + equal(let,20) + equal(let,25);
wave_1_per_point40=vs = equal(let,22);
wave_1_per_point41=vt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_1_per_point42=
wave_1_per_point43=a = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));
wave_1_per_point44=
wave_1_per_point45=a = a*below(ita,8);
wave_1_per_point46=
wave_1_per_point47=x = mx + vx*sz*.75;
wave_1_per_point48=y = my + vy*sz*1.5;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=it = (it + 1)*above(sample,0)*below(it,53);
wave_2_per_point2=ita = (ita + equal(it,0))*above(sample,0);
wave_2_per_point3=
wave_2_per_point4=sw = if(equal(it,0),int(rand(4)),1);
wave_2_per_point5=xv = if(sw,xv,int(rand(1001))*.001*.8);
wave_2_per_point6=mx = xv + ita*.025;
wave_2_per_point7=my = if(sw,my,int(rand(1001))*.001*.975);
wave_2_per_point8=
wave_2_per_point9=sz = .01;
wave_2_per_point10=vx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);
wave_2_per_point11=vy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);
wave_2_per_point12=
wave_2_per_point13=cvc = if(equal(it,0),cvb,cvc);
wave_2_per_point14=cvb = if(equal(it,0),cva,cvb);
wave_2_per_point15=cva = if(equal(it,0),cv,cva);
wave_2_per_point16=cv = if(equal(it,0),if(cva*cvb,if(cva,above(int(rand(1001))*.001,.69),above(int(rand(1001))*.001,.14)),1),cv);
wave_2_per_point17=
wave_2_per_point18=lr = if(equal(it,0),if(cv,int(rand(10001))*.0001*316.02,int(rand(10001))*.0001*193.66),lr);
wave_2_per_point19=
wave_2_per_point20=let = (1-cv)*(1 + above(lr,43.31)*4 + above(lr,100.19)*4 + above(lr,138.64)*6 + above(lr,175.51)*6) + cv*(2 + above(lr,10.56) + above(lr,33.69) + above(lr,50.94)*2 + above(lr,60.18) + above(lr,72.77) + above(lr,88.08)*2 + above(lr,89.08) + above(lr,94.69) + above(lr,122.67) + above(lr,138.03) + above(lr,171.95)*2 + above(lr,188.09) + above(lr,189.09) + above(lr,227.73) + above(lr,256.96) + above(lr,292.39)*2 + above(lr,297.52) + above(lr,304.09) + above(lr,305.57) + above(lr,314.63));
wave_2_per_point21=
wave_2_per_point22=va = equal(let,23) + equal(let,24) + equal(let,26);
wave_2_per_point23=vb = below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);
wave_2_per_point24=vc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);
wave_2_per_point25=vd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);
wave_2_per_point26=ve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);
wave_2_per_point27=vf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);
wave_2_per_point28=vg = equal(let,1);
wave_2_per_point29=vh = equal(let,9) + equal(let,20);
wave_2_per_point30=vi = below(let,5) - equal(let,3) + equal(let,18);
wave_2_per_point31=vj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);
wave_2_per_point32=vk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);
wave_2_per_point33=vl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);
wave_2_per_point34=vm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);
wave_2_per_point35=vn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);
wave_2_per_point36=vo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);
wave_2_per_point37=vp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_2_per_point38=vq = equal(let,2) + equal(let,4) + equal(let,22);
wave_2_per_point39=vr = equal(let,9) + equal(let,20) + equal(let,25);
wave_2_per_point40=vs = equal(let,22);
wave_2_per_point41=vt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_2_per_point42=
wave_2_per_point43=a = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));
wave_2_per_point44=
wave_2_per_point45=a = a*below(ita,8);
wave_2_per_point46=
wave_2_per_point47=x = mx + vx*sz*.75;
wave_2_per_point48=y = my + vy*sz*1.5;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=it = (it + 1)*above(sample,0)*below(it,53);
wave_3_per_point2=ita = (ita + equal(it,0))*above(sample,0);
wave_3_per_point3=
wave_3_per_point4=drop = if(equal(sample,0),above(int(rand(1001))*.001,0.9),drop);
wave_3_per_point5=
wave_3_per_point6=sw = if(equal(it,0),if(drop,1-equal(it,0)*equal(ita,0),int(rand(4))),1);
wave_3_per_point7=xv = if(sw,xv,int(rand(1001))*.001*.8);
wave_3_per_point8=mx = xv + ita*.025;
wave_3_per_point9=my = if(sw,my,int(rand(1001))*.001*.975);
wave_3_per_point10=
wave_3_per_point11=sz = .01;
wave_3_per_point12=vx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);
wave_3_per_point13=vy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);
wave_3_per_point14=
wave_3_per_point15=cvc = if(equal(it,0),cvb,cvc);
wave_3_per_point16=cvb = if(equal(it,0),cva,cvb);
wave_3_per_point17=cva = if(equal(it,0),cv,cva);
wave_3_per_point18=cv = if(equal(it,0),if(cva*cvb,if(cva,above(int(rand(1001))*.001,.69),above(int(rand(1001))*.001,.14)),1),cv);
wave_3_per_point19=
wave_3_per_point20=lr = if(equal(it,0),if(cv,int(rand(10001))*.0001*316.02,int(rand(10001))*.0001*193.66),lr);
wave_3_per_point21=
wave_3_per_point22=let = (1-cv)*(1 + above(lr,43.31)*4 + above(lr,100.19)*4 + above(lr,138.64)*6 + above(lr,175.51)*6) + cv*(2 + above(lr,10.56) + above(lr,33.69) + above(lr,50.94)*2 + above(lr,60.18) + above(lr,72.77) + above(lr,88.08)*2 + above(lr,89.08) + above(lr,94.69) + above(lr,122.67) + above(lr,138.03) + above(lr,171.95)*2 + above(lr,188.09) + above(lr,189.09) + above(lr,227.73) + above(lr,256.96) + above(lr,292.39)*2 + above(lr,297.52) + above(lr,304.09) + above(lr,305.57) + above(lr,314.63));
wave_3_per_point23=milk = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;
wave_3_per_point24=
wave_3_per_point25=let = if(drop,milk,let);
wave_3_per_point26=
wave_3_per_point27=va = equal(let,23) + equal(let,24) + equal(let,26);
wave_3_per_point28=vb = below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);
wave_3_per_point29=vc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);
wave_3_per_point30=vd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);
wave_3_per_point31=ve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);
wave_3_per_point32=vf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);
wave_3_per_point33=vg = equal(let,1);
wave_3_per_point34=vh = equal(let,9) + equal(let,20);
wave_3_per_point35=vi = below(let,5) - equal(let,3) + equal(let,18);
wave_3_per_point36=vj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);
wave_3_per_point37=vk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);
wave_3_per_point38=vl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);
wave_3_per_point39=vm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);
wave_3_per_point40=vn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);
wave_3_per_point41=vo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);
wave_3_per_point42=vp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_3_per_point43=vq = equal(let,2) + equal(let,4) + equal(let,22);
wave_3_per_point44=vr = equal(let,9) + equal(let,20) + equal(let,25);
wave_3_per_point45=vs = equal(let,22);
wave_3_per_point46=vt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);
wave_3_per_point47=
wave_3_per_point48=a = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));
wave_3_per_point49=
wave_3_per_point50=a = a*below(ita,8);
wave_3_per_point51=
wave_3_per_point52=x = mx + vx*sz*.75;
wave_3_per_point53=y = my + vy*sz*1.5;
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=3.99866
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.25005
shapecode_0_r=0.900
shapecode_0_g=0.940
shapecode_0_b=0.890
shapecode_0_a=1.000
shapecode_0_r2=0.840
shapecode_0_g2=0.930
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_init1=t1 = int(rand(100))*0.01;
shape_0_init2=t2 = int(rand(100))*0.01;
shape_0_init3=te = 1;
shape_0_init4=poly = 5;
shape_0_per_frame1=tm = time*.05;
shape_0_per_frame2=
shape_0_per_frame3=r = .95 + .05*sin(tm*1.654);
shape_0_per_frame4=g = .95 + .05*sin(tm*1.564);
shape_0_per_frame5=b = .95 + .05*sin(tm*1.465);
shape_0_per_frame6=r2 = 1.9 - r;
shape_0_per_frame7=g2 = 1.9 - g;
shape_0_per_frame8=b2 = 1.9 - b;
shape_0_per_frame9=
shape_0_per_frame10=x = .4996;
shape_0_per_frame11=y = .5003;
shape_0_per_frame12=
shape_0_per_frame13=
shape_0_per_frame14=
shape_0_per_frame15=ang = (int(rand(1001))*.001 - int(rand(1001))*.001)*q1*.5;
shape_0_per_frame16=rad = rad - (int(rand(1001))*.001 + int(rand(1001))*.001)*1.5*q1;
shape_0_per_frame17=
shape_0_per_frame18=a=above(treb,.8);
shape_0_per_frame19=a2=above(treb,.8);
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=mv_x=64;mv_y=48;
per_frame_init_2=nut=0;
per_frame_init_3=stp=0;stq=0;
per_frame_init_4=rtp=0;rtq=0;
per_frame_init_5=wvr=0;
per_frame_init_6=decay=0;
per_frame_init_7=dcsp=0
per_frame_init_8=
per_frame_1=//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing
per_frame_2=vb = vb*0.95 + (1-vb)*pow(bass_att*treb_att*mid_att,2)*0.02;
per_frame_3=vvb = vvb*0.95 + (1-vvb)*vb*0.01;
per_frame_4=vm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;
per_frame_5=vvm = vvm*0.95 + (1-vvm)*vm*0.01;
per_frame_6=vt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;
per_frame_7=vvt = vvt*0.95 + (1-vvt)*vt*0.01;
per_frame_8=vvb = min(1,max(0,vvb));
per_frame_9=vvm = min(1,max(0,vvm));
per_frame_10=vvt = min(1,max(0,vvt));
per_frame_11=q1 = vvb*2;//0.5 + vb - vvb;
per_frame_12=q2 = vvm*2;//0.5 + vm - vvm;
per_frame_13=q3 = vvt*2;//0.5 + vt - vvt;
per_frame_14=v=2;
per_frame_15=bb = bb - vvb*v;
per_frame_16=mm = mm - vvm*v;
per_frame_17=tt = tt - vvt*v;
per_frame_18=q4 = -bb;
per_frame_19=q5 = -mm;
per_frame_20=q6 = -tt;
per_frame_21=q4=(q1+q2+q3)*5;
per_frame_22=q5=(q1+q2+q3)*5;
per_frame_23=q6=(q1+q2+q3)*5;
per_frame_24=q7=(q1+q2+q3)*1;
per_frame_25=q8=(q1+q2+q3)*5;
per_frame_26=q9=(q1+q2+q3)*5;
per_frame_27=q10=(q1+q2+q3)*5;
per_frame_28=q11=(q1+q2+q3)*5;
per_frame_29=q12=(q1+q2+q3)*5;
per_frame_30=q13=(q1+q2+q3)*5;
per_frame_31=q14=(q1+q2+q3)*5;
per_frame_32=q15=(q1+q2+q3)*5;
per_frame_33=q16=(q1+q2+q3)*5;
per_frame_34=q17=(q1+q2+q3)*5;
per_frame_35=q18=(q1+q2+q3)*5;
per_frame_36=q19=(q1+q2+q3)*5;
per_frame_37=q20=(q1+q2+q3)*5;
per_frame_38=q21=(q1+q2+q3)*5;
per_frame_39=q22=(q1+q2+q3)*5;
per_frame_40=q23=(q1+q2+q3)*5;
per_frame_41=q24=(q1+q2+q3)*5;
per_frame_42=q25=(q1+q2+q3)*5;
per_frame_43=q26=(q1+q2+q3)*5;
per_frame_44=q27=(q1+q2+q3)*5;
per_frame_45=q28=(q1+q2+q3)*5;
per_frame_46=q29=(q1+q2+q3)*5;
per_frame_47=q30=(q1+q2+q3)*5;
per_frame_48=q31=(q1+q2+q3)*5;
per_frame_49=q32=(q1+q2+q3)*5;
per_frame_50=
per_frame_51=echo_orient=1 + above(sin(time/2), 0 );
per_frame_52=wrap=above(sin(time/1), 0 );
per_frame_53=warp=0.0;
per_frame_54=zoom=1.00 + sin(time/1)/30;
per_frame_55=mv_x=sin(time/10)*12 + 52;
per_frame_56=mv_y=cos(time/10)*8 + 40;
per_frame_57=sparkadv=sparkadv-0.03 + below(sparkadv, 1);
per_frame_58=gamma=1 + bass*bass_att
per_frame_59=chng=sin(time*.5);
per_frame_60=cthr=.9999;
per_frame_61=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_62=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_63=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_64=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_65=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_66=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_67=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_68=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_69=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_70=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_71=monitor=chng;
per_frame_72=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_73=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_74=
per_frame_75=monitor=mq1;
per_frame_76=vol=bass+treb+mid;
per_frame_77=atime=atime+vol;
per_frame_78=q11=.4+sin(atime*.006        )*.4;
per_frame_79=q12=.4+cos(atime*.00613828348)*.4;
per_frame_80=q13=.4+sin(atime*.00598593455)*.4;
per_frame_81=monitor=q13;
per_frame_82=
warp_1=`shader_body
warp_2=`{
warp_3=`
warp_4=`    float1 d = 0.02;
warp_5=`    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*1280*texsize.z;
warp_6=`    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*1024*texsize.w;
warp_7=`    float2 my_uv = uv - float2(dx,dy)*0.004;
warp_8=`
warp_9=`
warp_10=`
warp_11=`    ret.y = tex2D( sampler_pc_main, my_uv).y;
warp_12=`    ret.y += (ret.y - GetBlur1(uv).y - 0.1)*.1 +0.02;
warp_13=`
warp_14=`ret.z = tex2d(sampler_fc_main, uv - float2(0,1)*texsize.zw).z - 0.004;
warp_15=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_16=`                      ((uv.xyy*q27
warp_17=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_18=`                      ).xyz*
warp_19=`                      float3(1,1,0)*0.05 + 
warp_20=`                      time*float3(0,0,1)*q29
warp_21=`                     );
warp_22=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_23=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_24=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_25=`
warp_26=`
warp_27=`uv = uv_orig;
warp_28=`float2 pixelsize = texsize.zw;
warp_29=`float1 conway = tex2D( sampler_pw_main, uv + float2(-1,-1)*pixelsize).x;
warp_30=`       conway += tex2D( sampler_pw_main, uv + float2(0,-1)*pixelsize).x;
warp_31=`       conway += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).x;
warp_32=`       conway += tex2D( sampler_pw_main, uv + float2(-1,0)*pixelsize).x;
warp_33=`       conway += tex2D( sampler_pw_main, uv + float2(1,0)*pixelsize).x;
warp_34=`       conway += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).x;
warp_35=`       conway += tex2D( sampler_pw_main, uv + float2(0,1)*pixelsize).x;
warp_36=`       conway += tex2D( sampler_pw_main, uv + float2(1,1)*pixelsize).x;
warp_37=`conway -= frac(conway);
warp_38=`float1 p = saturate (tex2D( sampler_pc_main, uv).x);
warp_39=`ret.x = saturate((1-abs(conway-3)))*(1-p);
warp_40=`ret.x += saturate(max(1-abs(conway-2),1-abs(conway-3)))*p;
warp_41=`
warp_42=`
warp_43=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`float2 ac = float2(q11,q12);
comp_5=`float2 mu = float2(q13,q14);
comp_6=`float2 c = float2(q15,q16);
comp_7=`float2 d = float2(q17,q18);
comp_8=`
comp_9=`float2 z = (uv-0.5)*aspect.xy;
comp_10=`
comp_11=`// (c*z + d)
comp_12=`float2 czd = float2(z.x*c.x-z.y*c.y,z.x*c.y-z.y*c.x) + d;
comp_13=`// mu/(cz+d)
comp_14=`float2 moebius = float2( mu.x*czd.x + mu.y*czd.y , mu.y*czd.x-mu.x*czd.y )/(czd.x*czd.x+czd.y*czd.y) + ac;
comp_15=`
comp_16=`moebius*=0.5;
comp_17=`float l = length(moebius);
comp_18=`moebius = 0.5 + (1.0 - abs( frac( moebius * 0.5 ) * 2 - 1.0 )-0.5)*0.95;
comp_19=`
comp_20=`float2 uvr = 0.5 + (uv-0.5)*0.2;
comp_21=`
comp_22=`ret = GetPixel(uvr).z*float3(0.4,0,0.7);
comp_23=`ret = lerp(ret,float3(0,1,1),saturate(tex2d(sampler_fc_main,moebius).y))*(1.4-pow(l*0.8,0.3));
comp_24=`ret = lerp(ret,float3(4,1,0),saturate(tex2d(sampler_fc_main,uvr).y-tex2d(sampler_pc_main,uvr).y)*4*(l*l));
comp_25=`ret = lerp(ret,-4,GetPixel(uvr).x);
comp_26=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_27=`                      ((moebius.xyy*q28
comp_28=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_29=`                      ).xyz*
comp_30=`                      float3(1,1,0)*0.05 + 
comp_31=`                      time*float3(0,0,1)*q31
comp_32=`                     );
comp_33=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_34=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_35=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_36=`ret = lerp(ret,2,tex2d(sampler_pc_main,uvr).x*0.75);
comp_37=`ret-=slow_roam_sin.zyx*slow_roam_cos.ywx*.5;
comp_38=`//ret = GetPixel(uv);
comp_39=`}
