MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=3.000000
fGammaAdj=1.900
fDecay=0.980
fVideoEchoZoom=1.169
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=1.00796
rot=0.02000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00016
sx=0.99967
sy=0.99990
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.080
wavecode_0_g=0.040
wavecode_0_b=0.020
wavecode_0_a=1.000
wave_0_per_frame1=t1 = q2*2; //volume time
wave_0_per_frame2=t2 = 0;
wave_0_per_frame3=t3 = 0;
wave_0_per_frame4=t4 = -1;
wave_0_per_frame5=t5 = -1;
wave_0_per_frame6=t6 = 1;
wave_0_per_point1=//rotating sphere
wave_0_per_point2=
wave_0_per_point3=n = sample*6.283;
wave_0_per_point4=
wave_0_per_point5=
wave_0_per_point6=//draw circle, loop 32x
wave_0_per_point7=xp = -1;
wave_0_per_point8=xp =   if( equal(t3,1) , 1 , xp );
wave_0_per_point9=  xp = if( equal(t3,2) , 1 , xp );
wave_0_per_point10=yp = t4 * t6;
wave_0_per_point11=zp = t5;
wave_0_per_point12=
wave_0_per_point13=t4h = t4;
wave_0_per_point14=  t4h = if( equal(t3,1) , t4h + 0.125 , t4h );
wave_0_per_point15=  t4h = if( equal(t3,3) , t4h + 0.125 , t4h );
wave_0_per_point16=t3 = t3 + 1;
wave_0_per_point17=t6h = t6;
wave_0_per_point18=  t6h = if( equal(t4h,1.125) , -t6h , t6h );
wave_0_per_point19=  t6 = t6h;
wave_0_per_point20=t5 = if( equal(t4h,1.125) , t5 + 0.125 , t5 ) ;
wave_0_per_point21=t4h = if( equal(t4h,1.125) , -1 , t4h );
wave_0_per_point22=  t4 = t4h;
wave_0_per_point23=t3 = t3 * (1-equal(t3,4));
wave_0_per_point24=
wave_0_per_point25=//x axis rotation;
wave_0_per_point26=ang = t1;
wave_0_per_point27=sang = sin(ang);cang = cos(ang);
wave_0_per_point28=xq = xp;
wave_0_per_point29=yq = yp*cang - zp*sang;
wave_0_per_point30=zq = yp*sang + zp*cang;
wave_0_per_point31=xp=xq;yp=yq;zp=zq;
wave_0_per_point32=
wave_0_per_point33=//y axis rotation;
wave_0_per_point34=ang = t1*2;
wave_0_per_point35=sang = sin(ang);cang = cos(ang);
wave_0_per_point36=xq = xp*cang - zp*sang;
wave_0_per_point37=yq = yp;
wave_0_per_point38=zq = xp*sang + zp*cang;
wave_0_per_point39=xp=xq;yp=yq;zp=zq;
wave_0_per_point40=
wave_0_per_point41=//z axis rotation;
wave_0_per_point42=ang = t1*3;
wave_0_per_point43=sang = sin(ang);cang = cos(ang);
wave_0_per_point44=xq = xp*cang - yp*sang;
wave_0_per_point45=yq = xp*sang + yp*cang;
wave_0_per_point46=zq = zp;
wave_0_per_point47=xp=xq;yp=yq;zp=zq;
wave_0_per_point48=
wave_0_per_point49=//push forward into viewspace
wave_0_per_point50=zp = zp + q8;
wave_0_per_point51=
wave_0_per_point52=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_0_per_point53=
wave_0_per_point54=//project into camera space, and compensate for aspect ratio
wave_0_per_point55=x = xp/zp * fov + 0.5;
wave_0_per_point56=y = yp/zp * 1.3333 * fov + 0.5;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.080
wavecode_1_g=0.040
wavecode_1_b=0.020
wavecode_1_a=1.000
wave_1_per_frame1=t1 = q2*2; //volume time
wave_1_per_frame2=t2 = 0;
wave_1_per_frame3=t3 = 0;
wave_1_per_frame4=t4 = -1;
wave_1_per_frame5=t5 = -1;
wave_1_per_frame6=t6 = 1;
wave_1_per_point1=//rotating sphere
wave_1_per_point2=
wave_1_per_point3=n = sample*6.283;
wave_1_per_point4=
wave_1_per_point5=
wave_1_per_point6=//draw circle, loop 32x
wave_1_per_point7=zp = -1;
wave_1_per_point8=zp =   if( equal(t3,1) , 1 , zp );
wave_1_per_point9=zp = if( equal(t3,2) , 1 , zp );
wave_1_per_point10=xp = t4 * t6;
wave_1_per_point11=yp = t5;
wave_1_per_point12=
wave_1_per_point13=t4h = t4;
wave_1_per_point14=t4h = if( equal(t3,1) , t4h + 0.125 , t4h );
wave_1_per_point15=t4h = if( equal(t3,3) , t4h + 0.125 , t4h );
wave_1_per_point16=t3 = t3 + 1;
wave_1_per_point17=t6h = t6;
wave_1_per_point18=t6h = if( equal(t4h,1.125) , -t6h , t6h );
wave_1_per_point19=t6 = t6h;
wave_1_per_point20=t5 = if( equal(t4h,1.125) , t5 + 0.125 , t5 ) ;
wave_1_per_point21=t4h = if( equal(t4h,1.125) , -1 , t4h );
wave_1_per_point22=t4 = t4h;
wave_1_per_point23=t3 = t3 * (1-equal(t3,4));
wave_1_per_point24=
wave_1_per_point25=//x axis rotation;
wave_1_per_point26=ang = t1;
wave_1_per_point27=sang = sin(ang);cang = cos(ang);
wave_1_per_point28=xq = xp;
wave_1_per_point29=yq = yp*cang - zp*sang;
wave_1_per_point30=zq = yp*sang + zp*cang;
wave_1_per_point31=xp=xq;yp=yq;zp=zq;
wave_1_per_point32=
wave_1_per_point33=//y axis rotation;
wave_1_per_point34=ang = t1*2;
wave_1_per_point35=sang = sin(ang);cang = cos(ang);
wave_1_per_point36=xq = xp*cang - zp*sang;
wave_1_per_point37=yq = yp;
wave_1_per_point38=zq = xp*sang + zp*cang;
wave_1_per_point39=xp=xq;yp=yq;zp=zq;
wave_1_per_point40=
wave_1_per_point41=//z axis rotation;
wave_1_per_point42=ang = t1*3;
wave_1_per_point43=sang = sin(ang);cang = cos(ang);
wave_1_per_point44=xq = xp*cang - yp*sang;
wave_1_per_point45=yq = xp*sang + yp*cang;
wave_1_per_point46=zq = zp;
wave_1_per_point47=xp=xq;yp=yq;zp=zq;
wave_1_per_point48=
wave_1_per_point49=//push forward into viewspace
wave_1_per_point50=zp = zp + q8;
wave_1_per_point51=
wave_1_per_point52=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_1_per_point53=
wave_1_per_point54=//project into camera space, and compensate for aspect ratio
wave_1_per_point55=x = xp/zp * fov + 0.5;
wave_1_per_point56=y = yp/zp * 1.3333 * fov + 0.5;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.080
wavecode_2_g=0.040
wavecode_2_b=0.020
wavecode_2_a=1.000
wave_2_per_frame1=t1 = q2*2; //volume time
wave_2_per_frame2=t2 = 0;
wave_2_per_frame3=t3 = 0;
wave_2_per_frame4=t4 = -1;
wave_2_per_frame5=t5 = -1;
wave_2_per_frame6=t6 = 1;
wave_2_per_point1=//rotating sphere
wave_2_per_point2=
wave_2_per_point3=n = sample*6.283;
wave_2_per_point4=
wave_2_per_point5=
wave_2_per_point6=//draw circle, loop 32x
wave_2_per_point7=yp = -1;
wave_2_per_point8=yp =   if( equal(t3,1) , 1 , yp );
wave_2_per_point9=yp = if( equal(t3,2) , 1 , yp );
wave_2_per_point10=zp = t4 * t6;
wave_2_per_point11=xp = t5;
wave_2_per_point12=
wave_2_per_point13=t4h = t4;
wave_2_per_point14=t4h = if( equal(t3,1) , t4h + 0.125 , t4h );
wave_2_per_point15=t4h = if( equal(t3,3) , t4h + 0.125 , t4h );
wave_2_per_point16=t3 = t3 + 1;
wave_2_per_point17=t6h = t6;
wave_2_per_point18=t6h = if( equal(t4h,1.125) , -t6h , t6h );
wave_2_per_point19=t6 = t6h;
wave_2_per_point20=t5 = if( equal(t4h,1.125) , t5 + 0.125 , t5 ) ;
wave_2_per_point21=t4h = if( equal(t4h,1.125) , -1 , t4h );
wave_2_per_point22=t4 = t4h;
wave_2_per_point23=t3 = t3 * (1-equal(t3,4));
wave_2_per_point24=
wave_2_per_point25=//x axis rotation;
wave_2_per_point26=ang = t1;
wave_2_per_point27=sang = sin(ang);cang = cos(ang);
wave_2_per_point28=xq = xp;
wave_2_per_point29=yq = yp*cang - zp*sang;
wave_2_per_point30=zq = yp*sang + zp*cang;
wave_2_per_point31=xp=xq;yp=yq;zp=zq;
wave_2_per_point32=
wave_2_per_point33=//y axis rotation;
wave_2_per_point34=ang = t1*2;
wave_2_per_point35=sang = sin(ang);cang = cos(ang);
wave_2_per_point36=xq = xp*cang - zp*sang;
wave_2_per_point37=yq = yp;
wave_2_per_point38=zq = xp*sang + zp*cang;
wave_2_per_point39=xp=xq;yp=yq;zp=zq;
wave_2_per_point40=
wave_2_per_point41=//z axis rotation;
wave_2_per_point42=ang = t1*3;
wave_2_per_point43=sang = sin(ang);cang = cos(ang);
wave_2_per_point44=xq = xp*cang - yp*sang;
wave_2_per_point45=yq = xp*sang + yp*cang;
wave_2_per_point46=zq = zp;
wave_2_per_point47=xp=xq;yp=yq;zp=zq;
wave_2_per_point48=
wave_2_per_point49=//push forward into viewspace
wave_2_per_point50=zp = zp + q8;
wave_2_per_point51=
wave_2_per_point52=fov = 1; //larger number equal less extreme perspective (zoom in)
wave_2_per_point53=
wave_2_per_point54=//project into camera space, and compensate for aspect ratio
wave_2_per_point55=x = xp/zp * fov + 0.5;
wave_2_per_point56=y = yp/zp * 1.3333 * fov + 0.5;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=3
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.600
shapecode_0_g2=0.700
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=3
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.600
shapecode_1_g2=0.700
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=3
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.600
shapecode_2_g2=0.700
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=3
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.600
shapecode_3_g2=0.700
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=q4=sin(atime*.03);
per_frame_25=q5=cos(atime*.030383824);
per_frame_26=q6=tan(atime*.029384834);
per_frame_27=
per_frame_28=wave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );
per_frame_29=wave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );
per_frame_30=wave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );
per_frame_31=q1 = (cx*2-1) + 0.32*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );
per_frame_32=q2 = (cy*2-1) + 0.52*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );
per_frame_33=q3 = (cx*2-1) + 0.32*( 0.60*sin(0.174*-time) + 0.40*sin(0.364*time) );
per_frame_34=q4 = (cy*2-1) + 0.52*( 0.60*sin(0.234*time) + 0.40*sin(0.271*-time) );
per_frame_35=decay = decay - 0.01*equal(frame%5,0);
per_pixel_1=du = x*2-1 - q1;
per_pixel_2=dv = y*2-1 - q2;
per_pixel_3=dist = sqrt(du*du+dv*dv);
per_pixel_4=ang2 = atan2(du,dv);
per_pixel_5=mult = 0.012/(dist+0.4);
per_pixel_6=dx = mult*sin(ang2-1.5);
per_pixel_7=dy = mult*cos(ang2-1.5);
per_pixel_8=du = x*2-1 - q3;
per_pixel_9=dv = y*2-1 - q4;
per_pixel_10=dist = sqrt(du*du+dv*dv);
per_pixel_11=ang2 = atan2(du,dv);
per_pixel_12=mult = 0.012/(dist+0.4);
per_pixel_13=dx = dx + mult*sin(ang2+1.5);
per_pixel_14=dy = dy + mult*cos(ang2+1.5);
warp_1=`shader_body
warp_2=`{
warp_3=`float2 pixelsize = texsize.zw;
warp_4=`float2 uvm = uv_orig;
warp_5=`
warp_6=`float2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;
warp_7=`float4 noiseVal = tex2D(sampler_noise_hq, frac(noise_uv*8));
warp_8=`
warp_9=`ret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,.97) - float3(.0,.0,.001));
warp_10=`
warp_11=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_12=`                      ((noise_uv.xyy*q27
warp_13=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_14=`                      ).xyz*
warp_15=`                      float3(1,1,0)*0.05 + 
warp_16=`                      time*float3(0,0,1)*q29
warp_17=`                     );
warp_18=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; 
warp_19=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; 
warp_20=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; 
warp_21=`
warp_22=`float3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*6*pixelsize).xyz;
warp_23=`if (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {
warp_24=`ret.xy = rsamp.xy;ret.z = rsamp.z;}
warp_25=`
warp_26=`//rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*2*pixelsize).xyz;
warp_27=`//if (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {
warp_28=`//ret.xy = rsamp.xy;ret.z = rsamp.z;}
warp_29=`
warp_30=`
warp_31=`ret.xy *= pow(ret.z,.01);
warp_32=`
warp_33=`
warp_34=`}
comp_1=`float2 gradBlur1( float2 domain, float2 d, float3 filter){
comp_2=`   float3 dx = ( 2*GetBlur1(domain + float2(1,0)*d) - 2*GetBlur1(domain-float2(1,0)*d) );
comp_3=`   float3 dy = ( 2*GetBlur1(domain + float2(0,1)*d) - 2*GetBlur1(domain-float2(0,1)*d) );
comp_4=`
comp_5=`   return 0.5*float2(dx.x*filter.x + dx.y*filter.y + dx.z*filter.z,
comp_6=`                     dy.x*filter.x + dy.y*filter.y + dy.z*filter.z)/(filter.x+filter.y+filter.z);
comp_7=`}
comp_8=`
comp_9=`shader_body
comp_10=`{
comp_11=`float2 d = texsize.zw*4;
comp_12=`float2 grady = gradBlur1(uv, d, float3(0,1,0));
comp_13=`float2 gradx = gradBlur1(uv + grady*d, d, float3(1,0,0));
comp_14=`float2 uv_green = uv-gradx*d*8;
comp_15=`ret = (0.7 + (grady.x+grady.y))*GetPixel(uv_green-grady*texsize.zw*8).y;
comp_16=`float3 c1 = lerp(0,float3(1,1,1),GetPixel(uv - gradx*d*0).x)*saturate(1-GetPixel(uv).y*2);
comp_17=`ret = lerp(ret,float3(1,1.4,2.4), (GetBlur3(saturate(uv_green + grady*texsize.zw*8)).y-1.3*GetPixel(uv_green-grady*texsize.zw*8).y));
comp_18=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_19=`                      ((uv_green.xyy*q28
comp_20=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_21=`                      ).xyz*
comp_22=`                      float3(1,1,0)*0.05 + 
comp_23=`                      time*float3(0,0,1)*q31
comp_24=`                     );
comp_25=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_26=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_27=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_28=`ret =  lerp(c1,1,ret);
comp_29=`ret = lerp(ret,float3(0,0,0),saturate(1*GetPixel(uv+grady*d*4 - gradx*d*16).z));
comp_30=`}
