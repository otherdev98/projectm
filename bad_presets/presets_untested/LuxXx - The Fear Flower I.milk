MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=3.000000
fGammaAdj=1.000
fDecay=0.990
fVideoEchoZoom=2.217
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=1.157
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=0.35177
fShader=0.000
zoom=0.98030
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=1.00000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=1.000
ib_size=0.005
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=tic = min(time-tir,.1);
wave_0_per_frame2=tir = time;
wave_0_per_frame3=ti = ti + tic*.5 + below(vr+vg+vb,.4)*tic*8;
wave_0_per_frame4=
wave_0_per_frame5=
wave_0_per_frame6=vr = .75 + .25*sin(ti*1.132 + 1);
wave_0_per_frame7=vg = .75 + .25*sin(ti*1.121 + 1);
wave_0_per_frame8=vb = .75 + .25*sin(ti*1.187 + 1);
wave_0_per_frame9=ar=vr;
wave_0_per_frame10=ag=vg;
wave_0_per_frame11=ab=vb;
wave_0_per_point1=sp = sample*10;
wave_0_per_point2=ti = time;
wave_0_per_point3=
wave_0_per_point4=
wave_0_per_point5=ox = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);
wave_0_per_point6=oy = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);
wave_0_per_point7=oz = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);
wave_0_per_point8=
wave_0_per_point9=dis = pow(ox*ox + oy*oy + oz*oz,.5);
wave_0_per_point10=
wave_0_per_point11=vol = (value1+value2)*2;
wave_0_per_point12=
wave_0_per_point13=ox = sign(ox)*pow(ox,4)*vol;
wave_0_per_point14=oy = sign(oy)*pow(oy,4)*vol;
wave_0_per_point15=oz = sign(oz)*pow(oz,4)*vol;
wave_0_per_point16=
wave_0_per_point17=a = (3.464 - dis)*.57735*.3;
wave_0_per_point18=
wave_0_per_point19=xang = q2;
wave_0_per_point20=yang = q3;
wave_0_per_point21=zang = q4;
wave_0_per_point22=
wave_0_per_point23=fov = .5;
wave_0_per_point24=
wave_0_per_point25=mx = ox*cos(yang) + oz*sin(yang);
wave_0_per_point26=mz = - ox*sin(yang) + oz*cos(yang);
wave_0_per_point27=ox = mx;
wave_0_per_point28=oz = mz;
wave_0_per_point29=mx = ox*cos(zang) - oy*sin(zang);
wave_0_per_point30=my = ox*sin(zang) + oy*cos(zang);
wave_0_per_point31=ox = mx;
wave_0_per_point32=oy = my;
wave_0_per_point33=my = oy*cos(xang) - oz*sin(xang);
wave_0_per_point34=mz = oy*sin(xang) + oz*cos(xang);
wave_0_per_point35=oy = my;
wave_0_per_point36=oz = mz;
wave_0_per_point37=
wave_0_per_point38=oz = (oz - int(oz*.2)*5 - 5)*2;
wave_0_per_point39=x = ox*fov/oz + 0.5;
wave_0_per_point40=x = (x-.5)*0.75 + 0.5;
wave_0_per_point41=y = oy*fov/oz + 0.5;
wave_0_per_point42=
wave_0_per_point43=
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=tic = min(time-tir,.1);
wave_1_per_frame2=tir = time;
wave_1_per_frame3=ti = ti + tic*.5 + below(vr+vg+vb,.4)*tic*8;
wave_1_per_frame4=
wave_1_per_frame5=
wave_1_per_frame6=vr = .75 + .25*sin(ti*1.132 + 1);
wave_1_per_frame7=vg = .75 + .25*sin(ti*1.121 + 1);
wave_1_per_frame8=vb = .75 + .25*sin(ti*1.187 + 1);
wave_1_per_frame9=ar=vr;
wave_1_per_frame10=ag=vg;
wave_1_per_frame11=ab=vb;
wave_1_per_point1=sp = sample*10;
wave_1_per_point2=ti = time;
wave_1_per_point3=
wave_1_per_point4=
wave_1_per_point5=ox = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);
wave_1_per_point6=oy = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);
wave_1_per_point7=oz = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);
wave_1_per_point8=
wave_1_per_point9=dis = pow(ox*ox + oy*oy + oz*oz,.5);
wave_1_per_point10=
wave_1_per_point11=ox = sign(ox)*pow(ox,4)*2;
wave_1_per_point12=oy = sign(oy)*pow(oy,4)*2;
wave_1_per_point13=oz = sign(oz)*pow(oz,4)*2;
wave_1_per_point14=
wave_1_per_point15=a = (1.732 - dis)*.57735;
wave_1_per_point16=
wave_1_per_point17=xang = q2;
wave_1_per_point18=yang = q3;
wave_1_per_point19=zang = q4;
wave_1_per_point20=
wave_1_per_point21=fov = .5;
wave_1_per_point22=
wave_1_per_point23=mx = ox*cos(yang) + oz*sin(yang);
wave_1_per_point24=mz = - ox*sin(yang) + oz*cos(yang);
wave_1_per_point25=ox = mx;
wave_1_per_point26=oz = mz;
wave_1_per_point27=mx = ox*cos(zang) - oy*sin(zang);
wave_1_per_point28=my = ox*sin(zang) + oy*cos(zang);
wave_1_per_point29=ox = mx;
wave_1_per_point30=oy = my;
wave_1_per_point31=my = oy*cos(xang) - oz*sin(xang);
wave_1_per_point32=mz = oy*sin(xang) + oz*cos(xang);
wave_1_per_point33=oy = my;
wave_1_per_point34=oz = mz;
wave_1_per_point35=
wave_1_per_point36=oz = (oz - int(oz*.2)*5 - 5)*2;
wave_1_per_point37=x = ox*fov/oz + 0.5;
wave_1_per_point38=x = (x-.5)*0.75 + 0.5;
wave_1_per_point39=y = oy*fov/oz + 0.5;
wave_1_per_point40=
wave_1_per_point41=
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.00000
wavecode_2_r=0.000
wavecode_2_g=0.000
wavecode_2_b=0.000
wavecode_2_a=1.000
wave_2_per_frame1=tic = min(time-tir,.1);
wave_2_per_frame2=tir = time;
wave_2_per_frame3=ti = ti + tic*.5 + below(vr+vg+vb,.4)*tic*8;
wave_2_per_frame4=
wave_2_per_frame5=
wave_2_per_frame6=vr = .75 + .25*sin(ti*1.132 + 1);
wave_2_per_frame7=vg = .75 + .25*sin(ti*1.121 + 1);
wave_2_per_frame8=vb = .75 + .25*sin(ti*1.187 + 1);
wave_2_per_frame9=ar=vr;
wave_2_per_frame10=ag=vg;
wave_2_per_frame11=ab=vb;
wave_2_per_point1=sp = sample*10;
wave_2_per_point2=ti = time;
wave_2_per_point3=
wave_2_per_point4=
wave_2_per_point5=ox = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);
wave_2_per_point6=oy = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);
wave_2_per_point7=oz = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);
wave_2_per_point8=
wave_2_per_point9=dis = pow(ox*ox + oy*oy + oz*oz,.5);
wave_2_per_point10=
wave_2_per_point11=ox = sign(ox)*pow(ox,3)*8;
wave_2_per_point12=oy = sign(oy)*pow(oy,3)*8;
wave_2_per_point13=oz = sign(oz)*pow(oz,3)*8;
wave_2_per_point14=
wave_2_per_point15=a = (1.732 - dis)*.57735;
wave_2_per_point16=
wave_2_per_point17=xang = q2;
wave_2_per_point18=yang = q3;
wave_2_per_point19=zang = q4;
wave_2_per_point20=
wave_2_per_point21=fov = .5;
wave_2_per_point22=
wave_2_per_point23=mx = ox*cos(yang) + oz*sin(yang);
wave_2_per_point24=mz = - ox*sin(yang) + oz*cos(yang);
wave_2_per_point25=ox = mx;
wave_2_per_point26=oz = mz;
wave_2_per_point27=mx = ox*cos(zang) - oy*sin(zang);
wave_2_per_point28=my = ox*sin(zang) + oy*cos(zang);
wave_2_per_point29=ox = mx;
wave_2_per_point30=oy = my;
wave_2_per_point31=my = oy*cos(xang) - oz*sin(xang);
wave_2_per_point32=mz = oy*sin(xang) + oz*cos(xang);
wave_2_per_point33=oy = my;
wave_2_per_point34=oz = mz;
wave_2_per_point35=
wave_2_per_point36=oz = (oz - int(oz*.2)*5 - 5)*2;
wave_2_per_point37=x = ox*fov/oz + 0.5;
wave_2_per_point38=x = (x-.5)*0.75 + 0.5;
wave_2_per_point39=y = oy*fov/oz + 0.5;
wave_2_per_point40=
wave_2_per_point41=
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=ra = .7;
wave_3_per_point2=rb = .1;
wave_3_per_point3=pib = 6.28318530718;
wave_3_per_point4=
wave_3_per_point5=tic = min(time-tin,.1);
wave_3_per_point6=tin = if(equal(sample,0),time,tin);
wave_3_per_point7=
wave_3_per_point8=mod = pow(pib,21);
wave_3_per_point9=med = 1;
wave_3_per_point10=
wave_3_per_point11=sp = sample*pib*mod + time*1;
wave_3_per_point12=sam = sample*med - q7;
wave_3_per_point13=
wave_3_per_point14=ox = ra*sin(sam*pib);
wave_3_per_point15=oy = ra*cos(sam*pib);
wave_3_per_point16=ox = ox + rb*-cos(sp)*sin(sam*pib);
wave_3_per_point17=oz = rb*-sin(sp);
wave_3_per_point18=oy = oy + rb*-cos(sp)*cos(sam*pib);
wave_3_per_point19=
wave_3_per_point20=
wave_3_per_point21=a = .5 + .5*cos(sample*pib*3 + pib*.5);
wave_3_per_point22=
wave_3_per_point23=xang = q2;
wave_3_per_point24=yang = q3;
wave_3_per_point25=zang = q4;
wave_3_per_point26=fov = .5;
wave_3_per_point27=
wave_3_per_point28=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point29=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point30=ox = mx;
wave_3_per_point31=oy = my;
wave_3_per_point32=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point33=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point34=ox = mx;
wave_3_per_point35=oz = mz;
wave_3_per_point36=my = oy*cos(xang) - oz*sin(xang);
wave_3_per_point37=mz = oy*sin(xang) + oz*cos(xang);
wave_3_per_point38=oy = my;
wave_3_per_point39=oz = mz;
wave_3_per_point40=
wave_3_per_point41=oz = oz - 2;
wave_3_per_point42=x = ox*fov/oz + 0.5;
wave_3_per_point43=x = (x-.5)*0.75 + 0.5;
wave_3_per_point44=y = oy*fov/oz + 0.5;
wave_3_per_point45=
shapecode_0_enabled=1
shapecode_0_sides=74
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.800
shapecode_0_y=0.200
shapecode_0_rad=0.60857
shapecode_0_ang=0.00000
shapecode_0_tex_ang=3.14159
shapecode_0_tex_zoom=0.75681
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_init1=t1 = rand(100)*0.01;
shape_0_init2=t2 = rand(100)*0.01;
shape_0_init3=te = 1;
shape_0_init4=poly = 5;
shape_0_per_frame1=ang = -q1;
shapecode_1_enabled=1
shapecode_1_sides=74
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.200
shapecode_1_y=0.800
shapecode_1_rad=0.60857
shapecode_1_ang=0.00000
shapecode_1_tex_ang=3.14159
shapecode_1_tex_zoom=0.75681
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_init1=t1 = rand(100)*0.01;
shape_1_init2=t2 = rand(100)*0.01;
shape_1_init3=te = 1;
shape_1_init4=poly = 5;
shape_1_per_frame1=ang = -q1;
shapecode_2_enabled=1
shapecode_2_sides=74
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.200
shapecode_2_y=0.200
shapecode_2_rad=0.60857
shapecode_2_ang=0.00000
shapecode_2_tex_ang=3.14159
shapecode_2_tex_zoom=0.75681
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_init1=t1 = rand(100)*0.01;
shape_2_init2=t2 = rand(100)*0.01;
shape_2_init3=te = 1;
shape_2_init4=poly = 5;
shape_2_per_frame1=ang = q1;
shapecode_3_enabled=1
shapecode_3_sides=74
shapecode_3_additive=0
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.800
shapecode_3_y=0.800
shapecode_3_rad=0.60857
shapecode_3_ang=0.00000
shapecode_3_tex_ang=3.14159
shapecode_3_tex_zoom=0.75681
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=0.000
shapecode_3_border_a=0.000
shape_3_init1=t1 = rand(100)*0.01;
shape_3_init2=t2 = rand(100)*0.01;
shape_3_init3=te = 1;
shape_3_init4=poly = 5;
shape_3_per_frame1=ang = q1;
per_frame_1=warp=0;
per_frame_2=framehalf = frame%2;
per_frame_3=volume = 0.3*(bass+mid);
per_frame_4=beatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);
per_frame_5=lastbeat = lastbeat + equal(lastbeat,0)*time;
per_frame_6=meanbass_att = 0.1*(meanbass_att*9 + bass_att);
per_frame_7=peakbass_att = max(bass_att,peakbass_att);
per_frame_8=beat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));
per_frame_9=beatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);
per_frame_10=peakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.99 + (1-above(time - lastbeat, 2*beatrate))*0.998);
per_frame_11=lastbeat = beat*time + (1-beat)*lastbeat;
per_frame_12=peakbass_att = max(peakbass_att,1.1*meanbass_att);
per_frame_13=mode = if(beat,abs(mode-1),mode);
per_frame_14=q8 = oldq8 +0.003*(((pow(1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps) + (pow(1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,5)/fps) + (pow(1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,4)/fps) + (pow(1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,3)/fps) + (pow(1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,2)/fps) +(1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att)/fps)) + 1/(fps*5);
per_frame_15=oldq8 = q8;
per_frame_16=q1 = 0.5 + 0.15*sin(0.416*q8) + 0.15*sin(0.832*q8) + 0.1*sin(1.324*q8);
per_frame_17=q2 = 0.5 + 0.15*sin(0.341*q8) + 0.15*sin(0.768*q8) + 0.1*sin(1.523*q8);
per_frame_18=q6 = 0.5 + 0.15*sin(0.287*q8) + 0.15*sin(0.913*q8) + 0.1*sin(1.142*q8);
per_frame_19=q7 = 0.5 + 0.15*sin(0.531*q8) + 0.15*sin(0.671*q8) + 0.1*sin(1.442*q8);
per_frame_20=ob_size = beat*0.05;
per_frame_21=ob_r = sin(20*(q1+q2));
per_frame_22=ob_g = sin(25*(q6+q7));
per_frame_23=q4 = (8 + 0.2*sin(q8*0.385) + 0.2*sin(q8*0.641) + 0.2*sin(q8*0.846));
per_frame_24=q5 = (12 + 0.2*sin(q8*0.385) + 0.2*sin(q8*0.641) + 0.2*sin(q8*0.846));
per_frame_25=q3 = mode;
per_frame_26=wave_a =0.4;
per_frame_27=wave_r = if(framehalf,0.5 + 0.15*sin(0.512*time) + 0.15*sin(0.943*time) + 0.1*sin(1.024*time),0.5 + 0.15*sin(0.483*time) + 0.15*sin(0.879*time) + 0.1*sin(1.423*time));
per_frame_28=wave_g = if(framehalf,0.5 + 0.15*sin(0.248*time) + 0.15*sin(0.829*time) + 0.1*sin(1.623*time),0.5 + 0.15*sin(0.461*time) + 0.15*sin(0.699*time) + 0.1*sin(1.254*time));
per_frame_29=wave_b = if(framehalf,0.5 + 0.15*sin(0.211*time) + 0.15*sin(0.652*time) + 0.1*sin(1.865*time),0.5 + 0.15*sin(0.333*time) + 0.15*sin(0.978*time) + 0.1*sin(1.359*time));
per_pixel_1=newx = x - q1;
per_pixel_2=newy = y - q6;
per_pixel_3=newrad = min(sqrt((newx)*(newx)+0.5625*(newy)*(newy))*2,sqrt(2));
per_pixel_4=newang = atan2(newx,newy);
per_pixel_5=newzoom = pow(0.995 + 0.05*sin((q4)*(newang+q3)), pow(sin(newrad*newrad), newrad));
per_pixel_6=dx = (newx)*newzoom - newx;
per_pixel_7=dy = (newy)*newzoom - newy;
per_pixel_8=newx = x - q2;
per_pixel_9=newy = y - q7;
per_pixel_10=newrad = min(sqrt((newx)*(newx)+0.5625*(newy)*(newy))*2,sqrt(2));
per_pixel_11=newang = atan2(newx,newy);
per_pixel_12=newzoom = pow(0.995 + 0.05*sin((q5)*(newang)), pow(sin(newrad*newrad), newrad));
per_pixel_13=dx = dx + (newx)*newzoom - newx;
per_pixel_14=dy = dy + (newy)*newzoom - newy;
per_pixel_15=newx = x - (0.33*(q1+q2+q6));
per_pixel_16=newy = y - (0.33*(3-q2-q6-q7));
per_pixel_17=newrad = min(sqrt((newx)*(newx)+0.5625*(newy)*(newy))*2,sqrt(2));
per_pixel_18=newang = atan2(newx,newy);
per_pixel_19=newzoom = pow(1.04 + 0.05*sin(0.5*(q4+q5)*(newang)), pow(sin(newrad*newrad), newrad));
per_pixel_20=dx = dx + (newx)*newzoom - newx;
per_pixel_21=dy = dy + (newy)*newzoom - newy;
warp_1=`shader_body
warp_2=`{
warp_3=`  float2 uv2 = lerp(uv_orig, uv, 0.2);
warp_4=`
warp_5=`  // diffused version:
warp_6=`  float ss = 0.3;
warp_7=`  float3 blur = 0.25*(
warp_8=`    tex2D(sampler_main, uv2+ss*texsize.zw*float2( 1, 1)).xyz +
warp_9=`    tex2D(sampler_main, uv2+ss*texsize.zw*float2(-1, 1)).xyz +
warp_10=`    tex2D(sampler_main, uv2+ss*texsize.zw*float2( 1,-1)).xyz +
warp_11=`    tex2D(sampler_main, uv2+ss*texsize.zw*float2(-1,-1)).xyz
warp_12=`  );
warp_13=`
warp_14=`  // diffusion:  
warp_15=`  ret = tex2D(sampler_main,uv2);//blur;
warp_16=`
warp_17=`  float F2 = 0.035;
warp_18=`  float k2 = 0.060;
warp_19=`  float s = 0.025;
warp_20=`  float scale = 9;
warp_21=`
warp_22=`  // reaction:
warp_23=`  float3 z = ret;
warp_24=`  float uvv = ret.x*ret.y*ret.y;
warp_25=`  z.x += (-uvv + F2*(1-ret.x) + 0.0007)*scale;
warp_26=`  z.y += (uvv - (F2+k2)*ret.y)*scale;
warp_27=`  //z.x += s*(16-ret.x*ret.y);
warp_28=`  //z.y += s*(ret.x*ret.y - ret.y - ret.z);
warp_29=`  z.z -= 0.02;
warp_30=`
warp_31=`  // apply laplacian:
warp_32=`  z.x += (blur - GetPixel(uv2))*0.2*scale;
warp_33=`
warp_34=`  ret = z;  
warp_35=`  //ret *= 0.98 + 0.02*saturate( (0.75 - rad )*10 );
warp_36=`  //ret *= 0.99;
warp_37=`
warp_38=`  // add noise:
warp_39=`  ret.x += 0.09*(tex2d(sampler_noise_lq, uv*texsize.xy*texsize_noise_lq.zw + rand_frame.xy).xyz*2-1);
warp_40=`
warp_41=`  // darken (decay) over time
warp_42=`  //ret = (ret - 0.002)*0.99;
warp_43=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float rad_lq = rad * length(texsize.xy)*0.5;
comp_4=`    float ang_lq = ang;
comp_5=`    float2 uv_temp1 = (uv - 0.5) * texsize.xy;
comp_6=`    float rad_hq = length(uv_temp1);
comp_7=`    float ang_hq = atan2(-uv_temp1.y, uv_temp1.x);
comp_8=`
comp_9=`    float2 uv2 = (uv - 0.5);
comp_10=`    float rad2 = rad_lq*0.8;
comp_11=`    float ang2 = ang_lq * M_INV_PI_2 + rad_lq*0.000 + time*0.00;
comp_12=`
comp_13=`
comp_14=`        // FIN TYPE
comp_15=`        float fins = 6;
comp_16=`        ang2 = frac(ang2*fins)/fins;
comp_17=`              // ENABLE THIS TO MAKE THE FINS ALTERNATE: (seamless!)
comp_18=`              ang2 = abs(ang2 - 0.5/fins);
comp_19=`
comp_20=`
comp_21=`    ang2 *= M_PI_2;
comp_22=`    uv = 0.5 + rad2*float2(cos(ang2),sin(ang2))*texsize.zw;
comp_23=`
comp_24=`    ret = 1.4*pow(saturate(GetBlur1(uv))*((tex2D(sampler_pc_main,uv)-GetBlur3(uv))),0.5); //invert
comp_25=`}