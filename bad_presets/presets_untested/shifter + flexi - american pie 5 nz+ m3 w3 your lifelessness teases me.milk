MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.010
fWaveSmoothing=0.630
fWaveParam=-1.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.010
wave_y=0.500
ob_size=0.100
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.100
ib_r=1.000
ib_g=1.000
ib_b=1.000
ib_a=0.000
nMotionVectorsX=12.800
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=256
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.02841
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=advance=advance+ (abs(bass+treb+mid)*.01);
wave_0_per_frame2=advance=if( above(advance,2) , 0, advance);
wave_0_per_frame3=t1=advance;
wave_0_per_frame4=ab=ab+(abs(bass+treb+mid)*.001);
wave_0_per_frame5=ab=if(above(ab,628),0,ab);
wave_0_per_frame6=t2=ab;
wave_0_per_frame7=
wave_0_per_point1=s=sample*6.28;
wave_0_per_point2=
wave_0_per_point3=//plot random x position via function of sample pos;
wave_0_per_point4=xp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);
wave_0_per_point5=xp=xp*.17;
wave_0_per_point6=//plot random y position via function of sample pos;
wave_0_per_point7=yp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);
wave_0_per_point8=yp=yp*.17;
wave_0_per_point9=//plot random z position via function of sample pos;
wave_0_per_point10=zp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);
wave_0_per_point11=zp=zp*0.25;
wave_0_per_point12=
wave_0_per_point13=//pull stars toward screen
wave_0_per_point14=zp=zp + 1 - t1;
wave_0_per_point15=
wave_0_per_point16=//correct when below 0
wave_0_per_point17=zp=if( below(zp,0) , zp+2 , zp );
wave_0_per_point18=zp=zp*0.7;
wave_0_per_point19=
wave_0_per_point20=x2=sin(time*.2)*.125;
wave_0_per_point21=y2=cos(time*.2)*.125;
wave_0_per_point22=x=(xp/zp + 0.5)+x2;
wave_0_per_point23=y=(yp/zp + 0.5)+y2;
wave_0_per_point24=
wave_0_per_point25=
wave_0_per_point26=h=sin(t2)*.5+.5;
wave_0_per_point27=
wave_0_per_point28=//darken far stars
wave_0_per_point29=//a=(1 - zp*0.5);
wave_0_per_point30=l=(1-zp*.5);
wave_0_per_point31=s=(1-zp*.5);
wave_0_per_point32=
wave_0_per_point33=
wave_0_per_point34=
wave_0_per_point35=//////////////////////////////////////////////////////////////////////////////
wave_0_per_point36=//
wave_0_per_point37=//                            HSL to RGB by PieturP
wave_0_per_point38=//
wave_0_per_point39=// hue         h ( 0 - 1 )                            rr ( 0 - 1 )
wave_0_per_point40=// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )
wave_0_per_point41=// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )
wave_0_per_point42=//
wave_0_per_point43=cc=(6*h);
wave_0_per_point44=cc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));
wave_0_per_point45=zf=(6*h)-cc;
wave_0_per_point46=zm=l;
wave_0_per_point47=zp=l*(1-s);
wave_0_per_point48=zq=l*(1-s*zf);
wave_0_per_point49=zt=l*(1-s*(1-zf));
wave_0_per_point50=rr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));
wave_0_per_point51=gg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));
wave_0_per_point52=bb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));
wave_0_per_point53=rr=if(equal(s,0),l,rr);
wave_0_per_point54=gg=if(equal(s,0),l,gg);
wave_0_per_point55=bb=if(equal(s,0),l,bb);
wave_0_per_point56=
wave_0_per_point57=//////////////////////////////////////////////////////////////////////////////
wave_0_per_point58=
wave_0_per_point59=r=rr;
wave_0_per_point60=g=gg;
wave_0_per_point61=b=bb;
wave_0_per_point62=
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=256
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.02841
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=advance=advance+ (abs(bass+treb+mid)*.01);
wave_1_per_frame2=advance=if( above(advance,2) , 0, advance);
wave_1_per_frame3=t1=advance;
wave_1_per_frame4=ab=ab+(abs(bass+treb+mid)*.001);
wave_1_per_frame5=ab=if(above(ab,628),0,ab);
wave_1_per_frame6=t2=ab;
wave_1_per_frame7=
wave_1_per_point1=s=sample*6.28;
wave_1_per_point2=
wave_1_per_point3=//plot random x position via function of sample pos;
wave_1_per_point4=xp=cos(s)+sin(s*0.34)+cos(s*24.3)+cos(s*13.8);
wave_1_per_point5=xp=xp*.17;
wave_1_per_point6=//plot random y position via function of sample pos;
wave_1_per_point7=yp=sin(s)+cos(s*0.24)+sin(s*17.4)+cos(s*37.7);
wave_1_per_point8=yp=yp*.17;
wave_1_per_point9=//plot random z position via function of sample pos;
wave_1_per_point10=zp=sin(s)+sin(s*5.24)+cos(s*47.4)+cos(s*27.7);
wave_1_per_point11=zp=zp*0.25;
wave_1_per_point12=
wave_1_per_point13=//pull stars toward screen
wave_1_per_point14=zp=zp + 1 - t1;
wave_1_per_point15=
wave_1_per_point16=//correct when below 0
wave_1_per_point17=zp=if( below(zp,0) , zp+2 , zp );
wave_1_per_point18=zp=zp*0.7;
wave_1_per_point19=
wave_1_per_point20=x2=sin(time*.2)*.125;
wave_1_per_point21=y2=cos(time*.2)*.125;
wave_1_per_point22=x=(xp/zp + 0.5)+x2;
wave_1_per_point23=y=(yp/zp + 0.5)+y2;
wave_1_per_point24=
wave_1_per_point25=
wave_1_per_point26=h=sin(t2+.1)*.5+.5;
wave_1_per_point27=
wave_1_per_point28=//darken far stars
wave_1_per_point29=//a=(1 - zp*0.5);
wave_1_per_point30=l=(1-zp*.5);
wave_1_per_point31=s=(1-zp*.5);
wave_1_per_point32=
wave_1_per_point33=
wave_1_per_point34=
wave_1_per_point35=//////////////////////////////////////////////////////////////////////////////
wave_1_per_point36=//
wave_1_per_point37=//                            HSL to RGB by PieturP
wave_1_per_point38=//
wave_1_per_point39=// hue         h ( 0 - 1 )                            rr ( 0 - 1 )
wave_1_per_point40=// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )
wave_1_per_point41=// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )
wave_1_per_point42=//
wave_1_per_point43=cc=(6*h);
wave_1_per_point44=cc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));
wave_1_per_point45=zf=(6*h)-cc;
wave_1_per_point46=zm=l;
wave_1_per_point47=zp=l*(1-s);
wave_1_per_point48=zq=l*(1-s*zf);
wave_1_per_point49=zt=l*(1-s*(1-zf));
wave_1_per_point50=rr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));
wave_1_per_point51=gg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));
wave_1_per_point52=bb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));
wave_1_per_point53=rr=if(equal(s,0),l,rr);
wave_1_per_point54=gg=if(equal(s,0),l,gg);
wave_1_per_point55=bb=if(equal(s,0),l,bb);
wave_1_per_point56=
wave_1_per_point57=//////////////////////////////////////////////////////////////////////////////
wave_1_per_point58=
wave_1_per_point59=r=rr;
wave_1_per_point60=g=gg;
wave_1_per_point61=b=bb;
wave_1_per_point62=
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=256
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.02841
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=advance=advance+ (abs(bass+treb+mid)*.01);
wave_2_per_frame2=advance=if( above(advance,2) , 0, advance);
wave_2_per_frame3=t1=advance;
wave_2_per_frame4=ab=ab+(abs(bass+treb+mid)*.001);
wave_2_per_frame5=ab=if(above(ab,628),0,ab);
wave_2_per_frame6=t2=ab;
wave_2_per_frame7=
wave_2_per_point1=s=sample*6.28;
wave_2_per_point2=
wave_2_per_point3=//plot random x position via function of sample pos;
wave_2_per_point4=xp=sin(s)+cos(s*0.34)+sin(s*24.3)+cos(s*13.8);
wave_2_per_point5=xp=xp*.17;
wave_2_per_point6=//plot random y position via function of sample pos;
wave_2_per_point7=yp=sin(s)+sin(s*0.24)+cos(s*17.4)+cos(s*37.7);
wave_2_per_point8=yp=yp*.17;
wave_2_per_point9=//plot random z position via function of sample pos;
wave_2_per_point10=zp=cos(s)+sin(s*5.24)+cos(s*47.4)+sin(s*27.7);
wave_2_per_point11=zp=zp*0.25;
wave_2_per_point12=
wave_2_per_point13=//pull stars toward screen
wave_2_per_point14=zp=zp + 1 - t1;
wave_2_per_point15=
wave_2_per_point16=//correct when below 0
wave_2_per_point17=zp=if( below(zp,0) , zp+2 , zp );
wave_2_per_point18=zp=zp*0.7;
wave_2_per_point19=
wave_2_per_point20=x2=sin(time*.2)*.125;
wave_2_per_point21=y2=cos(time*.2)*.125;
wave_2_per_point22=x=(xp/zp + 0.5)+x2;
wave_2_per_point23=y=(yp/zp + 0.5)+y2;
wave_2_per_point24=
wave_2_per_point25=
wave_2_per_point26=h=sin(t2+.2)*.5+.5;
wave_2_per_point27=
wave_2_per_point28=//darken far stars
wave_2_per_point29=//a=(1 - zp*0.5);
wave_2_per_point30=l=(1-zp*.5);
wave_2_per_point31=s=(1-zp*.5);
wave_2_per_point32=
wave_2_per_point33=
wave_2_per_point34=
wave_2_per_point35=//////////////////////////////////////////////////////////////////////////////
wave_2_per_point36=//
wave_2_per_point37=//                            HSL to RGB by PieturP
wave_2_per_point38=//
wave_2_per_point39=// hue         h ( 0 - 1 )                            rr ( 0 - 1 )
wave_2_per_point40=// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )
wave_2_per_point41=// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )
wave_2_per_point42=//
wave_2_per_point43=cc=(6*h);
wave_2_per_point44=cc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));
wave_2_per_point45=zf=(6*h)-cc;
wave_2_per_point46=zm=l;
wave_2_per_point47=zp=l*(1-s);
wave_2_per_point48=zq=l*(1-s*zf);
wave_2_per_point49=zt=l*(1-s*(1-zf));
wave_2_per_point50=rr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));
wave_2_per_point51=gg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));
wave_2_per_point52=bb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));
wave_2_per_point53=rr=if(equal(s,0),l,rr);
wave_2_per_point54=gg=if(equal(s,0),l,gg);
wave_2_per_point55=bb=if(equal(s,0),l,bb);
wave_2_per_point56=
wave_2_per_point57=//////////////////////////////////////////////////////////////////////////////
wave_2_per_point58=
wave_2_per_point59=r=rr;
wave_2_per_point60=g=gg;
wave_2_per_point61=b=bb;
wave_2_per_point62=
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=256
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.02841
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=advance=advance+ (abs(bass+treb+mid)*.01);
wave_3_per_frame2=advance=if( above(advance,2) , 0, advance);
wave_3_per_frame3=t1=advance;
wave_3_per_frame4=ab=ab+(abs(bass+treb+mid)*.001);
wave_3_per_frame5=ab=if(above(ab,628),0,ab);
wave_3_per_frame6=t2=ab;
wave_3_per_frame7=
wave_3_per_point1=s=sample*6.28;
wave_3_per_point2=
wave_3_per_point3=//plot random x position via function of sample pos;
wave_3_per_point4=xp=sin(s)+sin(s*0.34)+cos(s*44.3)+sin(s*13.8);
wave_3_per_point5=xp=xp*.17;
wave_3_per_point6=//plot random y position via function of sample pos;
wave_3_per_point7=yp=cos(s)+sin(s*0.24)+sin(s*17.4)+cos(s*37.7);
wave_3_per_point8=yp=yp*.17;
wave_3_per_point9=//plot random z position via function of sample pos;
wave_3_per_point10=zp=sin(s)+sin(s*5.24)+cos(s*47.4)+cos(s*27.1);
wave_3_per_point11=zp=zp*0.25;
wave_3_per_point12=
wave_3_per_point13=//pull stars toward screen
wave_3_per_point14=zp=zp + 1 - t1;
wave_3_per_point15=
wave_3_per_point16=//correct when below 0
wave_3_per_point17=zp=if( below(zp,0) , zp+2 , zp );
wave_3_per_point18=zp=zp*0.7;
wave_3_per_point19=
wave_3_per_point20=x2=sin(time*.2)*.125;
wave_3_per_point21=y2=cos(time*.2)*.125;
wave_3_per_point22=x=(xp/zp + 0.5)+x2;
wave_3_per_point23=y=(yp/zp + 0.5)+y2;
wave_3_per_point24=
wave_3_per_point25=
wave_3_per_point26=h=sin(t2+.3)*.5+.5;
wave_3_per_point27=
wave_3_per_point28=//darken far stars
wave_3_per_point29=//a=(1 - zp*0.5);
wave_3_per_point30=l=(1-zp*.5);
wave_3_per_point31=s=(1-zp*.5);
wave_3_per_point32=
wave_3_per_point33=
wave_3_per_point34=
wave_3_per_point35=//////////////////////////////////////////////////////////////////////////////
wave_3_per_point36=//
wave_3_per_point37=//                            HSL to RGB by PieturP
wave_3_per_point38=//
wave_3_per_point39=// hue         h ( 0 - 1 )                            rr ( 0 - 1 )
wave_3_per_point40=// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )
wave_3_per_point41=// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )
wave_3_per_point42=//
wave_3_per_point43=cc=(6*h);
wave_3_per_point44=cc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));
wave_3_per_point45=zf=(6*h)-cc;
wave_3_per_point46=zm=l;
wave_3_per_point47=zp=l*(1-s);
wave_3_per_point48=zq=l*(1-s*zf);
wave_3_per_point49=zt=l*(1-s*(1-zf));
wave_3_per_point50=rr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));
wave_3_per_point51=gg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));
wave_3_per_point52=bb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));
wave_3_per_point53=rr=if(equal(s,0),l,rr);
wave_3_per_point54=gg=if(equal(s,0),l,gg);
wave_3_per_point55=bb=if(equal(s,0),l,bb);
wave_3_per_point56=
wave_3_per_point57=//////////////////////////////////////////////////////////////////////////////
wave_3_per_point58=
wave_3_per_point59=r=rr;
wave_3_per_point60=g=gg;
wave_3_per_point61=b=bb;
wave_3_per_point62=
shapecode_0_enabled=1
shapecode_0_sides=12
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=92
shapecode_0_x=0.800
shapecode_0_y=0.500
shapecode_0_rad=0.02705
shapecode_0_ang=1.57080
shapecode_0_tex_ang=1.25664
shapecode_0_tex_zoom=3.07268
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=t1 = time - int (time);
shape_0_per_frame2=sample = instance/num_inst;
shape_0_per_frame3=t_abs = sample*3;
shape_0_per_frame4=t_rel = sample-time/5;
shape_0_per_frame5=
shape_0_per_frame6=ampl = 2*t_abs/2 ;
shape_0_per_frame7=
shape_0_per_frame8=k1=sin(time/13);
shape_0_per_frame9=k2=sin(time/12);
shape_0_per_frame10=ox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;
shape_0_per_frame11=oy = ampl*cos (t_abs*(31+5*k2));
shape_0_per_frame12=oz = -1  ;
shape_0_per_frame13=
shape_0_per_frame14=
shape_0_per_frame15=r = sqr(sin(t_rel*3.4));
shape_0_per_frame16=g = sqr(sin(t_rel));
shape_0_per_frame17=b = sqr (cos(t_rel*1.8));
shape_0_per_frame18=
shape_0_per_frame19=//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;
shape_0_per_frame20=
shape_0_per_frame21=xang = time/9.5;
shape_0_per_frame22=yang = 0*time/7;
shape_0_per_frame23=zang = -time/22;
shape_0_per_frame24=fov = 0.5;
shape_0_per_frame25=
shape_0_per_frame26=
shape_0_per_frame27=// Rotation um x,y,z
shape_0_per_frame28=
shape_0_per_frame29=mx = ox*cos(zang) - oy*sin(zang);
shape_0_per_frame30=my = ox*sin(zang) + oy*cos(zang);
shape_0_per_frame31=
shape_0_per_frame32=ox = mx;
shape_0_per_frame33=oy = my;
shape_0_per_frame34=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame35=mz = - ox*sin(yang) + oz*cos(yang);
shape_0_per_frame36=ox = mx;
shape_0_per_frame37=oz = mz;
shape_0_per_frame38=my = oy*cos(xang) - oz*sin(xang);
shape_0_per_frame39=mz = oy*sin(xang) + oz*cos(xang);
shape_0_per_frame40=oy = my;
shape_0_per_frame41=oz = mz;
shape_0_per_frame42=
shape_0_per_frame43=oz = oz - 6;
shape_0_per_frame44=x = ox*fov/oz +0.5;
shape_0_per_frame45=//x = (x-.5)*0.75 + 0.5;
shape_0_per_frame46=y = oy*fov/oz + 0.5;
shape_0_per_frame47=
shape_0_per_frame48=a=1/mz*.5;
shape_0_per_frame49=//a2=1/mz*.5;
shape_0_per_frame50=//border_a=1/mz*.5;
shape_0_per_frame51=rad=1/mz*.005;
shapecode_1_enabled=1
shapecode_1_sides=3
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=311
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.01000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.62832
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=0.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_1_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_1_per_frame3=
shape_1_per_frame4=mx=mx+(.0002*cos(ma));
shape_1_per_frame5=my=my+(.0002*tan(ma));
shape_1_per_frame6=
shape_1_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_1_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_1_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_1_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_1_per_frame11=
shape_1_per_frame12=x=1-mx;
shape_1_per_frame13=y=1-my;
shape_1_per_frame14=
shape_1_per_frame15=ang=(sin(time*.35)+1)*3;
shape_1_per_frame16=//a=(above(bass+mid+treb,.8));
shape_1_per_frame17=pi23=4*asin(1)*.333333333;
shape_1_per_frame18=t1=bass+mid+treb;
shapecode_2_enabled=1
shapecode_2_sides=23
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1024
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10262
shapecode_2_ang=0.43982
shapecode_2_tex_ang=0.62832
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=0.500
shapecode_2_r2=1.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.500
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ma=ma+(above(bass,1)*3.1415*.05*bass);
shape_2_per_frame2=ma=ma-(above(mid,1)*3.1415*.05*mid);
shape_2_per_frame3=
shape_2_per_frame4=mx=mx+(.0001*cos(ma));
shape_2_per_frame5=my=my+(.0001*sin(ma));
shape_2_per_frame6=
shape_2_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_2_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_2_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_2_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_2_per_frame11=
shape_2_per_frame12=x=mx;
shape_2_per_frame13=y=my;
shape_2_per_frame14=rad=(bass+treb)/75;
shape_2_per_frame15=a=(above(bass+mid+treb,.1));
shape_2_per_frame16=r=int(rand(100))/100;
shape_2_per_frame17=g=int(rand(100))/100;
shape_2_per_frame18=b=int(rand(100))/100;
shape_2_per_frame19=r2=int(rand(100))/100;
shape_2_per_frame20=g2=int(rand(100))/100;
shape_2_per_frame21=b2=int(rand(100))/100;
shape_2_per_frame22=r_border=int(rand(100))/100;
shape_2_per_frame23=g_border=int(rand(100))/100;
shape_2_per_frame24=b_border=int(rand(100))/100;
shapecode_3_enabled=1
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1024
shapecode_3_x=0.500
shapecode_3_y=0.610
shapecode_3_rad=0.03646
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=6.17732
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=i=2*(instance+2048);    
shape_3_per_frame2=
shape_3_per_frame3=x1=gmegabuf(i);   y1=gmegabuf(i+1);
shape_3_per_frame4=
shape_3_per_frame5=zoom=q2;
shape_3_per_frame6=
shape_3_per_frame7=rad=.1*rad;
shape_3_per_frame8=y= .5+zoom*x1;      
shape_3_per_frame9=x= .5+zoom*y1/q6;
shape_3_per_frame10=
shape_3_per_frame11=x= (int(x)-x+x%2)*pow(-1,1+int(x));
shape_3_per_frame12=y= (int(y)-y+y%2)*pow(-1,1+int(y));
per_frame_init_1=wr1 = 1 + int(rand(0.404));
per_frame_init_2=wg1 = 1 + int(rand(0.446));
per_frame_init_3=wb1 = 1 + int(rand(0.465));
per_frame_init_4=wr2 = 1 + int(rand(0.454));
per_frame_init_5=wg2 = 1 + int(rand(0.489));
per_frame_init_6=wb2 = 1 + int(rand(0.432));
per_frame_init_7=ws = int(rand(1));
per_frame_init_8=decay = 0;
per_frame_init_9=dec = 0;
per_frame_init_10=vl = 0;
per_frame_init_11=//prma init
per_frame_init_12=i=0;  
per_frame_init_13=loop(10000, gmegabuf(i)=0;
per_frame_init_14=i=i+1;);
per_frame_init_15=t=0;
per_frame_init_16=t0=time;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq30=if(above(chng,cthr),rand(1)*.3,mq30);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q30=mq30;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q1=.4+sin(atime*.006        )*.4;
per_frame_21=q2=.4+cos(atime*.00613828348)*.4;
per_frame_22=q3=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q3;
per_frame_24=vol = .3333*(bass_att + mid_att + treb_att);
per_frame_25=wave_a = 0;
per_frame_26=dec = dec + 0.1*(1-dec);
per_frame_27=decay = dec;
per_frame_28=awarp = 5*above(bass_att,1.4);
per_frame_29=dy = .07;
per_frame_30=dx = .01;
per_frame_31=//ib_a = above(bass_att,1.3);
per_frame_32=//prma
per_frame_33=wave_a=0;        warp=0;        q6=aspecty; 
per_frame_34=t=t+.001/fps;     c=bnot(frame%3);
per_frame_35=s1=15+5*sin(t);         s2=100*sin(t);
per_frame_36=i=0;    x=0;     y=0;    p1=0;    p2=0;
per_frame_37=loop(1024*c*4,
per_frame_38=p1 = s1*sin(i*s2);   
per_frame_39=p2 = -s1*cos(i*s2)+p1-p2;
per_frame_40=x=x+sin(p2);         y=y+cos(p2);
per_frame_41=gmegabuf(2*i)=x;      gmegabuf(2*i+1)=y;
per_frame_42=i=i+1;);
per_frame_43=///////////
per_frame_44=zoom=above(time-t0,.1);
per_frame_45=speed = 25; //// tweak
per_frame_46=t2=t2+1/fps;
per_frame_47=decay=1-t1;
per_frame_48=t1=t1+2*equal((.1*t2*speed)%20,0)/fps;
per_frame_49=t1=t1*above(0.2,(.1*t2*speed)%20);
per_frame_50=monitor=s2;
per_frame_51=q2=.004;
per_frame_52=
per_frame_53=q30=(bass+treb+mid)*2;
per_frame_54=
per_frame_55=zoom=1-(1-pow(2,(bass+treb+mid)*.0031));
per_frame_56=
per_pixel_1=zoom = zoom + 0.055*(sin(50+25*cos(0.2*time)*rad) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);
per_pixel_2=rot = rot + 0.2*abs(0.746-rad)*sin(2.2*(0.5-rad)+5.7*sin(0.1*time));
per_pixel_3=sx = sx - abs(0.1*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0));
per_pixel_4=sx= sx - abs(0.1*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0));
per_pixel_5=zoom = zoom - 0.05*(0.5*abs(3)-rad)*below(rad,1.5);
per_pixel_6=dxe=dx+.01*(sin(vx*50-5*3.14*sin(q1)))*sin(above(q1,q2)-ang*sin(above(q4,q3)))*sin(q5);
per_pixel_7=dye=dy-.01*(sin(vy*50-5*3.14*sin(q2)))*sin(above(Q2,q1)-ang*sin(abovE(q3,q4)))*sin(Q4);
per_pixel_8=vx=sin((x+q7)*3.14-q2);
per_pixel_9=vy=sin((y+q8)*3.14-q5);
per_pixel_10=dx=dxe/2/2/2;
per_pixel_11=dy=dye/2/2/2;
per_pixel_12=cx = (0&(x+q1))-q1;
per_pixel_13=cy = (0&(y+q2))-q2;
per_pixel_14=
per_pixel_15=zoom=zoom+.1*sin(above(vx*50,vy*50-5*3.14*sin(above(Q1,q2))))*sin(above(q2,q3))-ang/2/2/2/2/2*
per_pixel_16=sin(above(q5,q3)*sin(q1))/2/2/2/2;
per_pixel_17=rot=(zoom-1)*sin(rad*3.14*q1);
warp_1=`shader_body
warp_2=`{
warp_3=`
warp_4=`
warp_5=`float error     = 0.3;        // maximum random pixel offset
warp_6=`float diffusion = 0.004;      // dither strength
warp_7=`float fadeout   = -0.001;    // may be minor 1/256 due to the error diffusion dither;
warp_8=`
warp_9=`float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;
warp_10=`float magic = lum(GetPixel(lerp(uv_orig,uv, 4))) - lum(GetBlur1(lerp(uv_orig,uv,-8)));
warp_11=`uv = lerp(uv_orig,uv, magic*8 ) + (tex2D(sampler_noise_lq, dither_uv)-0.5)*texsize.zw*error;
warp_12=`ret = GetPixel(uv)+(tex2D(sampler_noise_lq, dither_uv)-0.5)*diffusion + fadeout;
warp_13=`ret.x=1-ret.x;
warp_14=`
warp_15=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_16=`                      ((uv.xyy*q27
warp_17=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_18=`                      ).xyz*
warp_19=`                      float3(1,1,0)*0.05 + 
warp_20=`                      time*float3(0,0,1)*q29
warp_21=`                     );
warp_22=`if(ret.x> q21*q3         && ret.x<= q24*q1        )ret.y += (noise9).x*.5; 
warp_23=`if(ret.y> q22*q1         && ret.y<= q25*q2        )ret.z += (noise9).y*.5; 
warp_24=`ret.y=1-ret.y;
warp_25=`
warp_26=`if(ret.z> q23*q2         && ret.z<= q26*q3        )ret.x += (noise9).z*.5; 
warp_27=`ret.z=1-ret.z;
warp_28=`
warp_29=`}
comp_1=`sampler sampler_fw_sky;
comp_2=`shader_body
comp_3=`{
comp_4=`float2 uvm = frac(uv + time*.0);
comp_5=`
comp_6=`ret = tex2D(sampler_main,uvm);
comp_7=`
comp_8=`float diff  = 1-length(ret.xy  -GetBlur1(uvm).xy  )*3.5;
comp_9=`float diff2 = 1-length(ret.zy  -GetBlur1(uvm).zx  )*3.5;
comp_10=`
comp_11=`diff  *=1-length(ret.xy  -GetBlur2(uvm).xy  )*1;
comp_12=`diff2 *=1-length(ret.zx  -GetBlur2(uvm).zy  )*1;
comp_13=`
comp_14=`ret.xy *= diff ;
comp_15=`ret.zy *= diff2;
comp_16=`ret.xz /= diff/diff2;
comp_17=`ret*=2;
comp_18=`
comp_19=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_20=`                      ((uvm.xyy*q28
comp_21=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_22=`                      ).xyz*
comp_23=`                      float3(1,1,0)*0.05 + 
comp_24=`                      time*float3(0,0,1)*q30 
comp_25=`                     );
comp_26=`if(ret.x> q26*q3         && ret.x<= q23*q1        )ret.z -= (noise9).x*.5; 
comp_27=`if(ret.y> q25*q1         && ret.y<= q22*q2        )ret.x -= (noise9).y*.5; 
comp_28=`if(ret.z> q24*q2         && ret.z<= q21*q3        )ret.y -= (noise9).z*.5; 
comp_29=`
comp_30=`}
