MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=0.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=3
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.077
fWaveScale=0.027
fWaveSmoothing=0.630
fWaveParam=1.000
fModWaveAlphaStart=0.200
fModWaveAlphaEnd=0.500
fWarpAnimSpeed=0.010
fWarpScale=100.000
fZoomExponent=1.83149
fShader=0.000
zoom=0.99010
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.300
wave_b=0.000
wave_x=0.500
wave_y=0.981
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=1.000
ib_g=1.000
ib_b=1.000
ib_a=1.000
nMotionVectorsX=2.560
nMotionVectorsY=1.008
mv_dx=0.308
mv_dy=-0.950
mv_l=5.000
mv_r=0.000
mv_g=0.000
mv_b=0.000
mv_a=1.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=nb=45555;
wave_0_per_point2=x = .5 + (bass*.32)*sin(sample*nb);
wave_0_per_point3=y = .5 + (bass*.2)*cos(sample*nb);
wave_0_per_point4=r = 1 + .5*sin(sample*2+(time*10));
wave_0_per_point5=g = 1 + .5*sin(sample*2+(time*50));
wave_0_per_point6=b = 1 + .5*sin(sample*2+(time*20));
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=1.000
shapecode_0_rad=1.97884
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.200
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shape_0_per_frame1=y=1.5;
shapecode_1_enabled=1
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=1.000
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shape_1_per_frame1=x=0.5;
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=1.800
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=x1 = 0.9;
per_frame_init_2=y1 = 0.5;
per_frame_init_3=
per_frame_init_4=x2 = 0.5; y2 = 0.5;
per_frame_init_5=x3 = 0.5; y3 = 0.5;
per_frame_init_6=x4 = 0.5; y4 = 0.5;
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=q4=sin(atime*.03);
per_frame_25=q5=cos(atime*.030383824);
per_frame_26=q6=tan(atime*.029384834);
per_frame_27=
per_frame_28=decay = 1;//0.97;
per_frame_29=xx1 = xx1*0.9 + (bass)*0.01;
per_frame_30=xx2 = xx2*0.9 + (treb)*0.01;
per_frame_31=yy1 = yy1*0.94 + (treb+bass)*0.0075;
per_frame_32=
per_frame_33=x1 = 0.4 + xx1-xx2;
per_frame_34=y1 = 0.5 + yy1;
per_frame_35=
per_frame_36=//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;
per_frame_37=
per_frame_38=spring = 10;
per_frame_39=grav = 0.7;
per_frame_40=resist = 1;
per_frame_41=bounce = 0.5;
per_frame_42=dt = 0.001;
per_frame_43=
per_frame_44=spx2 = (x1+x3-2*x2)*spring;
per_frame_45=spy2 = (y1+y3-2*y2)*spring;
per_frame_46=spx3 = (x2+x4-2*x3)*spring;
per_frame_47=spy3 = (y2+y4-2*y3)*spring;
per_frame_48=spx4 = (x3-x4)*spring;
per_frame_49=spy4 = (y3-y4)*spring;
per_frame_50=
per_frame_51=vx2 = vx2*(1-resist*dt) + dt*(spx2);
per_frame_52=vy2 = vy2*(1-resist*dt) + dt*(spy2-grav);
per_frame_53=vx3 = vx3*(1-resist*dt) + dt*(spx3);
per_frame_54=vy3 = vy3*(1-resist*dt) + dt*(spy3-grav);
per_frame_55=vx4 = vx4*(1-resist*dt) + dt*(spx4);
per_frame_56=vy4 = vy4*(1-resist*dt) + dt*(spy4-grav);
per_frame_57=
per_frame_58=x2 = x2 + vx2;
per_frame_59=y2 = y2 + vy2;
per_frame_60=x3 = x3 + vx3;
per_frame_61=y3 = y3 + vy3;
per_frame_62=x4 = x4 + vx4;
per_frame_63=y4 = y4 + vy4;
per_frame_64=
per_frame_65=vx2 = if(above(x2,0),vx2,abs(vx2)*bounce);
per_frame_66=vx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);
per_frame_67=vx3 = if(above(x3,0),vx3,abs(vx3)*bounce);
per_frame_68=vx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);
per_frame_69=vx4 = if(above(x4,0),vx4,abs(vx4)*bounce);
per_frame_70=vx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);
per_frame_71=
per_frame_72=vy2 = if(above(y2,0),vy2,abs(vy2)*bounce);
per_frame_73=vy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);
per_frame_74=vy3 = if(above(y3,0),vy3,abs(vy3)*bounce);
per_frame_75=vy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);
per_frame_76=vy4 = if(above(y4,0),vy4,abs(vy4)*bounce);
per_frame_77=vy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);
per_frame_78=
per_frame_79=
per_frame_80=q1 = x1;
per_frame_81=q2 = x2;
per_frame_82=q3 = x3;
per_frame_83=q4 = x4;
per_frame_84=
per_frame_85=q5 = y1;
per_frame_86=q6 = y2;
per_frame_87=q7 = y3;
per_frame_88=q8 = y4;
per_frame_89=
per_frame_90=monitor = ry4;
per_frame_91=
per_frame_92=zoom = 0.99;
per_frame_93=
per_frame_94=
per_pixel_1=d1 = sqrt( sqr(x-q1) + sqr(y-q5));
per_pixel_2=d2 = sqrt( sqr(x-q2) + sqr(y-q6));
per_pixel_3=d3 = sqrt( sqr(x-q3) + sqr(y-q7));
per_pixel_4=d4 = sqrt( sqr(x-q4) + sqr(y-q8));
per_pixel_5=
per_pixel_6=x1 = q1-q2;
per_pixel_7=x2 = q2-q3;
per_pixel_8=x3 = q3-q4;
per_pixel_9=
per_pixel_10=y1 = q5-q6;
per_pixel_11=y2 = q6-q7;
per_pixel_12=y3 = q7-q8;
per_pixel_13=
per_pixel_14=d12 = 1/sqrt( sqr(x1-x2) + sqr(y1-y2));
per_pixel_15=d23 = 1/sqrt( sqr(x2-x3) + sqr(y2-y3));
per_pixel_16=d34 = 1/sqrt( sqr(x3-x4) + sqr(y3-y4));
per_pixel_17=
per_pixel_18=x1 = x1*d12; y1 = y1*d12;
per_pixel_19=x2 = x2*d23; y2 = y2*d23;
per_pixel_20=x3 = x3*d34; y3 = y3*d34;
per_pixel_21=
per_pixel_22=v = -.02;
per_pixel_23=dx =  -v*( x3*(1-d4)*d3*d2 + x2*d4*(1-d3)*d2 + x3*d4*d3*(1-d2)) + 0.003;
per_pixel_24=dy = v*( y3*(1-d4)*d3*d2 + y2*d4*(1-d3)*d2 + y3*d4*d3*(1-d2)) - 0.001;
per_pixel_25=
warp_1=`shader_body
warp_2=`{
warp_3=`float2 uv1 = lerp(uv_orig,uv,1); //equals uv
warp_4=`float2 uv2 = lerp(uv_orig,uv,0.1); // 20% of uv
warp_5=`float2 uv3 = lerp(uv_orig,uv,0.2); //20% of uv but in the opposite direction
warp_6=`
warp_7=`ret.x = GetPixel(uv1).x;
warp_8=`ret.y = GetPixel(uv2).y;
warp_9=`ret.z = GetPixel(uv3).z;
warp_10=`    
warp_11=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_12=`                      ((float3(uv1.y,uv3.x,uv2.y)*q27
warp_13=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_14=`                      ).xyz*
warp_15=`                      float3(1,1,0)*0.05 + 
warp_16=`                      time*float3(0,0,1)*q29
warp_17=`                     );
warp_18=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_19=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_20=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_21=`    // darken (decay) over time
warp_22=`    ret *= 0.98; //or try: ret -= 0.004;
warp_23=`}
comp_1=`#define sat saturate
comp_2=`sampler sampler_pw_noise_lq;
comp_3=`float mask1, gmask, bsize, rad1, slot, grid, anz, bcentre;
comp_4=`float glow, tmp, lamp, dist, bdist, b2dist, dist_c, smask, z;
comp_5=`float2 rs, rs0, uv0, uv1, uv2, uv3,uv4, rsk, bubble, dz;
comp_6=`float3 noise, bubbles;
comp_7=`
comp_8=`static const float2 pix = texsize.zw, center = float2 (q1,q2);
comp_9=`static const float3 CamPos = float3(q4,q5,q6);
comp_10=`static const float myzoom = q7;
comp_11=`static const float3x3 RotMat = float3x3(q20,q21,q22,q23,q24,q25,q26,q27,q28);
comp_12=`static const float3 col_struc =  float3(1,.4,.1)/4;
comp_13=`
comp_14=`float3 GetBlurX (float2 uvi, float x) {return lerp (GetPixel(uvi), GetBlur1(uvi), x);}
comp_15=`float GetDist(float2 uvi)   {return 1-GetPixel(uvi).b;}
comp_16=`float GetDistB(float2 uvi)  {return 1-GetBlur1(uvi).b;}
comp_17=`float GetDistB2(float2 uvi) {return 1-GetBlur2(uvi).b;}
comp_18=`
comp_19=`float MinDistB (float2 uvi) {float tmp; float4 nb; //##nicht ideal
comp_20=`  tmp = GetDist(uvi);
comp_21=`  return min(tmp,GetDistB(uvi)) ;}
comp_22=`
comp_23=`float shadow (float2 uvi) {int n; float dark; float2 uvc, dx;
comp_24=`  dark = 0; n = 1;
comp_25=`  while ( (n <= 2)) 
comp_26=`     {dx = .04*n * (center-.5); 
comp_27=`      uvc = (uvi+dx); 
comp_28=`      dark = dark + sat(4*(GetBlur1(uvi).b-GetBlur1(uvc).b) -dx*4); 
comp_29=`      n++;}
comp_30=`  return (dark/2);}
comp_31=`
comp_32=`shader_body {
comp_33=`uv = (uv-.5)*.9 + .5;
comp_34=`uv0 = uv;
comp_35=`
comp_36=`dist = MinDistB(uv);
comp_37=`bdist = lerp(dist,GetDistB(uv),.2);
comp_38=`float focus = sat(abs(GetDistB(uv)-dist_c)*3);
comp_39=`
comp_40=`float2 noise = tex2D (sampler_noise_mq,float2(uv.x,uv.y/4-.1*time)).xy;
comp_41=`uv += .004*bdist*noise ;
comp_42=`float2 uv5 = (uv-.5)*aspect.xy  - float2(q11,q12);
comp_43=`bubbles = 0; gmask = 0; anz = 3; bcentre = 0;
comp_44=`for (int m= 1; m<= anz; m++)
comp_45=`{
comp_46=`  z = 1-frac(1.0/anz*m+q9); 
comp_47=`  uv1 = uv5*z;
comp_48=`//  uv1 = mul(uv1, float2x2(.7,.7,-.7,.7));
comp_49=`  
comp_50=`  grid = 16.0*m/512;
comp_51=`  
comp_52=`  slot = tex2D(sampler_pw_noise_lq,uv1.x*grid)+.5;
comp_53=`  uv1.y += slot*time*.06;
comp_54=`  bsize = tex2D(sampler_pw_noise_lq,uv1*grid);
comp_55=`  rsk = frac(8*m*uv1)-.5 ;
comp_56=`  dz = normalize(rsk);
comp_57=`  rad1 = 3*length (rsk) *(2+m);
comp_58=`  uv4 =  (rad1*rad1)*dz;
comp_59=`  mask1 = saturate(9-8*rad1) * (bsize > .85) ;
comp_60=`  gmask = gmask || mask1;
comp_61=`  bubbles += float3 (uv4,.1/(rad1)) * (1-z) * mask1;
comp_62=`}
comp_63=`gmask *= sat (bdist*16-8*z);
comp_64=`uv +=  .1*bubbles*gmask;
comp_65=`
comp_66=`dist = MinDistB(uv);
comp_67=`bdist = lerp(dist,GetDistB(uv),.2);
comp_68=`dist_c = clamp(GetDistB2 (center),.1,.4); //center distance
comp_69=`
comp_70=`float struc = GetBlurX(uv,focus).r;
comp_71=`
comp_72=`ret = struc* col_struc *float3(1-bdist,1,1)+ pow(sat(struc),4) * float3 (0,1,.2);
comp_73=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_74=`                      ((uv.xyy*q28
comp_75=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_76=`                      ).xyz*
comp_77=`                      float3(1,1,0)*0.05 + 
comp_78=`                      time*float3(0,0,1)*q31
comp_79=`                     );
comp_80=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_81=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_82=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_83=`
comp_84=`
comp_85=`//distant light
comp_86=`ret += gmask*bubbles.z * (1+slow_roam_cos);
comp_87=`
comp_88=`ret = lerp(ret, float3(0,.05,.1)*4*q19, sat(pow(bdist,1.5)));
comp_89=`
comp_90=`float moon = (.5/length(sin(3*(uv5))));
comp_91=`ret += sat(MinDistB(uv)*6-5)*moon*float3(0,.1,.1);
comp_92=`
comp_93=`//Lamp
comp_94=`uv3 = uv-center; 
comp_95=`float ddd = GetPixel(uv).r - GetPixel((uv-.5)*(1.01)+.5).r;
comp_96=`lamp = saturate(1-4*length(uv3)) * (.1+struc+ddd);
comp_97=`ret += lamp*(saturate(1-bdist/2))*(1-0*shadow(uv)) * float3(1,.8,.3);
comp_98=`
comp_99=`ret = 1-exp((-1.6)*ret);
comp_100=`//ret += shadow(uv);
comp_101=`//ret = GetPixel(uv0).r;
comp_102=`}
comp_103=`
comp_104=`//-------------------------------------------
comp_105=`//Written by martin
comp_106=`
