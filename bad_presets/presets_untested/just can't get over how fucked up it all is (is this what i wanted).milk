MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.010
fWaveSmoothing=0.270
fWaveParam=-0.380
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00500
dy=0.00001
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=2.98779
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=x = .5+.25*(sample*2)/sin(sample*100+time*10);
wave_0_per_point2=y = .5+.25*(sample*2)*cos(sample*100+time*10);
wave_0_per_point3=r = .01+.5*sin(sample*250+time*1);
wave_0_per_point4=b = .01+.5*sin(sample*220-time*2);
wave_0_per_point5=g = .01+.5*sin(sample*130+time*4);
wave_0_per_point6=
wave_0_per_point7=b = if(above(b,0),b,0);
wave_0_per_point8=r = if(above(r,0),r,0);
wave_0_per_point9=g = if(above(g,0),g,0);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=x = .5+.25*(sample*2)*sin(sample*100+time*10);
wave_1_per_point2=y = .5+.25*(sample*2)/cos(sample*100+time*10);
wave_1_per_point3=r = .01+.5*sin(sample*250+time*1);
wave_1_per_point4=b = .01+.5*sin(sample*220-time*2);
wave_1_per_point5=g = .01+.5*sin(sample*130+time*4);
wave_1_per_point6=
wave_1_per_point7=b = if(above(b,0),b,0);
wave_1_per_point8=r = if(above(r,0),r,0);
wave_1_per_point9=g = if(above(g,0),g,0);
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.21859
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=r = 1;
shape_0_per_frame2=b = 1;
shape_0_per_frame3=g = 1;
shape_0_per_frame4=
shape_0_per_frame5=mang = mang + .5+bass;
shape_0_per_frame6=rad = rad + treb*.05;
shape_0_per_frame7=ang = mang;
shapecode_1_enabled=0
shapecode_1_sides=8
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=1.00394
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=0.000
shapecode_1_r2=0.000
shapecode_1_g2=0.400
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=1.000
shape_1_per_frame1=ang = ang - time*.333;
shape_1_per_frame2=border_r = .5+.4*sin(time*1.4)+bass*.1;
shape_1_per_frame3=border_g = .5+.4*sin(time*1.2)+treb*.1;
shape_1_per_frame4=border_b = .5+.4*sin(time*1)+mid*.1;
shapecode_2_enabled=0
shapecode_2_sides=3
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.21000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.840
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=0.580
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ang = ang + time*4;
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=wave_r = 0.5 + 0.5*sin(6*time);
per_frame_2=wave_g = 0.5 + 0.5*sin(4.1*time);
per_frame_3=wave_b = -1 + (1-wave_r + 1-wave_g);
per_frame_4=warp = 0;
per_frame_5=//echo_zoom = echo_zoom + 0.2*sin(bass_att);
per_pixel_1=zoom=.3;  mkdx=dx;//////////////////////////////////////////
per_pixel_2=mkdy=dy;
per_pixel_3=mksx=sx;
per_pixel_4=mksy=sy;
per_pixel_5=mkrt=rot;
per_pixel_6=mkzm=zoom;
per_pixel_7=mkcx=cx;
per_pixel_8=mkcy=cy;
per_pixel_9=mkwp=warp;
per_pixel_10=
per_pixel_11=dx=0;
per_pixel_12=dy=0;
per_pixel_13=sx=1;
per_pixel_14=sy=1;
per_pixel_15=rot=0;
per_pixel_16=zoom=1;
per_pixel_17=cx=.5;
per_pixel_18=cy=.5;
per_pixel_19=warp=0;/////////////////////////////////////////////////////
per_pixel_20=
per_pixel_21=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_22=dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_23=dy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_24=
per_pixel_25=zoom = zoom + 0.2*abs(0.3*cos(4*rad))*cos(12*ang);
per_pixel_26=sx = sx - 11*dx_r*sin(2*sin(6*rad)*2*cos(6*rad));
per_pixel_27=//sy = sy - 13*dy_r*sin(2*cos(6*rad)*2*sin(6*rad));
per_pixel_28=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.999+1.31);
per_pixel_29=//dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_30=//dy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_31=
per_pixel_32=
per_pixel_33=tg1 = abs(sin(time));
per_pixel_34=tg2 = 12*above(tg1,0.8) + 4*below(tg1,0.2) +
per_pixel_35=6*above(tg1,0.2)*below(tg1,0.4) + 8*above(tg1,0.4)*below(tg1,0.6) +
per_pixel_36=10*above(tg1,0.6)*below(tg1,0.8);
per_pixel_37=tg3 = if(equal(thresh,2),tg2,tg3);
per_pixel_38=zoom = zoom + 0.6-(1.5*abs( 25*dx_r*cos(tg3*ang) - sin(22*dy_r*rad)*0.2-rad));
per_pixel_39=thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);
per_pixel_40=
per_pixel_41=dx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;
per_pixel_42=dy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;
per_pixel_43=zoom = zoom + 0.01;
per_pixel_44=zoom = zoom + (0.05 + 0.04*sin(time))*(0.2*sin(ang*time));
per_pixel_45=rot = rot + 0.01*(0.5*cos(ang*5*bass*time));
per_pixel_46=
per_pixel_47=dx = dx + 0.1*above(rad,0.25)*dx_r;
per_pixel_48=dy = dy + 0.1*above(rad,0.25)*dy_r;
per_pixel_49=rot=0.1*pow(-ang,3)-1.18*sin(ang);
per_pixel_50=zoom=1.45*sin(-rad)+1.3+ sin(rad);
per_pixel_51=dx = dx + 0.09*sin(q8*0.785);
per_pixel_52=dy = dy + 0.09*sin(q8*0.675);
per_pixel_53=//zoom = zoom +q7;
per_pixel_54=dx=dx-0.05*sin(1.35+(x*2-1)*22);
per_pixel_55=dy=dy-0.05*sin(2.5+(y*2-1)*15);
per_pixel_56=dx=dx-0.025*sin(1+sin(time/4) /4+(y*2-1)*8);
per_pixel_57=dy=dy-0.05*sin(time*0.05+(x*2-1)*(sin(time/14)*5+22));
per_pixel_58=zoom=800+sin(time/2);
per_pixel_59=dx=dx-0.025*sin(10.1+(rad*2-1)*3);
per_pixel_60=dy=dy-0.05*sin(time*0.05+(ang*2-1)*11);
per_pixel_61=zoom=800+sin(time/2);
per_pixel_62=w=sin(rad*22);
per_pixel_63=cc=w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*sin(ang*8+rad*sin(time/4) *6)/2 +1;
per_pixel_64=zoom=(1-cc)/8+zoom+0.03*w+mid*0.03;
per_pixel_65=dx=0;
per_pixel_66=rot=0+treb/999;
per_pixel_67=w=sin(ang*22-rad*0.0011+sin(time/8) )/2+.5;
per_pixel_68=cc=w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w;
per_pixel_69=zoom=cc+zoom;
per_pixel_70=///////////////////////////////////////
per_pixel_71=cr1=72*.01;
per_pixel_72=cr2=0*.01;;
per_pixel_73=crx=cr2-cr1;
per_pixel_74=ci=(1-(1-abs(-2*(x+y)/2+1)+(1-abs(-2*(1-(x+(1-y))/2)+1)))/2)*4-1;
per_pixel_75=cb=.0;
per_pixel_76=crs=88;
per_pixel_77=cr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;
per_pixel_78=cqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);
per_pixel_79=jx1=crr;
per_pixel_80=kx1=1-crr;
per_pixel_81=
per_pixel_82=mjdx=dx;
per_pixel_83=mjdy=dy;
per_pixel_84=mjsx=sx;
per_pixel_85=mjsy=sy;
per_pixel_86=mjrt=rot;
per_pixel_87=mjzm=zoom;
per_pixel_88=mjcx=cx;
per_pixel_89=mjcy=cy;
per_pixel_90=mjwp=warp;
per_pixel_91=
per_pixel_92=dx=(jx1*mjdx+kx1*mkdx);
per_pixel_93=dy=(jx1*mjdy+kx1*mkdy);
per_pixel_94=sx=(jx1*mjsx+kx1*mksx);
per_pixel_95=sy=(jx1*mjsy+kx1*mksy);
per_pixel_96=rot=(jx1*mjrt+kx1*mkrt);
per_pixel_97=zoom=(jx1*mjzm+kx1*mkzm);
per_pixel_98=cx=(jx1*mjcx+kx1*mkcx);
per_pixel_99=cy=(jx1*mjcy+kx1*mkcy);
per_pixel_100=warp=(jx1*mjwp+kx1*mkwp);////////////////////////////////////////////////////
warp_1=`shader_body
warp_2=`{
warp_3=`
warp_4=`float2 zoom = 2;
warp_5=`float2 cntr = float2(-0,-0);
warp_6=`float2 c = float2(0.6,0.6); // complex constant
warp_7=`
warp_8=` float2 my_uv = (uv-0.5-cntr)*zoom;
warp_9=` my_uv = float2(my_uv.x*my_uv.x - my_uv.y*my_uv.y, 2*my_uv.x*my_uv.y) + c; // u -> u^2 + c
warp_10=`
warp_11=`zoom =1.81;
warp_12=`cntr = float2(0,0);
warp_13=`c = float2(0.448,0.701);
warp_14=`
warp_15=` float2 my_uv2 = (uv_orig-0.5-cntr)*zoom; // using uv_orig here - no contortion to the nice julia island
warp_16=` my_uv2 = float2(my_uv2.x*my_uv2.x - my_uv2.y*my_uv2.y, 2*my_uv2.x*my_uv2.y) + c; // u -> u^2 + c
warp_17=`
warp_18=`//ret.x = tex2D( sampler_fc_main, my_uv).x - 0.1;
warp_19=`ret = tex2D( sampler_fc_main, my_uv2) - 0.004;
warp_20=`
warp_21=` my_uv = lerp(my_uv, my_uv2, 0.5);
warp_22=`//ret.z = tex2D( sampler_fc_main, my_uv2).z - 0.1;
warp_23=`
warp_24=`}
comp_1=`
comp_2=`float2 factorA, factorB, product;
comp_3=`float2 numerator, denominator, fraction;
comp_4=`
comp_5=`shader_body
comp_6=`{
comp_7=`float2 uvm=0;
comp_8=`
comp_9=`uvm.x=uv.x-.07*tex2D(sampler_noise_hq, uv.x*.8).x;
comp_10=`uvm.y=uv.y-.07*tex2D(sampler_noise_hq, uv.y*.8).x;
comp_11=`
comp_12=`float2 uvo = uv;
comp_13=`//*** Flexis Moebius transformation code
comp_14=`
comp_15=`uv = (uv-0.5)*aspect.xy*2;
comp_16=`factorA = uv;
comp_17=`factorB = float2(q21,q22);
comp_18=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part
comp_19=`                  factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part
comp_20=`
comp_21=`numerator = product + float2(q23,q24);
comp_22=`
comp_23=`factorA = uv;
comp_24=`factorB = float2(q25,q26);
comp_25=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part
comp_26=`                  factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part
comp_27=`
comp_28=`
comp_29=`denominator = product + float2(q27,q28);
comp_30=`
comp_31=`fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
comp_32=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
comp_33=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
comp_34=`
comp_35=`uv = fraction*0.5;
comp_36=`
comp_37=`// ***
comp_38=`
comp_39=`
comp_40=`// *** Flexis logarithmic spiral code
comp_41=`
comp_42=`float t = .33*time; // set velocity here
comp_43=`float2 c = (uv-0.5)*aspect.wz;
comp_44=`float1 ang_hq = atan2(c.x,c.y);
comp_45=`//q11 = 1/asin(1); from the init section
comp_46=`float2 spiral = float2(ang_hq*q11*2+t,aspect.w*log(length(c))+ang_hq*q11-t);
comp_47=`spiral = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 ))*0.95; // mirror
comp_48=`uv = spiral.yx;
comp_49=`
comp_50=`// ***
comp_51=`
comp_52=`float3 blur = GetBlur1(uvm);
comp_53=`float3 sharp = tex2D(sampler_main, uvm);
comp_54=`float3 fix = GetPixel(frac(uvm));
comp_55=`
comp_56=`float mod = (.8*fix+cos(rad*2-roam_sin*2-.5*time));
comp_57=`
comp_58=`float3 fret = (10*fix-blur*rad)*mod;
comp_59=`float3 inv = 1-fret;
comp_60=`
comp_61=`float melt = dot(fret, inv);
comp_62=`
comp_63=`ret=tex2D(sampler_main, float2(uv.x, uv.y*.75))*inv+.55*fret;
comp_64=`ret=lerp(ret, inv, 1.5*saturate(melt));
comp_65=`ret-=roam_sin.wyx*roam_cos.zwx;
comp_66=`}
