MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.560
fDecay=1.000
fVideoEchoZoom=0.362
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.303
fWarpScale=7.225
fZoomExponent=0.01489
fShader=1.000
zoom=1.00390
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.07316
sx=0.99967
sy=0.99990
wave_r=1.000
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.000
wavecode_0_g=0.300
wavecode_0_b=0.750
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0002*cos(ma));
wave_0_per_point5=my=my+(.0002*sin(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.000
wavecode_1_g=1.000
wavecode_1_b=0.000
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0001*cos(ma));
wave_1_per_point5=my=my+(.0001*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.1));
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=0.500
wavecode_2_b=0.000
wavecode_2_a=1.000
wave_2_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_2_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_2_per_point3=
wave_2_per_point4=mx=mx+(.0004*cos(ma));
wave_2_per_point5=my=my+(.0004*sin(ma));
wave_2_per_point6=
wave_2_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_2_per_point8=my=if(above(my,.9),(.9-my),my);
wave_2_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_2_per_point10=my=if(below(my,.1),(.9+my),my);
wave_2_per_point11=
wave_2_per_point12=x=mx;
wave_2_per_point13=y=my;
wave_2_per_point14=
wave_2_per_point15=a=(above(bass+mid+treb,.3));
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.400
wavecode_3_g=0.000
wavecode_3_b=0.600
wavecode_3_a=1.000
wave_3_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_3_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_3_per_point3=
wave_3_per_point4=mx=mx+(.0008*cos(ma));
wave_3_per_point5=my=my+(.0008*sin(ma));
wave_3_per_point6=
wave_3_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_3_per_point8=my=if(above(my,.9),(.9-my),my);
wave_3_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_3_per_point10=my=if(below(my,.1),(.9+my),my);
wave_3_per_point11=
wave_3_per_point12=x=mx;
wave_3_per_point13=y=my;
wave_3_per_point14=
wave_3_per_point15=a=(above(bass+mid+treb,.2));
shapecode_0_enabled=1
shapecode_0_sides=12
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=92
shapecode_0_x=0.800
shapecode_0_y=0.500
shapecode_0_rad=0.02705
shapecode_0_ang=1.57080
shapecode_0_tex_ang=1.25664
shapecode_0_tex_zoom=3.07268
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=t1 = time - int (time);
shape_0_per_frame2=sample = instance/num_inst;
shape_0_per_frame3=t_abs = sample*3;
shape_0_per_frame4=t_rel = sample-time/5;
shape_0_per_frame5=
shape_0_per_frame6=ampl = 2*t_abs/2 ;
shape_0_per_frame7=
shape_0_per_frame8=k1=sin(time/13);
shape_0_per_frame9=k2=sin(time/12);
shape_0_per_frame10=ox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;
shape_0_per_frame11=oy = ampl*cos (t_abs*(31+5*k2));
shape_0_per_frame12=oz = -1  ;
shape_0_per_frame13=
shape_0_per_frame14=
shape_0_per_frame15=r = sqr(sin(t_rel*3.4));
shape_0_per_frame16=g = sqr(sin(t_rel));
shape_0_per_frame17=b = sqr (cos(t_rel*1.8));
shape_0_per_frame18=
shape_0_per_frame19=//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;
shape_0_per_frame20=
shape_0_per_frame21=xang = time/9.5;
shape_0_per_frame22=yang = 0*time/7;
shape_0_per_frame23=zang = -time/22;
shape_0_per_frame24=fov = 0.5;
shape_0_per_frame25=
shape_0_per_frame26=
shape_0_per_frame27=// Rotation um x,y,z
shape_0_per_frame28=
shape_0_per_frame29=mx = ox*cos(zang) - oy*sin(zang);
shape_0_per_frame30=my = ox*sin(zang) + oy*cos(zang);
shape_0_per_frame31=
shape_0_per_frame32=ox = mx;
shape_0_per_frame33=oy = my;
shape_0_per_frame34=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame35=mz = - ox*sin(yang) + oz*cos(yang);
shape_0_per_frame36=ox = mx;
shape_0_per_frame37=oz = mz;
shape_0_per_frame38=my = oy*cos(xang) - oz*sin(xang);
shape_0_per_frame39=mz = oy*sin(xang) + oz*cos(xang);
shape_0_per_frame40=oy = my;
shape_0_per_frame41=oz = mz;
shape_0_per_frame42=
shape_0_per_frame43=oz = oz - 6;
shape_0_per_frame44=x = ox*fov/oz +0.5;
shape_0_per_frame45=//x = (x-.5)*0.75 + 0.5;
shape_0_per_frame46=y = oy*fov/oz + 0.5;
shape_0_per_frame47=
shape_0_per_frame48=a=1/mz*.5;
shape_0_per_frame49=//a2=1/mz*.5;
shape_0_per_frame50=//border_a=1/mz*.5;
shape_0_per_frame51=rad=1/mz*.005;
shapecode_1_enabled=1
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1024
shapecode_1_x=0.380
shapecode_1_y=0.280
shapecode_1_rad=0.03646
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.54929
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=i=2*(instance+3072);    
shape_1_per_frame2=
shape_1_per_frame3=x1=gmegabuf(i);   y1=gmegabuf(i+1);
shape_1_per_frame4=
shape_1_per_frame5=zoom=q2;
shape_1_per_frame6=
shape_1_per_frame7=rad=.1*rad;
shape_1_per_frame8=y= .5+zoom*x1;      
shape_1_per_frame9=x= .5+zoom*y1/q6;
shape_1_per_frame10=
shape_1_per_frame11=x= (int(x)-x+x%2)*pow(-1,1+int(x));
shape_1_per_frame12=y= (int(y)-y+y%2)*pow(-1,1+int(y));
shapecode_2_enabled=1
shapecode_2_sides=3
shapecode_2_additive=0
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=311
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.01000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.62832
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.000
shapecode_2_border_g=0.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_2_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_2_per_frame3=
shape_2_per_frame4=mx=mx+(.0002*cos(ma));
shape_2_per_frame5=my=my+(.0002*tan(ma));
shape_2_per_frame6=
shape_2_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_2_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_2_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_2_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_2_per_frame11=
shape_2_per_frame12=x=1-mx;
shape_2_per_frame13=y=1-my;
shape_2_per_frame14=
shape_2_per_frame15=ang=(sin(time*.35)+1)*3;
shape_2_per_frame16=//a=(above(bass+mid+treb,.8));
shape_2_per_frame17=pi23=4*asin(1)*.333333333;
shape_2_per_frame18=t1=bass+mid+treb;
shapecode_3_enabled=1
shapecode_3_sides=23
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1024
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10262
shapecode_3_ang=0.43982
shapecode_3_tex_ang=0.62832
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=0.500
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.500
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=ma=ma+(above(bass,1)*3.1415*.05*bass);
shape_3_per_frame2=ma=ma-(above(mid,1)*3.1415*.05*mid);
shape_3_per_frame3=
shape_3_per_frame4=mx=mx+(.0001*cos(ma));
shape_3_per_frame5=my=my+(.0001*sin(ma));
shape_3_per_frame6=
shape_3_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_3_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_3_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_3_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_3_per_frame11=
shape_3_per_frame12=x=mx;
shape_3_per_frame13=y=my;
shape_3_per_frame14=rad=(bass+treb)/75;
shape_3_per_frame15=a=(above(bass+mid+treb,.1));
shape_3_per_frame16=r=int(rand(100))/100;
shape_3_per_frame17=g=int(rand(100))/100;
shape_3_per_frame18=b=int(rand(100))/100;
shape_3_per_frame19=r2=int(rand(100))/100;
shape_3_per_frame20=g2=int(rand(100))/100;
shape_3_per_frame21=b2=int(rand(100))/100;
shape_3_per_frame22=r_border=int(rand(100))/100;
shape_3_per_frame23=g_border=int(rand(100))/100;
shape_3_per_frame24=b_border=int(rand(100))/100;
per_frame_init_1=x1 = 0.9;
per_frame_init_2=y1 = 0.5;
per_frame_init_3=
per_frame_init_4=x2 = 0.5; y2 = 0.5;
per_frame_init_5=x3 = 0.5; y3 = 0.5;
per_frame_init_6=x4 = 0.5; y4 = 0.5;
per_frame_init_7=//prma init
per_frame_init_8=i=0;  
per_frame_init_9=loop(10000, gmegabuf(i)=0;
per_frame_init_10=i=i+1;);
per_frame_init_11=t=0;
per_frame_init_12=t0=time;
per_frame_init_13=
per_frame_1=warp = 0.02;
per_frame_2=zoom = 1;
per_frame_3=a = 0.55;
per_frame_4=b = 0.05;
per_frame_5=d = 0.09;
per_frame_6=
per_frame_7=q25 = a;
per_frame_8=q26 = b;
per_frame_9=q27 = d;
per_frame_10=
per_frame_11=
per_frame_12=// elastic thread code
per_frame_13=
per_frame_14=xx1 = xx1*0.9 + (bass)*0.01;
per_frame_15=xx2 = xx2*0.9 + (treb)*0.01;
per_frame_16=yy1 = yy1*0.94 + (treb+bass)*0.0075;
per_frame_17=x1 = 0.5 + (xx1-xx2)*2;
per_frame_18=y1 = 0.4 + yy1*1.5;
per_frame_19=dt = 0.03/fps;
per_frame_20=vx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);
per_frame_21=vy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);
per_frame_22=vx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);
per_frame_23=vy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);
per_frame_24=vx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);
per_frame_25=vy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);
per_frame_26=x2 = x2 + vx2; y2 = y2 + vy2;
per_frame_27=x3 = x3 + vx3; y3 = y3 + vy3;
per_frame_28=x4 = x4 + vx4; y4 = y4 + vy4;
per_frame_29=vx2 = if(above(x2,0),vx2,abs(vx2)*0.5);
per_frame_30=vx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);
per_frame_31=vx3 = if(above(x3,0),vx3,abs(vx3)*0.5);
per_frame_32=vx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);
per_frame_33=vx4 = if(above(x4,0),vx4,abs(vx4)*0.5);
per_frame_34=vx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);
per_frame_35=vy2 = if(above(y2,0),vy2,abs(vy2)*0.5);
per_frame_36=vy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);
per_frame_37=vy3 = if(above(y3,0),vy3,abs(vy3)*0.5);
per_frame_38=vy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);
per_frame_39=vy4 = if(above(y4,0),vy4,abs(vy4)*0.5);
per_frame_40=vy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);
per_frame_41=q1 = x1;q2 = x2;q3 = x3;q4 = x4;
per_frame_42=q5 = y1;q6 = y2;q7 = y3;q8 = y4;
per_frame_43=q9 = 1/aspectx;
per_frame_44=q10 = 1/aspecty;
per_frame_45=q11 = aspectx;
per_frame_46=q12 = aspecty;
per_frame_47=q13 = sqrt(vx4*vx4 + vy4*vy4);
per_frame_48=q14 = atan2(vx4,vy4);
per_frame_49=q15 = sin(q14);
per_frame_50=q16 = cos(q14);
per_frame_51=
per_frame_52=// Flexi's beat detection
per_frame_53=vol = bass*8 + mid*4 + treb*2;
per_frame_54=vol = vol*above(vol,17);
per_frame_55=monitor = vol;
per_frame_56=beat = above(vol,res);
per_frame_57=diff = (1-beat)*diff + beat*(vol-res);
per_frame_58=res = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);
per_frame_59=res = max(0,res);
per_frame_60=
per_frame_61=z = max(0,if(beat,z+1.6,z-30/fps));
per_frame_62=
per_frame_63=zoom = 1 + z*0.004*60/fps;
per_frame_64=//prma
per_frame_65=wave_a=0;        warp=0;        q6=aspecty; 
per_frame_66=t=t+.001/fps;     c=bnot(frame%3);
per_frame_67=s1=15+5*sin(t);         s2=100*sin(t);
per_frame_68=i=0;    x=0;     y=0;    p1=0;    p2=0;
per_frame_69=loop(1024*c*4,
per_frame_70=p1 = s1*sin(i*s2);   
per_frame_71=p2 = -s1*cos(i*s2)+p1-p2;
per_frame_72=x=x+sin(p2);         y=y+cos(p2);
per_frame_73=gmegabuf(2*i)=x;      gmegabuf(2*i+1)=y;
per_frame_74=i=i+1;);
per_frame_75=///////////
per_frame_76=zoom=above(time-t0,.1);
per_frame_77=speed = 25; //// tweak
per_frame_78=t2=t2+1/fps;
per_frame_79=decay=1-t1;
per_frame_80=t1=t1+2*equal((.1*t2*speed)%20,0)/fps;
per_frame_81=t1=t1*above(0.2,(.1*t2*speed)%20);
per_frame_82=monitor=s2;
per_frame_83=q2=.004;
per_frame_84=
per_frame_85=q30=(bass+treb+mid)*2;
per_frame_86=
per_frame_87=zoom=1-(1-pow(2,(bass+treb+mid)*.0031));
per_frame_88=
per_pixel_1=x = 0.5 + (x-0.51)*aspectx;
per_pixel_2=y = 0.5 - (y-0.5)*aspecty;
per_pixel_3=dx = (x*(1-x)-q25*x*y/(x+q26));
per_pixel_4=dy = -q27*y*(1-y/x);
per_pixel_5=
per_pixel_6=dx = -dx*0.01/aspectx;
per_pixel_7=dy = -dy*0.01/aspecty;
per_pixel_8=//dx = dy = 0;
warp_1=`float sigmoid(float t, float c){
warp_2=`   return 1 / ( 1 + exp(t*c));
warp_3=`}
warp_4=`float2 vortex(float2 domain, float2 position, float2 motionVector, float4 domainAspect, float radius, float sharpness, float spin, float zoom){
warp_5=`   domain -= position;
warp_6=`   domain *= domainAspect.xy;
warp_7=`   float sigmoidFilter = sigmoid( length(domain) - radius , sharpness );
warp_8=`   domain +=  + motionVector*sigmoidFilter;
warp_9=`   spin *= sigmoidFilter;
warp_10=`   float s = sin(spin);
warp_11=`   float c = cos(spin);
warp_12=`   float2 uv_rot;
warp_13=`   uv_rot.x = c*domain.x - s*domain.y;
warp_14=`   uv_rot.y = s*domain.x + c*domain.y;
warp_15=`   uv_rot *= domainAspect.zw;
warp_16=`   uv_rot += position;
warp_17=`   return saturate(position + (uv_rot-position)*lerp(1,zoom,sigmoidFilter));
warp_18=`}
warp_19=`shader_body
warp_20=`{
warp_21=`float2 position = float2(q4,1-q8) + 0.5*0;
warp_22=`float2 motionVector = float2(-q15,q16)*q13*aspect.wz*0.5;
warp_23=`float4 domainAspect = aspect;
warp_24=`float radius = 0.05;
warp_25=`float sharpness = 20;
warp_26=`float spin = -0.1;
warp_27=`float zoom = 1.05;
warp_28=`uv = vortex( uv, position, motionVector, domainAspect, radius, sharpness, spin, zoom);
warp_29=`float2 texpix = texsize.xy * texsize_noise_lq.zw;
warp_30=`float2 dither_uv_big = uv_orig*texpix*0.1;// + rand_frame.xy;
warp_31=`dither_uv_big = dither_uv_big*texpix/(length(dither_uv_big)+0.01)*0.1;
warp_32=`float2 dither_uv = uv_orig*texpix*1.5 + rand_frame.xy;
warp_33=`//uv -= (float2(0,1)*(length(GetPixel(uv)-0.5))*texsize.zw*64) * 0.03;
warp_34=`ret = GetPixel(saturate(uv)) * 0.7 + 0.15;
warp_35=`ret.x=1-ret.x;
warp_36=`
warp_37=`float4 noise2 = tex3D(sampler_noisevol_hq, 
warp_38=`                      ((uv.xyy*1.5
warp_39=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_40=`                      ).xyz*
warp_41=`                      float3(1,1,0)*0.05 + 
warp_42=`                      time*float3(0,0,1)*0.4 
warp_43=`                     );
warp_44=`if(ret.x+ret.y+ret.z>.5)ret += (noise2)*.5; 
warp_45=`ret += (tex2D(sampler_noise_lq, dither_uv_big)-0.5) * 0.05;
warp_46=`ret.y=1-ret.y;
warp_47=`ret += (tex2D(sampler_noise_lq, dither_uv)-0.5) * 0.035;
warp_48=`float minchan = min(min(ret.x, ret.y), ret.z);
warp_49=`ret -= minchan;
warp_50=`float maxchan = max(max(ret.x, ret.y), ret.z);
warp_51=`ret /= maxchan + 0.01;
warp_52=`ret.z=1-ret.z;
warp_53=`
warp_54=`
warp_55=`//ret = GetPixel(uv);
warp_56=`}
comp_1=`float2 complex_div(float2 numerator, float2 denominator){
comp_2=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_3=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_4=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_5=`}
comp_6=`
comp_7=`float2 uv_polar(float2 domain, float2 center){
comp_8=`   float2 c = domain - center;
comp_9=`   float rad_hq = length(c);
comp_10=`   float ang_hq = atan2(c.x,c.y);
comp_11=`   return float2(ang_hq*M_INV_PI_2, rad_hq);
comp_12=`}
comp_13=`
comp_14=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_15=`   float2 polar = uv_polar(domain, center);
comp_16=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_17=`}
comp_18=`
comp_19=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_20=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_21=`}
comp_22=`
comp_23=`float2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_24=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_25=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);
comp_26=`}
comp_27=`
comp_28=`
comp_29=`float2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){
comp_30=`   float2 uv_r = (domain-center);
comp_31=`   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;
comp_32=`}
comp_33=`
comp_34=`
comp_35=`shader_body
comp_36=`{
comp_37=`float2 uvo = uv;
comp_38=`
comp_39=`float2 rotate_uv = 0.5+uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q3, q4, 2);
comp_40=`float2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.3, float2(q11,q12));
comp_41=`float2 mirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));
comp_42=`
comp_43=`float2 d = texsize.zw*3;
comp_44=`float3 dx = ( 2*GetBlur1(mirror_uv+float2(1,0)*d)-2*GetBlur1(mirror_uv-float2(1,0)*d) );
comp_45=`float3 dy = ( 2*GetBlur1(mirror_uv+float2(0,1)*d)-2*GetBlur1(mirror_uv-float2(0,1)*d) );
comp_46=`
comp_47=`mirror_uv += float2(dx.x,dy.x)*texsize.zw*4;
comp_48=`
comp_49=`float3 aura = pow(hue_shader,4)*1.4;
comp_50=`float3 glow = 3;
comp_51=`float3 blob = float3(1,0.75,0)*0;
comp_52=`
comp_53=`float2 uv_red = mirror_uv;
comp_54=`ret = lerp(ret,1,(GetBlur1(uv_red).x)*(1-GetBlur2(uv_red).x)*aura);
comp_55=`ret = lerp(blob, ret, GetPixel(uv_red).x);
comp_56=`ret += (1-GetPixel(uv_red).x)*GetBlur1(uv_red).x*glow;
comp_57=`
comp_58=`mirror_uv-= float2(dx.x,dy.x)*texsize.zw*24;
comp_59=`dx = ( 2*GetBlur1(mirror_uv+float2(1,0)*d)-2*GetBlur1(mirror_uv-float2(1,0)*d) );
comp_60=`dy = ( 2*GetBlur1(mirror_uv+float2(0,1)*d)-2*GetBlur1(mirror_uv-float2(0,1)*d) );
comp_61=`float2 dz = +float2(-dx.y,dy.y)*0.25;
comp_62=`float3 bg = lerp(float3(1,0.7,0.2),float3(0.15,0,0.5),mirror_uv.x*0.8 - mirror_uv.y + 0.75+dz.x+dz.y-0.1)*(GetPixel(mirror_uv).y);
comp_63=`ret = lerp(ret,1,bg);
comp_64=`
comp_65=`mirror_uv = uv_rotate(0.5 + (uvo-0.5)*aspect.wz, 0.5, q3, q4, 1).yx;
comp_66=`
comp_67=`d = texsize.zw;
comp_68=`dx = ( 2*GetPixel(mirror_uv+float2(1,0)*d)-2*GetPixel(mirror_uv-float2(1,0)*d) );
comp_69=`dy = ( 2*GetPixel(mirror_uv+float2(0,1)*d)-2*GetPixel(mirror_uv-float2(0,1)*d) );
comp_70=`dz = -float2(dx.z,dy.z);
comp_71=`
comp_72=`ret = 1-lerp(ret,float3(0.9,0.9,1),1-GetPixel(mirror_uv+dz).z) ;
comp_73=`float4 noise9 = tex3D(sampler_noisevol_hq, 
comp_74=`                      ((dz.xyy*q28
comp_75=`                       )*texsize.xyy*texsize_noisevol_hq.zww
comp_76=`                      ).xyz*
comp_77=`                      float3(1,1,0)*0.05 + 
comp_78=`                      time*float3(0,0,1)*q31
comp_79=`                     );
comp_80=`if(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; 
comp_81=`if(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; 
comp_82=`if(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; 
comp_83=`}
