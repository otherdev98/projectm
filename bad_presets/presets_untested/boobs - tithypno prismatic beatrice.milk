MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=2.000
fDecay=0.980
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=7
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=100.000
fWaveScale=0.198
fWaveSmoothing=0.750
fWaveParam=1.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=0.88020
fShader=0.000
zoom=0.99980
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=0.99980
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.030
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.750
ib_size=0.050
ib_r=0.500
ib_g=0.700
ib_b=0.600
ib_a=0.300
nMotionVectorsX=12.800
nMotionVectorsY=11.400
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=1.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=1
wavecode_3_samples=102
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.00000
wavecode_3_r=0.500
wavecode_3_g=0.100
wavecode_3_b=0.240
wavecode_3_a=1.000
wave_3_per_frame1=samples = 256 + 50*sin(time*.939493949);
wave_3_per_frame2=vol = (bass_att + mid_att + treb_att)*.333333;
wave_3_per_frame3=vol_avg = .1*(vol_avg*9 + vol);
wave_3_per_frame4=vg = vol_avg*.1;
wave_3_per_frame5=t1 = if(above(vg,1.8),1.8,vg);
wave_3_per_point1=tm = q1;
wave_3_per_point2=sp = sample*6.28*8*6*sin(time)*100;
wave_3_per_point3=
wave_3_per_point4=vol = (value1+value2)*.5;
wave_3_per_point5=it = it*above(sample,0);
wave_3_per_point6=it = it + 1;
wave_3_per_point7=//rad = .5 + vol + .01;
wave_3_per_point8=rad=1;
wave_3_per_point9=ra = rad*sin(sample*3.14);
wave_3_per_point10=ox = ra*sin(sp);
wave_3_per_point11=oy = sin(sample*3.14-1.57)*rad;
wave_3_per_point12=oz = ra*cos(sp);
wave_3_per_point13=
wave_3_per_point14=xang = q4;
wave_3_per_point15=yang = q5;
wave_3_per_point16=zang = q6;
wave_3_per_point17=fov = .5;
wave_3_per_point18=
wave_3_per_point19=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point20=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point21=ox = mx;
wave_3_per_point22=oy = my;
wave_3_per_point23=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point24=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point25=ox = mx;
wave_3_per_point26=oz = mz;
wave_3_per_point27=my = oy*cos(xang) - oz*sin(xang);
wave_3_per_point28=mz = oy*sin(xang) + oz*cos(xang);
wave_3_per_point29=oy = my;
wave_3_per_point30=oz = mz;
wave_3_per_point31=
wave_3_per_point32=yang = q8;
wave_3_per_point33=oz = oz + 5;
wave_3_per_point34=
wave_3_per_point35=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point36=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point37=ox = mx;
wave_3_per_point38=oz = mz;
wave_3_per_point39=
wave_3_per_point40=oz = oz - 5;
wave_3_per_point41=
wave_3_per_point42=oz = oz - 2;
wave_3_per_point43=x = ox*fov/oz + 0.5;
wave_3_per_point44=x = (x-.5)*0.75 + 0.5;
wave_3_per_point45=y = oy*fov/oz + 0.5;
wave_3_per_point46=
wave_3_per_point47=r = 1 + .5*sin(sample*.10+(time*10*bass));
wave_3_per_point48=g = 1 + .5*sin(sample*2+(time*50*treb));
wave_3_per_point49=b = 1 + .5*sin(sample*5+(time*20*mid));
shapecode_0_enabled=1
shapecode_0_sides=12
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=92
shapecode_0_x=0.800
shapecode_0_y=0.500
shapecode_0_rad=0.02705
shapecode_0_ang=1.57080
shapecode_0_tex_ang=1.25664
shapecode_0_tex_zoom=3.07268
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=t1 = time - int (time);
shape_0_per_frame2=sample = instance/num_inst;
shape_0_per_frame3=t_abs = sample*3;
shape_0_per_frame4=t_rel = sample-time/5;
shape_0_per_frame5=
shape_0_per_frame6=ampl = 2*t_abs/2 ;
shape_0_per_frame7=
shape_0_per_frame8=k1=sin(time/13);
shape_0_per_frame9=k2=sin(time/12);
shape_0_per_frame10=ox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;
shape_0_per_frame11=oy = ampl*cos (t_abs*(31+5*k2));
shape_0_per_frame12=oz = -1  ;
shape_0_per_frame13=
shape_0_per_frame14=
shape_0_per_frame15=r = sqr(sin(t_rel*3.4));
shape_0_per_frame16=g = sqr(sin(t_rel));
shape_0_per_frame17=b = sqr (cos(t_rel*1.8));
shape_0_per_frame18=
shape_0_per_frame19=//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;
shape_0_per_frame20=
shape_0_per_frame21=xang = time/9.5;
shape_0_per_frame22=yang = 0*time/7;
shape_0_per_frame23=zang = -time/22;
shape_0_per_frame24=fov = 0.5;
shape_0_per_frame25=
shape_0_per_frame26=
shape_0_per_frame27=// Rotation um x,y,z
shape_0_per_frame28=
shape_0_per_frame29=mx = ox*cos(zang) - oy*sin(zang);
shape_0_per_frame30=my = ox*sin(zang) + oy*cos(zang);
shape_0_per_frame31=
shape_0_per_frame32=ox = mx;
shape_0_per_frame33=oy = my;
shape_0_per_frame34=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame35=mz = - ox*sin(yang) + oz*cos(yang);
shape_0_per_frame36=ox = mx;
shape_0_per_frame37=oz = mz;
shape_0_per_frame38=my = oy*cos(xang) - oz*sin(xang);
shape_0_per_frame39=mz = oy*sin(xang) + oz*cos(xang);
shape_0_per_frame40=oy = my;
shape_0_per_frame41=oz = mz;
shape_0_per_frame42=
shape_0_per_frame43=oz = oz - 6;
shape_0_per_frame44=x = ox*fov/oz +0.5;
shape_0_per_frame45=//x = (x-.5)*0.75 + 0.5;
shape_0_per_frame46=y = oy*fov/oz + 0.5;
shape_0_per_frame47=
shape_0_per_frame48=a=1/mz*.5;
shape_0_per_frame49=//a2=1/mz*.5;
shape_0_per_frame50=//border_a=1/mz*.5;
shape_0_per_frame51=rad=1/mz*.005;
shapecode_1_enabled=1
shapecode_1_sides=3
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=311
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.01000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.62832
shapecode_1_tex_zoom=1.00000
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=0.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_1_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_1_per_frame3=
shape_1_per_frame4=mx=mx+(.0002*cos(ma));
shape_1_per_frame5=my=my+(.0002*tan(ma));
shape_1_per_frame6=
shape_1_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_1_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_1_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_1_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_1_per_frame11=
shape_1_per_frame12=x=1-mx;
shape_1_per_frame13=y=1-my;
shape_1_per_frame14=
shape_1_per_frame15=ang=(sin(time*.35)+1)*3;
shape_1_per_frame16=//a=(above(bass+mid+treb,.8));
shape_1_per_frame17=pi23=4*asin(1)*.333333333;
shape_1_per_frame18=t1=bass+mid+treb;
shapecode_2_enabled=1
shapecode_2_sides=23
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1024
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10262
shapecode_2_ang=0.43982
shapecode_2_tex_ang=0.62832
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=0.500
shapecode_2_r2=1.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.500
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ma=ma+(above(bass,1)*3.1415*.05*bass);
shape_2_per_frame2=ma=ma-(above(mid,1)*3.1415*.05*mid);
shape_2_per_frame3=
shape_2_per_frame4=mx=mx+(.0001*cos(ma));
shape_2_per_frame5=my=my+(.0001*sin(ma));
shape_2_per_frame6=
shape_2_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_2_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_2_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_2_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_2_per_frame11=
shape_2_per_frame12=x=mx;
shape_2_per_frame13=y=my;
shape_2_per_frame14=rad=(bass+treb)/75;
shape_2_per_frame15=a=(above(bass+mid+treb,.1));
shape_2_per_frame16=r=int(rand(100))/100;
shape_2_per_frame17=g=int(rand(100))/100;
shape_2_per_frame18=b=int(rand(100))/100;
shape_2_per_frame19=r2=int(rand(100))/100;
shape_2_per_frame20=g2=int(rand(100))/100;
shape_2_per_frame21=b2=int(rand(100))/100;
shape_2_per_frame22=r_border=int(rand(100))/100;
shape_2_per_frame23=g_border=int(rand(100))/100;
shape_2_per_frame24=b_border=int(rand(100))/100;
shapecode_3_enabled=1
shapecode_3_sides=20
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1024
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.01000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.26465
shapecode_3_r=0.200
shapecode_3_g=0.000
shapecode_3_b=0.700
shapecode_3_a=0.240
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=1.000
shapecode_3_a2=0.100
shapecode_3_border_r=0.500
shapecode_3_border_g=0.500
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
shape_3_init1=//samples = 256 + 50*sin(time*.939493949);
shape_3_init2=//num_inst = 256 + 50*sin(time*.939493949);
shape_3_init3=//samples = .5 + sin(time*.939493949);
shape_3_init4=num_inst = .5 + sin(time*.939493949);
shape_3_per_frame1=
shape_3_per_frame2=sample = instance/1024;
shape_3_per_frame3=//num_inst = .5 + sin(time*.939493949);
shape_3_per_frame4=tm = q1;
shape_3_per_frame5=sp = sample*6.28*8*6*sin(time)*100;
shape_3_per_frame6=
shape_3_per_frame7=vol = (value1+value2)*.5;
shape_3_per_frame8=it = it*above(sample,0);
shape_3_per_frame9=it = it + 1;
shape_3_per_frame10=//rad = .5 + vol + .01;
shape_3_per_frame11=rad2=1.3;
shape_3_per_frame12=ra = rad2*sin(sample*3.14);
shape_3_per_frame13=ox = ra*sin(sp);
shape_3_per_frame14=oy = sin(sample*3.14-1.57)*rad2;
shape_3_per_frame15=oz = ra*cos(sp);
shape_3_per_frame16=
shape_3_per_frame17=xang = q4;
shape_3_per_frame18=yang = q5;
shape_3_per_frame19=zang = q6;
shape_3_per_frame20=fov = .5;
shape_3_per_frame21=
shape_3_per_frame22=mx = ox*cos(zang) - oy*sin(zang);
shape_3_per_frame23=my = ox*sin(zang) + oy*cos(zang);
shape_3_per_frame24=ox = mx;
shape_3_per_frame25=oy = my;
shape_3_per_frame26=mx = ox*cos(yang) + oz*sin(yang);
shape_3_per_frame27=mz = - ox*sin(yang) + oz*cos(yang);
shape_3_per_frame28=ox = mx;
shape_3_per_frame29=oz = mz;
shape_3_per_frame30=my = oy*cos(xang) - oz*sin(xang);
shape_3_per_frame31=mz = oy*sin(xang) + oz*cos(xang);
shape_3_per_frame32=oy = my;
shape_3_per_frame33=oz = mz;
shape_3_per_frame34=
shape_3_per_frame35=yang = q8;
shape_3_per_frame36=oz = oz + 5;
shape_3_per_frame37=rad=rad*instance*.0041;//3d
shape_3_per_frame38=
shape_3_per_frame39=mx = ox*cos(yang) + oz*sin(yang);
shape_3_per_frame40=mz = - ox*sin(yang) + oz*cos(yang);
shape_3_per_frame41=ox = mx;
shape_3_per_frame42=oz = mz;
shape_3_per_frame43=
shape_3_per_frame44=oz = oz - 5;
shape_3_per_frame45=
shape_3_per_frame46=oz = oz - 2;
shape_3_per_frame47=x = ox*fov/oz + 0.5;
shape_3_per_frame48=x = (x-.5)*0.75 + 0.5;
shape_3_per_frame49=y = oy*fov/oz + 0.5;
shape_3_per_frame50=
per_frame_1=
per_frame_2=//krash's beat detection code
per_frame_3=volume = 0.3*(bass+mid+att);
per_frame_4=beatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);
per_frame_5=lastbeat = lastbeat + equal(lastbeat,0)*time;
per_frame_6=meanbass_att = 0.1*(meanbass_att*9 + bass_att);
per_frame_7=peakbass_att = max(bass_att,peakbass_att);
per_frame_8=beatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);
per_frame_9=peakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);
per_frame_10=lastbeat = beat*time + (1-beat)*lastbeat;
per_frame_11=peakbass_att = max(peakbass_att,1.1*meanbass_att);
per_frame_12=beat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));
per_frame_13=beatcounter = beatcounter + beat;
per_frame_14=mode = if(beat*equal(beatcounter%2,0),1-mode,mode);
per_frame_15=flip = 2*mode-1;
per_frame_16=//monitor=flip;
per_frame_17=q8=flip;
per_frame_18=
per_frame_19=
per_frame_20=decay = below(sin(time*5000),.999);
per_frame_21=decay = 1;//1 - beat;
per_frame_22=
per_frame_23=decay = decay * below( treb, 3.5 );
per_frame_24=
per_frame_25=
per_frame_26=hvol = pow( (mid+treb)*0.35 , 2 );
per_frame_27=hmtime = hmtime + hvol*0.02;
per_frame_28=
per_frame_29=lvol = pow( bass , 3 );
per_frame_30=lmtime = lmtime + lvol*0.02;
per_frame_31=
per_frame_32=q1 = 0;//hmtime;
per_frame_33=q2 = lmtime;
per_frame_34=
per_frame_35=q3 = pow( min( bass_att*bass_att * 0.8  , 1 ) , 4 );
per_frame_36=monitor = q3;
per_frame_37=test = w1;
per_frame_38=
per_frame_39=vol = pow( (bass+mid+treb)/4 , 2 );
per_frame_40=mtime = mtime + vol * 0.1;
per_frame_41=q4 = mtime/4;
per_frame_42=monitor = vol;
per_frame_43=//echo_zoom = echo_zoom - vol/50;
per_pixel_1=//decay_b = mo + (1-mo)*sin((y*2.05 + 1.11*x) + time*1.789);
per_pixel_2=
per_pixel_3=//decay_r=w1;
per_pixel_4=//decay_g=w2;
per_pixel_5=//decay_b=w3;
per_pixel_6=zoom=1.0001-(rad*0.01);
warp_1=`shader_body
warp_2=`{
warp_3=`float2 pixelsize = texsize.zw;
warp_4=`float2 uvm = uv;
warp_5=`
warp_6=`float2 noise_uv = uv*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;
warp_7=`float4 noiseVal = tex2D(sampler_noise_lq, noise_uv);
warp_8=`
warp_9=`ret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,1) - float3(.0,.0,.0));
warp_10=`float3 ret7=ret;
warp_11=`if(frame%3==0)ret.z=.71-ret7.x;
warp_12=`
warp_13=`ret.xyz = tex2D( sampler_pw_main,uvm).xyz;
warp_14=`
warp_15=`
warp_16=`
warp_17=`float3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;
warp_18=`if (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {
warp_19=`ret.xy = rsamp.xy;
warp_20=`}
warp_21=`
warp_22=`rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;
warp_23=`if (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {
warp_24=`ret.xy = rsamp.xy;
warp_25=`}
warp_26=`
warp_27=`ret.z = tex2D(sampler_fw_main,ret.xy).z;
warp_28=`
warp_29=`
warp_30=`
warp_31=`
warp_32=`ret.z += q29*.05;
warp_33=`
warp_34=`if(frame%5==0)ret.x=.71-ret7.y;
warp_35=`
warp_36=`if (ret.z-ret.x-ret.y < .09) {
warp_37=`ret*=.10;
warp_38=`}
warp_39=`
warp_40=`
warp_41=`float4 noise2 = tex3D(sampler_noisevol_hq, 
warp_42=`                      ((uv.xyy
warp_43=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_44=`                      ).xyz*
warp_45=`                      float3(1,1,0)*0.05 + 
warp_46=`                      time*float3(0,0,1)*0.4 
warp_47=`                     );
warp_48=`if(ret.x+ret.y+ret.z>.9)ret += (noise2)*.2; 
warp_49=`
warp_50=`if(frame%7==0)ret.y=.71-ret7.z;
warp_51=`}
comp_1=`sampler sampler_pw_noise_lq;
comp_2=`
comp_3=`float2 rs, rss, rss0, tmp, uvo;
comp_4=`float3 noise;
comp_5=`
comp_6=`float2 complex_div(float2 numerator, float2 denominator){
comp_7=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_8=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_9=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_10=`}
comp_11=`
comp_12=`float2 uv_polar(float2 domain, float2 center){
comp_13=`   float2 c = domain - center;
comp_14=`   float rad_hq = length(c);
comp_15=`   float ang_hq = atan2(c.x,c.y);
comp_16=`   return float2(ang_hq, rad_hq);
comp_17=`}
comp_18=`
comp_19=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_20=`   float2 polar = uv_polar(domain, center);
comp_21=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_22=`}
comp_23=`
comp_24=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_25=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_26=`}
comp_27=`
comp_28=`float2 uv_bipolar_logarithmic(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_29=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_30=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord)*float2(M_INV_PI_2,1);
comp_31=`}
comp_32=`
comp_33=`float2 uv_scale(float2 domain, float2 center, float2 scale){
comp_34=`   return center + (domain-center)*scale;
comp_35=`}
comp_36=`float2 uv_lens_half_sphere(float2 domain, float2 position, float radius, float refractivity){
comp_37=`   float2 polar = uv_polar(domain, position);
comp_38=`   float cone = saturate(1-polar.y/radius);
comp_39=`   float halfsphere = sqrt(1-pow(cone-1,2));
comp_40=`   float w = atan2(1-cone,halfsphere);
comp_41=`   float refrac_w = w-asin(sin(w)/refractivity);
comp_42=`   float refrac_d = 1-cone - sin(refrac_w)*halfsphere/cos(refrac_w);
comp_43=`   float2 refrac_uv =position+float2(sin(polar.x),cos(polar.x))*refrac_d*radius;
comp_44=`   bool mask =(length(domain-position)<radius);
comp_45=`   return !mask*domain + 
comp_46=`           mask*refrac_uv;
comp_47=`}
comp_48=`
comp_49=`/* code from Martins hardcore mix - Danke ;) */
comp_50=`float hardcore_stars(float2 domain, float2 center, float o){
comp_51=`
comp_52=`   float2 uv1 = domain-center;
comp_53=`   rss0.x = atan2(uv1.x, uv1.y)/3.1416;
comp_54=`   rss0.y = .003/(length (uv1));
comp_55=`   rss = float2 (rss0.x+q1/3,rss0.y+time+o);
comp_56=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_57=`   float noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_58=`   tmp = abs(frac(rss*8)-.5);
comp_59=`   float3 dots = saturate(.04/length(tmp)) *noise;
comp_60=`   rss = float2 (rss0.x,rss0.y+(time+o)/4);
comp_61=`   rss = mul(rss,float2x2(.7,.7,-.7,.7));
comp_62=`   noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);
comp_63=`   tmp = abs(frac(rss*8)-.5);
comp_64=`   dots += saturate(.02/length(tmp)) * noise;
comp_65=`   dots *= saturate(.2/abs(rss0.y));
comp_66=`   return dots*dots;
comp_67=`return 0;
comp_68=`}
comp_69=`
comp_70=`
comp_71=`
comp_72=`
comp_73=`
comp_74=`
comp_75=`shader_body
comp_76=`{
comp_77=`uv = 0.5 + (uv-0.5)*aspect.wz;
comp_78=`time *= 0.4;
comp_79=`
comp_80=`float2 pole1 =float2(0.1,0.5);
comp_81=`float2 pole2 =float2(0.9,0.5);
comp_82=`
comp_83=`float stars = hardcore_stars(uv,pole1,0) + hardcore_stars(uv,pole2,2);
comp_84=`
comp_85=`uv = uv_bipolar_logarithmic(uv, pole1, pole2, 2, 0.3, float2(q26,q27)*float2(8,1));
comp_86=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.98; // Eo.S. mirror code with cutted borders
comp_87=`uv = uv.yx;
comp_88=`
comp_89=`float2 uv1 = uv;
comp_90=`float2 d = texsize.zw*3;
comp_91=`float3 dx = GetBlur1(uv1 + float2(1,0)*d) - GetBlur1(uv1 - float2(1,0)*d);
comp_92=`float3 dy = GetBlur1(uv1 + float2(0,1)*d) - GetBlur1(uv1 - float2(0,1)*d);
comp_93=`uv1 = uv+float2(dx.x,dy.x)*texsize.zw*32;
comp_94=`     ret = GetPixel(uv1).x*float3(1,0,0)*0.5;
comp_95=`
comp_96=`ret.x += (+dx.x - dy.x)*0.4;
comp_97=`ret.x = pow(ret.x,0.8)*1.2;
comp_98=`
comp_99=`ret = lerp(ret,float3(1,1,1),GetPixel(uv1).z);
comp_100=`
comp_101=`
comp_102=`ret = lerp(ret,1-GetPixel(uv)*1.5,stars);
comp_103=`
comp_104=`}
comp_105=`
comp_106=`
