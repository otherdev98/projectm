MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=5.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=1.000
nVideoEchoOrientation=2
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=1.000
fWaveScale=100.000
fWaveSmoothing=0.900
fWaveParam=1.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=9.861
fWarpScale=16.217
fZoomExponent=1.50374
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.82644
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=1.000
ob_a=1.000
ib_size=0.015
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=63.936
nMotionVectorsY=19.048
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=0.46374
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=//pi
wave_0_init2=t8=3.14159265;
wave_0_init3=t5 = 1;
wave_0_per_frame1=rotx = rotx+bass;
wave_0_per_frame2=roty = roty+mid;
wave_0_per_frame3=rotz = rotz+treb;
wave_0_per_frame4=//rotx = 0;
wave_0_per_frame5=//roty =0;
wave_0_per_frame6=//rotz = 0;
wave_0_per_frame7=
wave_0_per_frame8=//convert rotation values from degrees to radians
wave_0_per_frame9=t1= t8*rotx/180;
wave_0_per_frame10=t2 = t8*roty/180;
wave_0_per_frame11=t3 = t8*rotz/180;
wave_0_per_frame12=
wave_0_per_frame13=t4 = 3*sin(time);
wave_0_per_frame14=t5 = 10+8*cos(time);
wave_0_per_frame15=
wave_0_per_frame16=g = 0.5-0.4*cos(time);
wave_0_per_frame17=r = 0.5-0.4*sin(time);
wave_0_per_point1=//Define 3D Shape
wave_0_per_point2=
wave_0_per_point3=//Spiral
wave_0_per_point4=x1 = 0.5*sin(8*t8*sample);
wave_0_per_point5=y1 = 2*(sample-0.5)-value1;
wave_0_per_point6=z1= 0.5*cos(8*t8*sample);
wave_0_per_point7=
wave_0_per_point8=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_0_per_point9=y2 = y1*cos(t1)-z1*sin(t1);
wave_0_per_point10=z2 = y1*sin(t1)+z1*cos(t1);
wave_0_per_point11=x2 = z2*sin(t2)+x1*cos(t2);
wave_0_per_point12=z3 = z2*cos(t2)-x1*sin(t2);
wave_0_per_point13=x3 = x2*cos(t3)-y2*sin(t3);
wave_0_per_point14=y3 = y2*cos(t3)+x2*sin(t3);
wave_0_per_point15=//move resulting shape in 3d space
wave_0_per_point16=x4 = x3+t4;
wave_0_per_point17=y4 = y3;
wave_0_per_point18=z4 = z3+t5;
wave_0_per_point19=//draw 3d shape in 2d
wave_0_per_point20=x=0.5+0.5*(x4/(1+z4*0.5));
wave_0_per_point21=y=0.5+0.5*(y4/(1+z4*0.5));
wave_0_per_point22=
wave_0_per_point23=b= r+value1;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=100.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=//pi
wave_1_init2=t8=3.14159265;
wave_1_init3=t5 = 1;
wave_1_per_frame1=rotx = rotx+bass;
wave_1_per_frame2=roty = roty+mid;
wave_1_per_frame3=rotz = rotz+treb;
wave_1_per_frame4=//rotx = 0;
wave_1_per_frame5=//roty =0;
wave_1_per_frame6=//rotz = 0;
wave_1_per_frame7=
wave_1_per_frame8=//convert rotation values from degrees to radians
wave_1_per_frame9=t1= t8*rotx/180;
wave_1_per_frame10=t2 = t8*roty/180;
wave_1_per_frame11=t3 = t8*rotz/180;
wave_1_per_frame12=
wave_1_per_frame13=t4 = 3*sin(0.66*t8);
wave_1_per_frame14=t5 = 10+8*cos(0.66*t8);
wave_1_per_point1=//Define 3D Shape
wave_1_per_point2=
wave_1_per_point3=//Sphere
wave_1_per_point4=fvar = sample*512;
wave_1_per_point5=svar = fvar/32;
wave_1_per_point6=tvar = 0&svar;
wave_1_per_point7=nsample = tvar*3.5;
wave_1_per_point8=x1 = (1)*sin(nsample+value1*5);
wave_1_per_point9=y1 = (4)*cos(sample*t8*2);
wave_1_per_point10=z1= (4)*sin(sample*(t8*2));
wave_1_per_point11=
wave_1_per_point12=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_1_per_point13=y2 = y1*cos(t1)-z1*sin(t1);
wave_1_per_point14=z2 = y1*sin(t1)+z1*cos(t1);
wave_1_per_point15=x2 = z2*sin(t2)+x1*cos(t2);
wave_1_per_point16=z3 = z2*cos(t2)-x1*sin(t2);
wave_1_per_point17=x3 = x2*cos(t3)-y2*sin(t3);
wave_1_per_point18=y3 = y2*cos(t3)+x2*sin(t3);
wave_1_per_point19=//move resulting shape in 3d space
wave_1_per_point20=x4 = x3;
wave_1_per_point21=y4 = y3;
wave_1_per_point22=z4 = z3+10;
wave_1_per_point23=//draw 3d shape in 2d
wave_1_per_point24=x=0.5+0.5*(x4/(1+z4*0.5));
wave_1_per_point25=y=0.5+0.5*(y4/(1+z4*0.5));
wave_1_per_point26=
wave_1_per_point27=r = sin(nsample);
wave_1_per_point28=g = -.3+cos(sample*20+(time*5));
wave_1_per_point29=b = -.3-cos(-sample*20+(time*5));
wave_1_per_point30=g = if(below(g,0),0,g);
wave_1_per_point31=b = if(below(b,0),0,b);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.46374
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_init1=//pi
wave_2_init2=t8=3.14159265;
wave_2_init3=t5 = 1;
wave_2_per_frame1=rotx = rotx+bass;
wave_2_per_frame2=roty = roty+mid;
wave_2_per_frame3=rotz = rotz+treb;
wave_2_per_frame4=//rotx = 0;
wave_2_per_frame5=//roty =0;
wave_2_per_frame6=//rotz = 0;
wave_2_per_frame7=
wave_2_per_frame8=//convert rotation values from degrees to radians
wave_2_per_frame9=t1= t8*rotx/180;
wave_2_per_frame10=t2 = t8*roty/180;
wave_2_per_frame11=t3 = t8*rotz/180;
wave_2_per_frame12=
wave_2_per_frame13=t4 = 3*sin(time+1.33*t8);
wave_2_per_frame14=t5 = 10+8*cos(time+1.33*t8);
wave_2_per_frame15=
wave_2_per_frame16=r = 0.5-0.4*cos(time+1.33*t8);
wave_2_per_frame17=b = 0.5-0.4*sin(time+1.33*t8);
wave_2_per_point1=//Define 3D Shape
wave_2_per_point2=
wave_2_per_point3=//Cube
wave_2_per_point4=x0 = if(below(sample*12,1),sample*12, if(below(sample*12,2),1, if(below(sample*12,3),abs(sample*12-3), if(below(sample*12,6),0, if(below(sample*12,8),1, if(below(sample*12,9),abs(sample*12-9), if(below(sample*12,10),0, if(below(sample*12,11),sample*12-10,1))))))));
wave_2_per_point5=y0 = if(below(sample*12,1),0, if(below(sample*12,2),sample*12-1, if(below(sample*12,3),1, if(below(sample*12,4),abs(sample*12-4), if(below(sample*12,5),0, if(below(sample*12,7),1, if(below(sample*12,9),0, if(below(sample*12,10),sample*12-9, if(below(sample*12,11),1,abs(sample*12-12))))))))));
wave_2_per_point6=z0 = if(below(sample*12,4),0, if(below(sample*12,5),sample*12-4, if(below(sample*12,6),abs(sample*12-6), if(below(sample*12,7),sample*12-6, if(below(sample*12,8),abs(sample*12-8),1)))));
wave_2_per_point7=x1 = 0.5-x0+if(below(sin(sample*12*3.1415),0),value1,0);
wave_2_per_point8=y1 = 0.5-y0+if(below(cos((sample*12-1.5)*3.1415),0),value1,0);
wave_2_per_point9=z1 = 0.5-z0+if(below(sample*12,4),0,if(below(sample*12,8),value1,0));
wave_2_per_point10=
wave_2_per_point11=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_2_per_point12=y2 = y1*cos(t1)-z1*sin(t1);
wave_2_per_point13=z2 = y1*sin(t1)+z1*cos(t1);
wave_2_per_point14=x2 = z2*sin(t2)+x1*cos(t2);
wave_2_per_point15=z3 = z2*cos(t2)-x1*sin(t2);
wave_2_per_point16=x3 = x2*cos(t3)-y2*sin(t3);
wave_2_per_point17=y3 = y2*cos(t3)+x2*sin(t3);
wave_2_per_point18=//move resulting shape in 3d space
wave_2_per_point19=x4 = x3+t4;
wave_2_per_point20=y4 = y3;
wave_2_per_point21=z4 = z3+t5;
wave_2_per_point22=//draw 3d shape in 2d
wave_2_per_point23=x=0.5+0.5*(x4/(1+z4*0.5));
wave_2_per_point24=y=0.5+0.5*(y4/(1+z4*0.5));
wave_2_per_point25=
wave_2_per_point26=g = b+value1;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=x = .5 + (.12 + .02*sin(time*.8))*cos(sample*(100*sin(time*.1))+time*.8);
wave_3_per_point2=y = .5 + (.12 + .02*sin(time))*sin(sample*(100*sin(time*.5))+time*.5);
wave_3_per_point3=a = -.7+sin(sample*1000+time*2);
wave_3_per_point4=a = above(a,0);
wave_3_per_point5=
wave_3_per_point6=r = -.7+sin(sample*100+time*2);
wave_3_per_point7=g = -.7+sin((sample+.40)*100+time*2);
wave_3_per_point8=b = -.7+sin((sample+.77)*100+time*2);
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=q4 = 0.249+0.5*(int(rand(100))*0.01);
per_frame_init_2=q5 = 0.249+0.5*(int(rand(100))*0.01);
per_frame_init_3=q6 = 0.249+0.5*(int(rand(100))*0.01);
per_frame_1=chng=sin(time*.5);
per_frame_2=cthr=.9999;
per_frame_3=mq21=if(above(chng,cthr),rand(3),mq21);
per_frame_4=mq22=if(above(chng,cthr),rand(3),mq22);
per_frame_5=mq23=if(above(chng,cthr),rand(3),mq23);
per_frame_6=mq24=if(above(chng,cthr),rand(2),mq24);
per_frame_7=mq25=if(above(chng,cthr),rand(2),mq25);
per_frame_8=mq26=if(above(chng,cthr),rand(2),mq26);
per_frame_9=mq27=if(above(chng,cthr),rand(1),mq27);
per_frame_10=mq28=if(above(chng,cthr),rand(1),mq28);
per_frame_11=mq29=if(above(chng,cthr),rand(1)*.3,mq29);
per_frame_12=mq31=if(above(chng,cthr),rand(1)*.3,mq31);
per_frame_13=monitor=chng;
per_frame_14=q21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;
per_frame_15=q27=mq27;q28=mq28;q29=mq29;q31=mq31;
per_frame_16=
per_frame_17=monitor=mq1;
per_frame_18=vol=bass+treb+mid;
per_frame_19=atime=atime+vol;
per_frame_20=q11=.4+sin(atime*.006        )*.4;
per_frame_21=q12=.4+cos(atime*.00613828348)*.4;
per_frame_22=q13=.4+sin(atime*.00598593455)*.4;
per_frame_23=monitor=q13;
per_frame_24=q4=sin(atime*.03);
per_frame_25=q5=cos(atime*.030383824);
per_frame_26=q6=tan(atime*.029384834);
per_frame_27=
per_frame_28=wave_a =0;
per_frame_29=movement =movement + 0.5*(((bass+bass_att + 0.075*pow((bass+0.6*bass_att+0.2*treb_att),3)))/fps);
per_frame_30=movement = if(above(movement,10000), 0, movement);
per_frame_31=ob_b = q4+0.25*sin(movement*3.816);
per_frame_32=ob_g = q4+0.25*sin(movement*0.744);
per_frame_33=ob_r = q4+0.25*sin(movement*0.707);
per_frame_34=wrap =0;// above(bass+bass_att,3);
per_frame_35=decay=1;
per_frame_36=rot=0;
per_frame_37=zoom =0.98;
per_frame_38=mv_r = 0;
per_frame_39=mv_g = 0;
per_frame_40=mv_b =0;
per_frame_41=mv_dy = 0.03*sin(movement*0.34);
per_frame_42=mv_dx = 0.035*(sin(movement*0.217)+cos(movement*0.413)+sin(movement*0.311));
per_frame_43=warp=0;
per_frame_44=//dx =0.01*sin(movement*5);
per_frame_45=dy =0.0005*(bass+bass_att);
per_pixel_1=w=y*.99;
per_pixel_2=cc=w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*w*(sin(ang*(9.6+sin(time/12)*3))+sin(ang*(9.6+sin(time/7)*8.3)))/1.2 +1;
per_pixel_3=zoom= cc-.01;
per_pixel_4=dx=0+sin(bass+treb)/9988;
per_pixel_5=dy=-0.0041+(1-cc)*bass;
per_pixel_6=sx=y/44+1;
warp_1=`shader_body
warp_2=`{
warp_3=`float2 pixelsize = texsize.zw;
warp_4=`float1 conwar = tex2D( sampler_pw_main, uv + float2(-1,-1)*pixelsize).x;
warp_5=`       conwar += tex2D( sampler_pw_main, uv + float2(0,-1)*pixelsize).x;
warp_6=`       conwar += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).x;
warp_7=`
warp_8=`       conwar += tex2D( sampler_pw_main, uv + float2(-1,0)*pixelsize).x;
warp_9=`       conwar += tex2D( sampler_pw_main, uv + float2(1,0)*pixelsize).x;
warp_10=`
warp_11=`       conwar += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).x;
warp_12=`       conwar += tex2D( sampler_pw_main, uv + float2(0,1)*pixelsize).x;
warp_13=`       conwar += tex2D( sampler_pw_main, uv + float2(1,1)*pixelsize).x;
warp_14=`
warp_15=`float1 conwag = tex2D( sampler_pw_main, uv + float2(-1, 1)*pixelsize).z;
warp_16=`       conwag += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).z;
warp_17=`       conwag += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).z;
warp_18=`
warp_19=`       conwag += tex2D( sampler_pw_main, uv + float2(-1,0)*pixelsize).z;
warp_20=`       conwag += tex2D( sampler_pw_main, uv + float2(1,0)*pixelsize).z;
warp_21=`
warp_22=`       conwag += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).z;
warp_23=`       conwag += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).z;
warp_24=`       conwag += tex2D( sampler_pw_main, uv + float2(0,-1)*pixelsize).z;
warp_25=`
warp_26=`float1 conwab = tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).y;
warp_27=`       conwab += tex2D( sampler_pw_main, uv + float2(1,1)*pixelsize).y;
warp_28=`       conwab += tex2D( sampler_pw_main, uv + float2(0,-1)*pixelsize).y;
warp_29=`
warp_30=`       conwab += tex2D( sampler_pw_main, uv + float2(0,0)*pixelsize).y;
warp_31=`       conwab += tex2D( sampler_pw_main, uv + float2(-1,-1)*pixelsize).y;
warp_32=`
warp_33=`       conwab += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).y;
warp_34=`       conwab += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).y;
warp_35=`       conwab += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).y;
warp_36=`
warp_37=`float1 p = saturate (tex2D( sampler_pw_main, uv).x);
warp_38=`
warp_39=`
warp_40=`ret.x = saturate((1-abs(conwar-3)))*((1+roam_sin.z)*.75-p);
warp_41=`ret.y = saturate((1-abs(conwag-3)))*((1+roam_cos.y)*.8-p);
warp_42=`ret.z = saturate((1-abs(conwab-3)))*((1+roam_sin.x)*.86-p);
warp_43=`float4 noise9 = tex3D(sampler_noisevol_hq, 
warp_44=`                      ((uv.xyy*q27
warp_45=`                       )*texsize.xyy*texsize_noisevol_hq.zww
warp_46=`                      ).xyz*
warp_47=`                      float3(1,1,0)*0.05 + 
warp_48=`                      time*float3(0,0,1)*q29
warp_49=`                     );
warp_50=`if(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; 
warp_51=`if(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; 
warp_52=`if(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; 
warp_53=`ret.x += saturate(max(1-abs(conwar-2),(1+roam_cos.z)*.93-abs(conwag-3)))*p;
warp_54=`ret.y += saturate(max(1-abs(conwag-2),(1+roam_sin.y)*1.01-abs(conwab-3)))*p;
warp_55=`ret.z += saturate(max(1-abs(conwab-2),(1+roam_cos.x)*1.10-abs(conwar-3)))*p;
warp_56=`
warp_57=`}
comp_1=`sampler sampler_fc_sunrise;
comp_2=`float2 factorA, factorB, product;
comp_3=`float2 numerator, denominator, fraction;
comp_4=`shader_body
comp_5=`{
comp_6=`uv = 0.5 + (uv-0.5)*0.95;
comp_7=`float2 uvo = uv;
comp_8=`uv = (uv-0.5);
comp_9=`factorA = uv+ float2(q1,q2);
comp_10=`factorB = float2(8,0);
comp_11=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_12=`float2 uv1 = product;
comp_13=`factorA = uv+ float2(q3,q4);
comp_14=`factorB = float2(8,0);
comp_15=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_16=`float2 uv2 = product;
comp_17=`factorA = uv+ float2(q5,q6);
comp_18=`factorB = float2(8,0);
comp_19=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_20=`float2 uv3 = product;
comp_21=`factorA = uv+ float2(q7,q8);
comp_22=`factorB = float2(8,0);
comp_23=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_24=`float2 uv4 = product;
comp_25=`factorA = uv1;
comp_26=`factorB = uv2;
comp_27=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_28=`float2 uv12 = product;
comp_29=`factorA = uv3;
comp_30=`factorB = uv4;
comp_31=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_32=`float2 uv34 = product;
comp_33=`factorA = uv12;
comp_34=`factorB = uv34;
comp_35=`product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);
comp_36=`numerator = float2(1,0);
comp_37=`denominator = product;
comp_38=`fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
comp_39=`                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
comp_40=`                   (denominator.x*denominator.x + denominator.y*denominator.y);
comp_41=`uv = fraction.yx*float2(-1,1)*32;
comp_42=`uv = lerp(0.5 + (uvo-0.5)*2,uv+0.5,0.5);
comp_43=`float l = length(uv-0.5);
comp_44=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5); // Eo.S. mirror code with cutted borders
comp_45=`ret = lerp(float3(0.8,0.5,0),-0.5,(GetBlur2(uv)*2-GetPixel(uv)).x);
comp_46=`ret = lerp(ret,1,(GetBlur3(uv)*2-GetPixel(uv)).y*1.5);
comp_47=`float c =saturate(1.6-pow(l,6)*0.004);
comp_48=`ret = lerp((GetBlur3(uvo)*2-GetPixel(uvo)).y,ret,c);
comp_49=`}
